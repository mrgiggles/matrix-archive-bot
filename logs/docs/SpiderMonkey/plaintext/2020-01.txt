2020-01-16
[01:08:54.0743] <arai>
is this bridged to IRC ?

[01:09:10.0398] <arai>
apparently not

[02:40:07.0311] <jandem>
no :)

[08:32:59.0317] <yulia>
hi

[08:37:26.0458] <yulia>
are there other rooms that I should join? I am just in this one and the general one


2020-01-17
[23:53:55.0101] <jandem>
there's also the Firefox room and #developers

[01:53:38.0800] <bnjbvr>
hello world!

[05:26:58.0065] <yulia>
thank you arai, for all the help

[06:39:28.0406] <nbp>
I have the power!

[06:42:48.0755] <jandem>
haha

[07:41:25.0486] <jonco>
jandem: thank you for preserving the topic :)

[07:56:58.0811] <yulia>
i made a js-frontend room, just in case

[07:57:10.0188] <yulia>
but there isnt that much traffic here now so we can keep things here

[07:57:39.0417] <lth>
yeah, Thou Shalt Not Multiply Rooms Beyond Necessity

[07:59:58.0047] <arai>
TIL "shalt"

[08:04:50.0511] <yulia>
well i have no idea how to delete it :P 

[08:19:10.0809] <arai>
I feel, I should extend Phabrinter to embed ~5 lines of code for each comment that is above the diff

[08:28:01.0667] <nbp>
> <@yulia:mozilla.org> i made a js-frontend room, just in case

I do not yet see it in the list of rooms.

[08:29:45.0705] <nbp>
the link from slack seems to be an invite only link.

[08:34:00.0168] <mgaudet>
nbp: In your parse benchmark you use `parse(path, {module: mode == 'module'})`. I realized this morning while talking to steve this means that we're not doing BCE, which of course means I didn't see any performance impacts for BCE. Do you know if we have a pre-built builtin that can parse a file -and do bce- on it? (I think `load` doesnt work, just based on timing) 

[08:37:56.0567] <nbp>
mgaudet: yes there is. Look at the xdr directory in the jit-test, or grep evalWithCache.

[08:38:44.0607] <nbp>
mgaudet: sorry, miss-interpreted your question.

[08:39:04.0103] <nbp>
jorendorff or arai might know better.

[08:43:31.0656] <arai>
 `compile` shell builtin compiles the passes string (not directly a file tho)

[08:44:21.0119] <arai>
for modules, I think `parseModule` also compiles?

[08:45:26.0961] <nbp>
mgaudet: ^

[08:45:48.0540] <mgaudet>
Ok, thanks for pointers. I'll see what I can do with that

[13:35:41.0191] <djvj>
so, ds::InlineTable doesn't say so explicitly, but it's Key type needs to be a pointer.

[13:36:02.0784] <djvj>
little 'key == nullptr' and 'key = nullptr' and some 'nullptr == key' sprinkled around there in the impl.

[13:53:53.0374] <mgaudet>
djvj: Hrm. If it wasn't for the `key = nullptr` I'd have imagined just defining `operator=(nullptr_t)` would have sufficed (and fixing the yoda conditions) 

[13:55:28.0974] <mgaudet>
djvj: to your ni?, I definitely didn't run into this, didn't get far enough. What table is this? 


2020-01-19
[09:22:02.0690] <tcampbell>
Should this room be renamed to SpiderMonkey (vs spidermonkey)?

[10:54:35.0870] <jandem>
> <@tcampbell:mozilla.org> Should this room be renamed to SpiderMonkey (vs spidermonkey)?

either works for me. Right now room names seem to be a mix of lowercase (from irc, slack) and camel case

[10:58:44.0754] <jandem>
camel case seems to be winning :p


2020-01-20
[03:30:27.0559] <nbp>
arai & jorendorff, I will probably got delayed for the new parser generator, as I submitted a lightning talk to present SpiderMonkey projects. I have drafted most of what I need on paper. now should just be a question of implementation and testing, but I do not expect to have it by Wednesday, and I am rarely code-productive in all hands.

[03:31:00.0158] <nbp>
I'll try to get something in place for the week after the all hands.

[03:32:19.0678] <arai>
I see

[03:35:47.0869] <arai>
I think, for now, we can fix lexer/parser related issues with some workaround to just throw NotImplemented

[03:35:52.0700] <arai>
at least in most case

[03:36:19.0106] <arai>
and I'll work on scope things that won't have much dependency against parser internal

[05:31:12.0297] <yulia>
nbp arai i think the frontend room is now joinable

[05:32:41.0491] <nbp>
yulia, I do not see it when I use the "Explore" button.

[05:36:51.0728] <yulia>
nbp: #js-frontend:mozilla.org does this work?

[05:37:12.0239] <yulia>
nbp: arai im also struggling a bit with getting on the jsparagus discord

[05:37:35.0779] <yulia>
the link just takes me to an empty channel

[05:37:52.0778] <arai>
discord?

[05:38:13.0183] <yulia>
we have a discord for jsparagus it looks like: https://discordapp.com/channels/595323158140158003/606106024595947584

[05:38:15.0070] <nbp>
yulia: this link: https://discord.gg/w6XPaa ?

[05:38:20.0239] <yulia>
this is in the readme now (im reviewing it)

[05:39:06.0458] <yulia>
perfect, thanks nbp 

[05:40:01.0485] <arai>
I don't see the link here  https://github.com/mozilla-spidermonkey/jsparagus

[05:40:27.0874] <arai>
also, why discord ?  what is it for?

[05:40:49.0468] <Benjamin Bouvier>
if you're using Discord for instant talk: did you know that Riot can do this too, with webrtc? </ad>

[05:41:47.0462] <nbp>
We are not, we are using discord because another JS engine, named boa, written in Rust is also using it. This was a way to put the project in a community of Rust + JS projects.

[05:46:43.0179] <yulia>
arai: its in the readme pr --> https://github.com/mozilla-spidermonkey/jsparagus/pull/90

[05:46:47.0910] <yulia>
im reviewing and checking each step now

[05:48:54.0758] <arai>
ah, I see

[06:14:31.0741] <jandem>
jonco ping. Is there a reason the patch calls freezeSelfHostingZone after initMainAtomsTables instead of initSelfHosting?

[06:38:36.0759] <jonco>
jandem: so I didn't try it that way round, but I think the GC expects the atoms tables to have been initialized 

[06:38:44.0929] <jonco>
allstarschh: 

[06:38:47.0097] <jonco>
cheers

[06:41:54.0090] <jandem>
jonco: ok, I left a comment

[06:47:36.0595] <jonco>
jandem: thanks

[08:01:21.0130] <yulia>
arai: nbp is there a disassembler that I can use with the rust frontend?

[08:01:37.0201] <yulia>
it looks like the one in the shell is still the one from the old codebase

[09:46:44.0168] <nbp>
yulia:  the `dis` function in the JS shell should be enough, as both bytecode emitter should emit the same format.

[11:26:58.0922] <tcampbell>
Congrats js staff. You all are helping with moderation :)

[11:27:48.0805] <tcampbell>
(can add wasm people if they want, but I figured they are responsible for the WebAssembly channel)

[11:28:12.0610] <djvj>
tcampbell changed the power level of @djvj:mozilla.org from Default to Admin.

[11:28:15.0042] <djvj>
https://i.imgur.com/Ej1wqu7.gif

[11:29:08.0012] <djvj>
https://i.imgur.com/GBrrYVz.gif

[11:31:10.0818] <tcampbell>
This power only comes with responsibility I'm afraid

[11:33:35.0264] <djvj>
So the python 2.7 => 3.0 thing seems a lot like climate change.  Feelings of impending doom, warnings all over the place, and everyone just nods along.

[11:34:24.0709] <tcampbell>
didn't the deadline get pushed back?

[11:35:01.0068] <djvj>
don't know.  this was prompted by noticing that the "python2.7 bad" message when I run mach try has been upgraded to "serious brown" color.

[11:35:27.0946] <tcampbell>
haha

[11:37:21.0813] <tcampbell>
ah, Python 2.7.18 goes out in April and is supposed to be the last 2.x build

[11:39:05.0541] <zombie>
y2k

[11:40:00.0204] <zombie>
Is there an idiom that's the opposite of "self fulfilling prophecy"?

[11:40:26.0066] <zombie>
something along the lines of "self-defeating doomsayer"

[11:44:23.0991] <tcampbell>
suprised-pikachu-meme?

[11:46:08.0910] <djvj>
zombie: what's the term they use in stock markets to describe the phenomenon where when everyone knows a "winning strategy", it stops winning.

[11:47:59.0914] <zombie>
something something Nesh equilibrium?

[13:02:44.0444] <tcampbell>
mgaudet: if you have a priority list for those reviews, let me know

[13:03:45.0478] <mgaudet>
tcampbell: That new stack is just piecemeal removing deferred mode. bottom to top works, should be mostly low-effort reviewing. Almost all the patches are just code removal

[13:05:02.0762] <tcampbell>
mgaudet: environment-shapes bug comes first?

[13:05:32.0988] <mgaudet>
tcampbell: No those can wait till after (though, would be nice to push them forward eventually)

[13:05:44.0348] <tcampbell>
got it

[13:06:05.0243] <mgaudet>
tcampbell: may need rethinking a bit after the removal. I should try rebasing them and see. 

[14:03:02.0946] <mgaudet>
tcampbell: Ok, took a closer look at the environment shape stuff (and am submitting rebased patches). Looks like this complexity stays until we are able to clear out XDR (which uses FooScope::createWithData)


2020-01-21
[01:07:13.0306] <Benjamin Bouvier>
djvj: zombie, Nash* equilibrium? this doesn't mean a winning strategy is no longer winning, it just means it's known (it's the steady state of a game where everybody figured the best possible moves of every player)

[02:22:53.0104] <yulia>
i am struggling to run the reflect-parse tests. When I try to run the expressions.js test, it says no test was run. I tried both options mentioned in the output, and I tried to remove the comment at the top of the file that skips the test... is there something else i can try?

[02:26:25.0098] <jandem>
you mean the expression.js test? `$ ../tests/jstests.py dist/bin/js reflect-parse/expression.js` works for me

[02:26:58.0728] <yulia>
ah that works, thanks!

[02:27:37.0049] <yulia>
not sure why the way i was doing it was working for other tests, but oh well

[02:49:10.0673] <nbp>
zombie djvj : I think the “prisoner dilemma” is more representative of what you just described. If everybody plays the best strategy individually, then it makes the result worse for everyone.

[02:54:04.0681] <Benjamin Bouvier>
> <@nbp:mozilla.org> zombie djvj : I think the “prisoner dilemma” is more representative of what you just described. If everybody plays the best strategy individually, then it makes the result worse for everyone.

yep, it's a classical example to show that the Nash equilibrium (= try to guess what other will play and play accordingly) is different from the Pareto-optimal situation (= try to maximize social utility)

[03:03:24.0096] <zombie>
You're always better of snitching, no matter what others do.  Not sure it holds for stock markets.

[03:03:39.0390] <zombie>
 * You're always better off snitching, no matter what others do.  Not sure it holds for stock markets.

[03:04:09.0658] <jonco>
do the awfy tests still get run?  there are no results on perfherder

[03:04:41.0607] <Benjamin Bouvier>
i see test results on the website dated from today https://arewefastyet.com/win10/overview?numDays=60

[03:06:19.0973] <jonco>
hmm, why doesn't this show up in perfherder

[03:06:22.0032] <jonco>
?

[03:06:35.0142] <jonco>
Benjamin Bouvier: thanks

[03:28:28.0137] <jonco>
Benjamin Bouvier: looks like we don't run any of the original awfy benchmarks (octane, sunspider, kraken) on android though

[03:44:17.0867] <yulia>
arai nbp i have a first go at implementing short circuiting. its very basic but happy for early comments: https://github.com/mozilla-spidermonkey/jsparagus/pull/92

[08:26:00.0451] <arai>
is it possible to auto-link bug number here?

[08:27:36.0274] <Benjamin Bouvier>
arai: i've got a WIP Matrix bot for this (among other things), it needs an account so it can't be enabled yet.

[08:28:06.0035] <Benjamin Bouvier>
[if anyone is interested in hacking the bot](https://github.com/bnjbvr/botzilla), cc sfink

[08:28:19.0662] <arai>
great :D

[10:22:24.0746] <nbp>
/me briefly looking at  Bug 1598612.

[10:22:55.0870] <nbp>
Do we have any way to have an init-sequence for the testing builtin? and also a destructing sequence?

[10:23:20.0669] <nbp>
I am trying to migrate the sharedArrayBuffer from the shell to the testing functions.

[10:23:59.0458] <nbp>
I would prefer not having to add it unconditionally to every runtime :/

[10:39:46.0841] <kashav>
sfink: hi, I have this hazard failure, and refs.txt.gz is empty https://treeherder.mozilla.org/#/jobs?repo=autoland&selectedJob=285670256&resultStatus=testfailed%2Cbusted%2Cexception&revision=7e39efd27d4e15403220f43b20ecd5059c6c4365&searchStr=linux%2Cx64%2Cdebug%2Chazard-linux64-haz%2Fdebug%2C%28h%29

[10:40:03.0316] <kashav>
it doesn't reproduce in a local try push https://treeherder.mozilla.org/#/jobs?repo=try&revision=d8c053ae9759a144d36c08b892d1a03890589f9b&selectedJob=285684267

[10:40:24.0244] <kashav>
is it possible that this is just bug 1541711?

[10:41:03.0581] <sfink>
I'll take a look

[10:42:22.0034] <sfink>
hm, looks like a build failure

[10:42:52.0377] <sfink>
ugh, crashing the plugin. Didn't I just fix that?

[10:45:09.0118] <sfink>
(in bug 1602312). I guess this is a new one.

[10:47:08.0399] <tcampbell>
nbp: what sort of init stuff? adding conditional stuff to js::DefineTestingFunctions might not be the worst

[10:48:02.0133] <nbp>
tcampbell: so far, I am calling DestructSharedObjectMailbox from the destroyRuntime function, however it might be too late.

[10:48:22.0663] <tcampbell>
hmm.. 

[10:48:38.0471] <nbp>
(not yet tested)

[10:51:06.0855] <sfink>
@kashav I'm pretty confused by the try push, though. Plugin crashes are usually fully deterministic. I'll try pushing the exact autoland revision and see what happens.

[10:51:28.0987] <sfink>
oh, is that not how you link to someone here?

[10:51:50.0565] <sfink>
oh, I guess you just click

[10:51:54.0648] <sfink>
on the user

[10:52:06.0792] <sfink>
is there a way of doing it with simply typing?

[10:52:12.0951] <kashav>
I got a notification for that

[10:52:26.0718] <nbp>
sfink:  @sfink<TAB> or @sfink<UP>

[10:52:32.0322] <sfink>
ah, ok

[10:52:55.0428] <sfink>
though honestly the magic links are pretty ugly; maybe doing plain nick: is better :-)

[11:18:55.0367] <nbp>
/me add an alias for his nick.

[11:19:07.0458] <nbp>
/me  * add an highlight for his nick.

[12:46:58.0398] <iain>
sfink: ping

[13:03:59.0847] <sfink>
iain: pong

[13:04:59.0241] <iain>
What are the intended semantics of masm.branchValueIsNurseryCell if cond is NotEqual? I'm looking at this code here: https://searchfox.org/mozilla-central/source/js/src/jit/arm/MacroAssembler-arm.cpp#4562-4581

[13:06:00.0820] <sfink>
just flow through, don't branch

[13:06:29.0770] <iain>
And unless I've managed to thoroughly confuse myself, which is possible, it seems like we end up in different branches (checkAddress vs done) for Object/String vs BigInt (in the NotEqual case)

[13:06:39.0259] <iain>
Which seems bad

[13:07:35.0829] <sfink>
yeah, that code doesn't look right at first glance, let me trace through...

[13:09:43.0177] <sfink>
no, I think it's right

[13:10:18.0732] <sfink>
if cond==NotEqual, and we're a BigInt, we'll end up in checkAddress

[13:10:28.0315] <sfink>
same if cond==NotEqual and we're either an object or string

[13:13:19.0344] <iain>
Oh, I might have managed to thoroughly confuse myself

[13:14:05.0646] <sfink>
it's pretty weird because of the NotEqual, cond == Assembler::Equal ? &done : label stuff

[13:14:26.0722] <iain>
Yeah

[13:14:36.0799] <iain>
Too many labels floating around, and I think I conflated some of them in my head

[13:18:48.0479] <cfallin>
That's some clever hackery; looks like it's meant to reduce number of taken branches by one in the bigint case?

[13:22:31.0379] <sfink>
Yeah. I'm not sure who started that pattern in our code. I think I just cargo-culted what was already there.

[13:39:03.0912] <cfallin>
Matt suggested I ask here: a fuzzing-derived test case (bug 1610192) takes ~2 minutes to run on a debug build. Prior landing attempt rolled back because of slow tests on arm64 hardware. Do we have a standard for how long is too long for a test? (Unfortunately, it's as short as it can be while hitting the old, now-fixed behavior)

[13:39:32.0391] <iain>
Two minutes is too long.

[13:40:17.0756] <cfallin>
(Opt build is ~2s, fwiw)

[13:40:23.0554] <sfink>
it's probably running on the arm64 simulator

[13:40:49.0144] <sfink>
if you need the full test, then you can probably just add it to js/src/devtools/automation/arm64-jstests-slow.txt

[13:41:03.0090] <sfink>
as you can see from that file, we're pretty liberal about applying it

[13:41:32.0016] <cfallin>
Oh, the 2 min was a local test on my laptop. Matt suggested (and I agree) that a single test taking that long on a local debug build is potentially an issue too

[13:45:42.0267] <sfink>
yeah, I guess I don't have a good feel for that kind of choice

[13:46:37.0438] <cfallin>
Unfortunately I chose 23 bits for part of an encoding so the 2^23-element array is the minimal example. I'll make my bugs faster in the future. :-/

[13:46:45.0437] <cfallin>
Anyway thanks!

[13:50:28.0926] <mgaudet>
cfallin: I wonder if you could build something out of the <can't think of word right now will use 'pragma'> `// |jit-test| skip-if: !('oomTest' in this)` pragma, to detect a debug build and skip

[13:50:50.0730] <sfink>
ooh, that's interesting

[13:50:51.0934] <iain>
Speaking only for my own vague sense of propriety: we run our tests a lot. Even a test that takes 2 seconds will eat up a fair amount of compute over its lifetime. If it catches a real problem in the future, that's still totally worthwhile. I've written some test cases, though, where the only way they would be more likely than a random fuzz test to catch a future bug would be if I accidentally reverted my patch. In those cases, I think it's okay not to add a long-running test.

[13:51:21.0587] <sfink>
could also use getBuildConfiguration().debug

[13:51:46.0319] <mgaudet>
cfallin: https://searchfox.org/mozilla-central/source/js/src/jit-test/tests/basic/testOOMInAutoEnterCompartment.js

[13:52:06.0282] <mgaudet>
sfink: beats me to it :_ 

[13:52:16.0327] <mgaudet>
 * sfink: beats me to it :)

[13:53:21.0519] <cfallin>
Alright, I'll look into the jit-test pragma option. Thanks!


2020-01-22
[18:01:15.0438] <pbone>
LOL. WebVM meeting at 2am tomorrow morning.  OTOH I could stay up late and begin to adjust my bodyclock for Berlin.

[18:01:49.0820] <pbone>
(No, I won't do that, I'll read the minutes)

[07:35:39.0965] <nbp>
/me some drilling sounds, can't hear a thing anymore :/

[07:44:30.0361] <nbp>
jorendorff: the master archiver!

[08:43:34.0673] <tcampbell>
I guess you have to opt-in in settings to show your flairs?

[08:43:49.0030] <djvj>
flairs?

[08:44:01.0823] <tcampbell>
the little 'm'

[08:44:14.0049] <yulia>
woah

[08:44:18.0948] <yulia>
i feel so official

[08:44:28.0345] <nbp>
I guess I have it too.

[08:44:29.0163] <tcampbell>
people with @mozilla addresses are being added to a Mozilla "community"

[08:44:35.0020] <nbp>
or not :/

[08:44:45.0312] <Benjamin Bouvier>
nbp:  need to enable it in settings > baddges

[08:44:45.0670] <tcampbell>
nbp: go to your own settings and enable

[08:44:52.0157] <jorendorff>
ew

[08:44:53.0710] <Benjamin Bouvier>
 * nbp:  need to enable it in settings > flairs ("badges" in french)

[08:44:55.0720] <tcampbell>
both room and user must enable

[08:45:02.0618] <nbp>
/me is not sure whether he wants to enable that …

[08:45:19.0719] <jorendorff>
i turned it off

[09:15:54.0458] <jandem>
feel free to turn it off for this room, I wanted to try it but I don't really care either way

[12:16:31.0902] <tcampbell>
mgaudet: I'm not sure I follow the no rval stuff. Top-level scripts are the *common* use of that option

[12:21:19.0419] <mgaudet>
tcampbell: I get really confused with this every time I look at it because the double negatives involved with the option name

[12:21:25.0894] <mgaudet>
 * tcampbell: I get really confused with this every time I look at it because the double negatives involved with the flag name

[12:21:53.0944] <mgaudet>
tcampbell: (and I splinched that comment while editing, which doesn't help)

[12:23:24.0684] <tcampbell>
mgaudet: oh, this is inside a isFunctionBox() guard

[12:23:40.0349] <tcampbell>
so "top-level" is probably wrong

[12:26:17.0681] <mgaudet>
tcampbell: Honestly with this patch, these comments are all about trying to reason through cases that don't exist yet, and so maybe we throw away the comments and the if !parent) asserts? 

[12:26:21.0967] <mgaudet>
 * tcampbell: Honestly with this patch, these comments are all about trying to reason through cases that don't exist yet, and so maybe we throw away the comments and the if !parent asserts?

[13:16:30.0851] <mconca>
Someone this morning asked if we still care about ARM32.  The answer is yes - just over a third of our Android users are still on ARM32 devices.

[13:16:33.0812] <mconca>
https://sql.telemetry.mozilla.org/queries/67158#170079

[13:33:11.0593] <tcampbell>
mconca: thanks!


2020-01-23
[23:38:04.0552] <lth>
mconca: thanks!

[00:37:54.0696] <yulia>
who is djvj?

[00:38:16.0842] <jandem>
djvj = Kannan

[00:38:21.0300] <yulia>
ah, thanks

[09:14:54.0600] <jorendorff>
Is there a way to ask a `UniqueChars filename;` to allocate an empty string that's better than `filename = new char[1]; filename[0] = '\0';`?

[09:15:45.0954] <nbp>
yulia: You might want to align the red-boxes for the slides 13 & 14 too, such that the non-changing code does not blink when switching slides.

[09:18:15.0333] <jorendorff>
/me is finally back in Firefox Nightly

[09:18:25.0734] <jorendorff>
about:support and clicking the Refresh thing worked for me

[09:18:52.0547] <jorendorff>
lost all my unauthorized about:config scribbling :(

[09:18:55.0497] <yulia>
nbp: good idea

[09:32:58.0584] <yulia>
folks who want to do stuff in berlin: I sent out 3 emails based on the interest in our meeting yesterday. For the transmediale event, I sent out a doodle. The doodle was a little wrong (i thought our triple dinner was on thursday not tuesday) and has been updated

[09:37:16.0171] <nbp>
Thanks, I saw, did not yet replied.

[10:05:51.0400] <tcampbell>
jorendorff: https://searchfox.org/mozilla-central/source/js/src/util/Text.cpp#142

[11:39:29.0219] <evilpie>
Hello Matrix!

[11:39:58.0716] <sfink>
\o/

[11:40:08.0133] <iain>
🎉

[11:40:29.0253] <sfink>
good to see someone who couldn't have used the stupid slack channel

[11:41:28.0712] <evilpie>
technically you can get approved for Slack, but I didn't think it was necessary

[11:42:30.0873] <sfink>
yeah, and it would reduce pressure on getting rid of it (for this sort of usage)

[11:43:12.0235] <snek>
:wave:

[11:43:18.0771] <snek>
👋

[11:43:23.0794] <snek>
there was an attempt

[11:46:48.0551] <evilpie>
!pun

[11:47:05.0521] <evilpie>
mhm bnjbvr's bot isn't online yet

[12:00:31.0600] <lth>
yulia: did not see any mail re team events, did you use a narrow distribution?

[12:00:42.0178] <lth>
(wasm developers also want to have fun)

[12:02:49.0961] <sfink>
I think she may have only sent it to the people who registered interest by putting their names into the monthly meeting agenda document

[12:26:59.0584] <mgaudet>
So, in an attempt to avoid future backed-out-because-you-forgot-`explicit`, I've been looking into Bug 1594851. The only issue being that all our linux shell builds default to `gcc` not `clang`. Anyone have any objection to `SM(p)` becoming a clang build? 

[12:29:53.0189] <sfink>
whoa, you're right, they do. No objection from me.

[12:30:12.0292] <sfink>
I guess that would just be changing https://searchfox.org/mozilla-central/source/js/src/devtools/automation/autospider.py#225

[12:34:39.0053] <mgaudet>
sfink: Oh, I was thinking I'd put it in the `plain` variant (https://searchfox.org/mozilla-central/source/js/src/devtools/automation/variants/plain) 

[12:34:47.0553] <mgaudet>
(and maybe `plain-debug`) 

[12:35:23.0991] <sfink>
I'm not sure there's any benefit in having gcc used in much of anything that doesn't need it

[12:35:45.0021] <mgaudet>
Ok. I'll open a bug + make a patch and we'll see what try says.

[12:35:46.0754] <sfink>
hazard builds and code coverage builds need it

[12:35:51.0752] <sfink>
admittedly, your change is much safer

[12:36:45.0913] <mgaudet>
sfink: Right; I naively assumed that we'd default to clang and use gcc for hazard explicitly. 

on the flip side, I've found `gcc`-unfriendly patterns via try build before, and so it would be nice if that continued to happen .

[12:37:03.0416] <sfink>
yeah, that's true

[12:40:08.0403] <mgaudet>
sfink: I think it's going to be safest to opt plain into clang, and leave everything else on GCC for now. I will still open a bug about changing the default where we can discuss the options in more detail. 

[12:40:25.0546] <sfink>
sounds good to me

[14:56:46.0083] <mccr8>
"Checkpoint JS1.4 from JS_STABLE_10131998_BRANCH." Starting to regret looking at JS exception code.

[15:00:44.0987] <mgaudet>
/me discovers `/rainbowme` and needs to try it out


2020-01-24
[21:50:55.0400] <bzbarsky>
mccr8: nothing quite like code that's legal to drink...

[21:51:13.0055] <bzbarsky>
(in the US; this is obviously a less impressive feat in some other places)

[23:32:38.0271] <yulia>
lth: I emailed just the folks who added their names -- would you be interested as well?

[23:34:02.0531] <lth>
yulia, i would welcome a chance to go back to the pergamon :-)

[23:34:17.0156] <lth>
(might go on my own if there's not a crowd)

[23:34:44.0937] <yulia>
lth: great! i think Thursday might be the day. Jason and Matt are also interested. would anyone be joining you? 

[23:34:53.0785] <lth>
nah, just me

[23:35:34.0842] <yulia>
Do you think it would be an issue for you to leave allhands a little early? the time slot from 3 pm on thursday is cross team time if i remember correctly. I was thinking of leaving between 4 and 5:30 so we get at least 2 hours at the pergamon

[23:37:18.0415] <lth>
sounds fine

[23:39:30.0470] <yulia>
ok great, once I confirm with the other two, I will book the time slot

[02:35:45.0019] <decoder>
bzbarsky: I found quite some code in our codebase that isn't just legal to drink (according to EU laws), but also looks particularly drunk^^

[03:39:48.0596] <evilpie>
¯\_(ツ)_/¯ perfect

[05:23:21.0493] <evilpie>
I am tempted to write an interpreter in Rust for the bytecode generated by jspargus

[05:23:36.0369] <jorendorff>
I knowwwww

[05:23:39.0178] <jorendorff>
:D

[05:27:10.0563] <nbp>
evilpie: That would be an awesome idea, and then we could write a JIT which extend the Rust compiler to unroll the interpreter loop and get the equivalent of a Baseline compiler! (hum … that reminds me of something …)

[05:27:38.0915] <yulia>
jorendorff: mgaudet how do you two feel about pergamon on thursday?

[06:02:50.0913] <evilpie>
https://github.com/evilpie/jsparagus/commit/ae8ba42049a723ac5de9f726332064ba64350939

[06:42:12.0988] <nbp>
decoder: Would you be interested in presenting libFuzzer to the JS team in a more formal persentation next week?

[06:43:31.0061] <nbp>
I found it really useful the last time, and made good progress using this knowledge! Would be really good to share this knowledge with the rest of the team.

[06:53:48.0278] <jorendorff>
yulia: are you really creating a milestone now or shall i

[06:54:15.0790] <yulia>
jorendorff: oh, please go ahead!

[06:54:31.0043] <yulia>
i was staring at github actions 😅 

[06:54:39.0525] <jorendorff>
ok!

[06:58:55.0772] <yulia>
jorendorff: tcampbell sfink do you see any issues with enabling this for the jsaparagus repo?

[06:59:12.0792] <jorendorff>
wow do I not know what that is

[06:59:32.0162] <yulia>
its the github actions ci, its built in so there isnt much configuration

[07:00:09.0854] <yulia>
well, its a bit more: https://github.com/features/actions

[07:00:36.0638] <jorendorff>
Yeah, I was just reading that and it doesn't make it sound like CI

[07:01:00.0817] <jorendorff>
@yulia OK, turn it on!

[07:01:11.0828] <jorendorff>
 * yulia: OK, turn it on!

[07:01:34.0613] <tcampbell>
I have no idea either way. You could check the github policies on mana and see if there is any noted concern

[07:01:39.0848] <yulia>
this was what i was thinking -- it looks pretty minimal :https://github.com/icepuma/rust-action

[07:01:51.0539] <yulia>
tcampbell: thanks

[07:02:10.0361] <jorendorff>
yulia: We may have to restructure the repository in order to get a canned script to work,

[07:02:23.0405] <jorendorff>
just because Rust repositories usually look a certain way

[07:02:34.0298] <jorendorff>
ours is like that but with everything under the `rust` directory

[07:03:36.0165] <jorendorff>
(...this is one of the many ways language communities naturally discourage integration with code in other languages)

[07:03:54.0588] <yulia>
i think we can do `make all && make check && cd rust ...` or something similar?

[07:04:52.0360] <yulia>
if there are any issues i will fall back on another solution

[07:14:22.0901] <yulia>
hm, looks like it isnt enabled yet, ill ping you directly

[07:15:56.0117] <jorendorff>
yulia: Try now

[07:16:22.0045] <jorendorff>
tcampbell:  I changed it in the team settings. I think that's fine

[07:17:08.0014] <tcampbell>
👍️

[08:18:18.0600] <mgaudet>
> <@yulia:mozilla.org> jorendorff: mgaudet how do you two feel about pergamon on thursday?

Works for me :) 

[08:31:13.0245] <decoder>
@nbp I am still sick so I can't really prepare any major slides right now, but I would be happy to sit down with a few engineers and demo it briefly for sure. maybe if I recover quickly enough, I can make some slides too. It also depends on the time slot

[08:31:18.0072] <decoder>
nbp: ^^

[08:31:59.0027] <nbp>
I do not think slides would be needed, I think it would be practical as a start hacking thing.

[08:32:45.0511] <nbp>
decoder: if you want to do slides, just a command line slide and what are the major functions would be sufficient to get everybody hacking, and asking questions.

[08:39:03.0478] <mgaudet>
regarding patch reordering (mentioned on #jsapi): there's a new `moz-phab reorg` command that's supposed to re-order stacks to match local. 

Now, the first time I tried it I broke it, but worth noting.

[09:07:27.0780] <decoder>
nbp: is there a time slot for this already?

[09:08:21.0306] <nbp>
I do not think there is, but we should make one, probably by creating a calendar item with an invite and using the platform room

[11:01:26.0129] <sfink>
I swear phabricator just ate half my comment.

[11:05:44.0579] <sfink>
I need to figure out if there's a way to configure Riot for a different look and feel. Right now, it seems to subtly favor people over conversations. I definitely prefer my ancient chatzilla's IRC interface.

[11:06:13.0478] <jorendorff>
"people over conversations" how

[11:06:20.0480] <sfink>
it feels closer to a textual log with decorations than decorations with some chunks of text here and there

[11:06:33.0624] <sfink>
(chatzilla feels closer to a textual log, that is)

[11:06:40.0447] <jorendorff>
yes

[11:08:04.0644] <sfink>
but as usual, I'm going to try to resist playing with settings and configuration for a while, so I at least get comfortable to the new thing and its advantages before I scream omg change too loudly

[11:08:25.0110] <sfink>
 * but as usual, I'm going to try to resist playing with settings and configuration for a while, so I at least get comfortable with the new thing and its advantages before I scream omg change too loudly

[11:09:02.0527] <sfink>
ooh, I'm always pretty negative about the ability to edit things in chat, but... actually, for minor stuff it's quite nice

[11:09:42.0889] <jorendorff>
yeah, it is nice. i also like using it to completely alter the tone and content of what I just said

[11:09:50.0231] <jorendorff>
(not even lying)

[11:10:01.0622] <sfink>
I hate that jorendorff guy

[11:10:08.0112] <sfink>
 * I love that jorendorff guy

[11:10:18.0555] <sfink>
 * I love me my potatoes

[11:11:23.0043] <sfink>
interesting that the edits view shows the original unmarked and deltas from that, instead of the other way around

[11:14:32.0057] <tcampbell>
jorendorff sorry, I forgot about meeting and am currently in transit. Can we cancel

[12:06:26.0387] <jorendorff>
tcampbell: No worries. See you next week.

[12:21:10.0747] <mgaudet>
sfink: Thanks for mentioning `conditional-configure-args`: I went hunting for the like and didn't find it, hence my slightly wonky solution. Will re-work 

[13:08:35.0465] <evilpie>
jorendorff: so would the interpreter be something we would be open to merging?

[13:09:11.0561] <jorendorff>
evilpie: Yes.

[13:09:28.0564] <evilpie>
ok cool, I will fix it up so we don't panic

[13:10:04.0982] <jorendorff>
evilpie: it'll be tier-2 for us, but i think it's good to have

[13:10:32.0065] <djvj>
are you talking about the tiny rust interpreter you linked to?

[13:12:31.0352] <evilpie>
yeah

[13:13:01.0637] <jorendorff>
I mean, it's not like the other things in the repo

[13:13:28.0003] <jorendorff>
if it stops being maintained, we can delete it or spin it out

[13:13:46.0054] <djvj>
yeah it doesn't really interfere with anything

[13:13:56.0229] <jorendorff>
and keeping it in a separate repo is a real drag

[13:14:08.0806] <jorendorff>
since the parser API (in particular the AST) won't be stable for some time.

[13:14:14.0763] <djvj>
and it serves as a possible good client / future test infra

[15:19:31.0756] <sfink>
confession: I made firefox leak lots of memory when you reload. Fortunately, it only seems to be happening on the obscure sites "youtube" and "facebook", whatever those are.

[15:19:38.0415] <sfink>
(yes, I know the bot's not here.)

[15:36:35.0774] <mgaudet>
confession: I may have made a huge mistake trying to submit a queue of niece small reviewable changes.

(expecting 15 min of `moz-phab` at current pace of submissions...) 

[15:36:56.0123] <jorendorff>
the worst

[15:42:05.0788] <mgaudet>
(yeah, it's not great to have backpressure against that practice...) 

[15:42:22.0825] <mgaudet>
I am sure it's on the conduit team's radar

[15:47:26.0677] <mgaudet>
`real    12m34.757s`; missed by a couple mins 


2020-01-25
[13:47:47.0842] <decoder>
nbp: let me know when you have a time slot for that fuzzing discussion, I will try to make it (you can check my calendar for open slots, I don't have too many things right now that are mandatory)

[13:49:06.0844] <emilio>
mgaudet: Do you know if there's a bug on file for `moz-phab`s performance? Whenever I have to submit a bunch of patches I end up using `phlay` because of this :(

[13:51:00.0688] <mgaudet>
emilio: off the top of my head, I can’t point at one, but IIRC it was definitely an acknowledged problem. 

I think they were looking into ways to minimize the rebasing (avoiding O(n^2) behaviour) and potentially even remove the in-commit metadata entirely. 

Not at a computer tho. 

[13:51:34.0784] <emilio>
np, thanks for the answer!

[13:51:58.0747] <emilio>
phlay does in-memory rebase and commit-message-editing so it's pretty ok for huge stacks...


2020-01-27
[03:24:21.0584] <waldo>
Left Göttingen fifteen minutes ago, 2h to go to Berlin.  \o/

[05:32:03.0765] <zbraniecki>
waldo: any reason for me not to consider speeding up https://github.com/tc39/proposal-intl-datetime-style for stage 4?

[06:34:03.0577] <evilpie>
I am in Berlin now

[07:22:43.0728] <jorendorff>
emilio: ping

[07:23:16.0689] <jorendorff>
emilio: ntim arrived

[07:23:36.0810] <emilio>
@jorendorff:mozilla.org: going down, thx


2020-01-28
[02:31:34.0185] <waldo>
> <@zbraniecki:mozilla.org> waldo: any reason for me not to consider speeding up https://github.com/tc39/proposal-intl-datetime-style for stage 4?

I don't believe so right now, but I'd like a double-check from anba before I say with certainty that we're good to go.

[02:32:18.0964] <zbraniecki>
we postponed this till March meeting. I think we'll need to move that from mozIntl to SpiderMonkey 

[02:40:28.0559] <waldo>
That shouldn't be difficult.  Seems to me we can start with a per-realm option controlling its availability.  Chrome can always set it, web can start out not.  And we can get rid of the MozDateTimeFormat mozIntl function at the same time.

[02:46:59.0623] <waldo>
Unrelated to anything, I look forward to figuring out how to configure message display to be more compact, closer to IRC client levels of making the actual conversation primary.

[04:16:09.0469] <nbp>
The JS team is being compacted in Schȯneberg II area.

[04:16:30.0113] <jorendorff>
I'm not sure I wish to be compacted

[04:17:07.0586] <nbp>
 * The JS team is being compacted in Schœneberg II area.

[04:17:41.0528] <yulia>
there are a few of us in the sofas in the "bar" sort of area

[04:17:53.0276] <yulia>
(but mostly wasm folks)

[04:18:02.0676] <yulia>
but there are also sofas

[04:18:12.0786] <nbp>
 * The JS team is being compacted in Schöneberg II area.

[05:30:13.0380] <sfink>
> <@waldo:mozilla.org> Unrelated to anything, I look forward to figuring out how to configure message display to be more compact, closer to IRC client levels of making the actual conversation primary.

Yeah, I was saying the same thing earlier. Riot seems to emphasize people (and decorations) over conversations. My IRC client does the reverse. I prefer the IRC client.

[06:20:26.0366] <decoder>
nbp: our tooling/productivity all hands has been moved to Friday morning now >.>

[06:40:15.0486] <arai>
I'm experimenting some custom style to make the log more compact

[06:43:14.0480] <jld>
FYI there's #riot-css:mozilla.org for user styles for Riot.

[06:43:38.0027] <arai>
thanks :D I'll join there

[06:45:00.0909] <waldo>
WANT

[06:50:37.0195] <arai>
https://github.com/arai-a/riot-compact (very experimental!)

[06:50:47.0635] <arai>
now I'm looking the riot-css channel log

[07:03:43.0666] <mgaudet>
sfink: Not really a review ping, but you wanted to see https://phabricator.services.mozilla.com/D60897 again should I change approaches, which I did. It's still marked as r+, and I'm not sure how to request re-review so...ping :) 

[07:03:58.0638] <mgaudet>
(definitely not urgent tho) 

[07:06:07.0257] <mgaudet>
arai: you did alternate-line-colouring! I love it. 

[07:06:24.0232] <jandem>
you can do Add Action -> Request Review to request a re-review

[07:15:05.0221] <sfink>
mgaudet: r=me, thanks!

[07:15:25.0545] <mgaudet>
sfink: cool! 

[07:15:41.0858] <mgaudet>
I will land... after a short nap methinks. 

[08:37:34.0905] <nbp>
decoder: Would Thursday between 3pm and 4pm be good?

[08:40:07.0866] <decoder>
nbp: yes that would work!

[08:42:00.0687] <nbp>
decoder: Done.

[08:45:14.0405] <waldo>
anba: https://paste.mozilla.org/iqvZbhnf is where my last ping ended up as far as who to ask.  But none of those people on that list are really Firefox people exactly, and I haven't yet tracked down one or two of them probably-IRL to figure out who is actually the real point person for download-size changes.


2020-01-29
[23:17:58.0427] <jandem>
iain: want to take that review since you're mentoring? I don't have strong feelings about it, as long as whatever we do is consistent across platforms - we could also file follow-ups for other changes.

[00:17:55.0594] <mgaudet>
Heads up that we will be chatting about Stencil at 1pm in one of the browser home rooms (TBD; will ping here) 

[00:18:13.0189] <mgaudet>
* Heads up that we will be chatting about Stencil at 1pm in one of the browser home rooms (TBD; will update here) 

[01:07:53.0520] <jorendorff>
mgaudet: Thanks, will attend

[01:09:05.0068] <jorendorff>
jonco: ModuleBuilder skips generating AST nodes for certain source-code stuff. Was that just because ParseNodes are a huge pain? Or was it a performance hack?

[01:09:34.0235] <waldo>
@anba:mozilla.org, @zbraniecki:mozilla.org - we should meet up and talk about the status of current Intl proposals. Maybe over lunch today at IC?

[01:11:39.0949] <zbraniecki>
sounds good! let's do that!

[01:29:19.0050] <iain>
jandem: Sorry, woke up at 3am again and then over-corrected by sleeping from 5-10. Yeah, I'll take that review from here.

[01:30:01.0269] <waldo>
I'm talking to bgrins now about Firefox download size hit. It's not his thing, but he's starting an email thread with the relevant people so we can get that ball rolling.

[01:44:55.0515] <jonco>
jorendorff: what gets skipped?

[01:52:28.0724] <jorendorff>
jonco: anba told me you would know about this ;)

[01:52:50.0953] <jorendorff>
jonco: the way it looks to me is that ModuleBuilder, despite the comment about parse nodes, does not consume parse nodes

[01:54:43.0211] <jorendorff>
jonco: Never mind, I was wrong about this

[01:54:50.0241] <jorendorff>
misunderstood what anba was saying

[02:19:48.0825] <evilpie>
jorendorff: Changing NativeFunction to results in an error that Debug isn't derivable

[02:20:08.0666] <jorendorff>
evilpie: Yes, that makes sense. 

[02:20:18.0991] <evilpie>
https://paste.mozilla.org/fictEAwV/raw

[02:20:42.0726] <evilpie>
 * jorendorff: Changing NativeFunction to using slices results in an error that Debug isn't derivable

[02:27:23.0854] <evilpie>
jorendorff: so should I keep using Vec for now?

[02:28:11.0679] <jorendorff>
evilpie: It's up to you. It isn't hard to `impl Debug for JSValue { ... }`, see https://doc.rust-lang.org/std/fmt/trait.Debug.html

[02:29:12.0608] <evilpie>
mhm I guess a custom implementation would be nicer anyway

[02:31:11.0281] <jorendorff>
evilpie: for NativeFunction values you could write the function address, i think

[02:32:30.0104] <jorendorff>
`NativeFunction(func) => write!(f, "NativeFunction({:p})", func)`

[03:53:09.0261] <jorendorff>
mgaudet: i don't know where the browser homerooms are but I think I will head to the third floor and see if King is available

[03:55:55.0335] <mgaudet>
> <@jorendorff:mozilla.org> mgaudet: i don't know where the browser homerooms are but I think I will head to the third floor and see if King is available

so, downstairs (0th floor) Schöneberg III is empty right now. 

[03:56:50.0306] <mgaudet>
jorendorff: lemme know if that works or King is better. 

[03:58:41.0960] <jorendorff>
i'll come try to find Schöneberg III

[03:59:40.0071] <mgaudet>
Ok! Stencil in Schoönenberg III

[04:00:53.0321] <waldo>
omw

[04:55:57.0046] <jonco>
@allstarschh:mozilla.org: sfink and I are going to be in Bellevue for the profiler session at 2:30 and will find somewhere for the GC meeting when that finishes

[05:02:52.0961] <tcampbell>
jonco + other gc folks: you might be interested in this tomorrow https://berlinallhandsjanuary2020.sched.com/event/YwoR/workshop-scheduler-design-update-and-next-steps

[05:05:24.0433] <jonco>
tcampbell: cheers, signed up

[05:06:57.0382] <sfink>
tcampbell: thanks, I added it too

[05:13:45.0433] <yulia>
sfink: https://www.amazon.de/Drawing-Right-Side-Brain-Definitive/dp/1585429201?SubscriptionId=AKIAILSHYYTFIVPWUY6Q&tag=duckduckgo-ffab-de-21&linkCode=xm2&camp=2025&creative=165953&creativeASIN=1585429201

[05:51:58.0139] <tcampbell>
nbp meeting in schöneberg III

[06:03:26.0350] <tcampbell>
mgaudet: 

[12:03:45.0838] <mconca>
Spidermonkey team takes up art

[12:11:23.0063] <waldo>
Can you really call it art if they're cheating with stencils?

[12:26:25.0342] <nbp>
No, we are taking pencil as a way to interpret what we see. 

[14:03:12.0139] <jorendorff>
evilpie: Yep, have to bounce it :)

[14:04:12.0762] <jorendorff>
I forgot, some assignments are static SyntaxErrors in strict mode

[14:04:15.0050] <jorendorff>
` "use strict"; eval = 3;`

[14:04:48.0561] <jorendorff>
evilpie: I guess we can fix it


2020-01-30
[00:07:01.0702] <yulia>
transmediale folks! you will need to leave early for the tour, at about 10:30 (or a little earlier)

[00:07:02.0103] <yulia>
please meet me after the plenary for the tickets!

[05:01:48.0374] <jorendorff>
yulia: nice. That went really really well

[05:02:24.0273] <jorendorff>
yulia: The people sitting next to me were saying "that's nice" every other slide :)

[05:02:33.0879] <jorendorff>
 * yulia: The people sitting next to me were saying "that's nice" appreciatively every other slide :)

[05:03:20.0262] <waldo>
Lightning talk about standards?  I've been out in the hall talking over download-size-increase questions with bgrins, so I guess I missed it.  :-(

[05:04:09.0081] <yulia>
happy to hear that people liked it!

[05:15:14.0447] <waldo>
Mm, it's unfortunate that the libFuzzer talk apparently is going to overlap with these TC39 discussions.  :-\  nbp I guess there's not much that can be done about that...

[05:16:33.0567] <jorendorff>
waldo: on my calendar it says libFuzzer is at 3 and TC39 at 4

[05:16:34.0942] <waldo>
...or wait, no, the TC39 discussions are tomorrow.  (Except for segmenter which is today.)  So I guess there's no overlap, we're okay.

[05:16:40.0626] <jorendorff>
yay

[05:18:29.0713] <yulia>
there might be more discussions, there is also the issue raised by anba regarding private fields. we might need to find special time for that

[05:18:48.0566] <yulia>
that won't happen next week, but if people want to discuss it i can set a time

[05:30:40.0737] <jorendorff>
(The issue is that private fields can be set on any object, including proxies, cross-compartment wrappers, and globals. Private fields on globals persist across navigation. All of this is a huge pain to implement.)

[05:31:12.0029] <mgaudet>
Thanks @nbp! (SmooshMonkey!?)

[05:31:17.0861] <jorendorff>
nbp: Great job. That really connected with folks around me in the audience

[05:31:20.0623] <Benjamin Bouvier>
Is smooshmonkey a new nam?

[05:31:36.0370] <Benjamin Bouvier>
* Is smooshmonkey a new name? I knew it as Visage before

[05:31:45.0451] <jorendorff>
Definitely the same thing

[05:31:50.0448] <jorendorff>
Possibly the new project name

[05:31:55.0130] <jorendorff>
anything is better than "Visage"

[05:31:59.0019] <yulia>
possibly the new shirt

[05:32:01.0897] <mgaudet>
(I do love the sticker potential for smooshmonkey)

[05:32:13.0822] <nbp>
/me stress level going down...

[05:32:25.0348] <mgaudet>
There’s some comedy potential

[05:32:29.0524] <Benjamin Bouvier>
Good job nbp 

[05:32:46.0932] <waldo>
We could go for a James Bond novels reference and run with SMERSHmonkey.

[05:32:57.0272] <yulia>
i was thinking smöshmonkey

[05:32:57.0776] <Benjamin Bouvier>
How about Smooshymonkey to ease pronunciation?

[05:33:25.0101] <Benjamin Bouvier>
and that's how the bikeshedding began

[05:33:29.0320] <cfallin>
If I recall correctly, SmooshMonkey gains umlauts as its implementation progresses

[05:33:31.0614] <nbp>
Benjamin Bouvier it is the latest name proposal for visage. 

[05:33:35.0457] <yulia>
wir sind im deutschland, wir haben ordnung hier

[05:33:39.0879] <jorendorff>
cfallin: that is correct

[05:34:02.0310] <cfallin>
Smööshmönkëÿ is v1.0

[05:34:09.0545] <yulia>
omg yes

[05:34:40.0541] <Benjamin Bouvier>
Did you mean: ömğ ýëš

[05:34:41.0646] <yulia>
we should really find that no longer existing utf-16 character that is valid in js

[05:34:47.0010] <jorendorff>
smøøsh

[05:34:53.0659] <yulia>
oooo!!!!

[05:34:56.0254] <yulia>
THAT

[05:35:23.0891] <cfallin>
I was bitten by a Møøse...

[05:35:26.0721] <jorendorff>
"smoosh" is a reference to a thing that happened in the standards world...

[05:35:43.0654] <yulia>
https://github.com/tc39/proposal-flatMap/pull/56

[05:35:43.0885] <waldo>
"smoosh" is a four-letter word.

[05:35:44.0107] <Benjamin Bouvier>
Smooshgate?

[05:35:52.0758] <jorendorff>
yes

[05:36:03.0133] <yulia>
thats why there are bunnies

[05:36:36.0444] <jorendorff>
we have ... no excuse for using the name for this project in particular

[05:37:01.0281] <jorendorff>
i mean, bunnies, who needs a reason

[05:37:11.0689] <yulia>
well, we can say that rather than reducing the non terminals, we are smooshing them

[05:37:23.0357] <jorendorff>
shift-smoosh parser I LOVE IT

[05:37:30.0729] <yulia>
:D

[05:37:57.0036] <cfallin>
Watch out for the smoosh-smoosh conflicts

[05:38:01.0101] <Benjamin Bouvier>
Is the tee shirt design based on a painting or drawing somebody made during the drawing workshop?

[05:38:09.0696] <yulia>
Benjamin Bouvier: we did it last night

[05:38:18.0227] <Benjamin Bouvier>
Sweet

[05:38:18.0762] <yulia>
after a lot of bad ideas

[05:38:34.0094] <waldo>
If there's one thing we are good at, it is bad ideas.

[05:39:01.0488] <yulia>
its like... not done or professional and we should totally hire that guy

[05:39:13.0622] <yulia>
and reprint _all_ the tshirts

[05:39:15.0765] <Benjamin Bouvier>
The meta band cover guy?

[05:39:20.0239] <yulia>
yeah

[05:39:22.0444] <jorendorff>
yes

[05:39:29.0936] <Benjamin Bouvier>
Ah i meant metal, but meta is nice too

[05:39:34.0969] <jorendorff>
reissues of all those tshirts would be a-ma-zing

[05:39:51.0065] <jandem>
I was hoping one of you would design the Warp shirt

[05:40:05.0344] <yulia>
what is warp?

[05:40:12.0901] <Benjamin Bouvier>
Ionbuilder 2.0

[05:40:17.0241] <yulia>
aha

[05:41:49.0785] <jorendorff>
oh, warp drive, how did I not make that 

[05:41:52.0460] <jorendorff>
 * oh, warp drive, how did I not make that connection

[05:49:42.0619] <jorendorff>
I hate to leave these lightning talks—they seem unusually good this time around

[05:50:19.0009] <jorendorff>
but everyone here should seriously consider heading to Schönberg II

[05:50:48.0531] <jorendorff>
I believe decoder is going to show you how to write a fuzzer in JS in a few minutes

[05:50:49.0820] <jorendorff>
like

[05:50:54.0881] <jorendorff>
don't miss this please

[05:51:18.0412] <waldo>
We need to be more self-service, in a world without gkw.  ☹️

[05:51:26.0826] <nbp>
How many talks remaining? The libFuzzer event was made to be after lighting talks. 

[05:51:40.0520] <waldo>
/me will head over in a few minutes, figures he's got a little time still.

[05:51:54.0313] <cfallin>
Two after this one, I think

[05:51:59.0277] <waldo>
If the order on https://docs.google.com/spreadsheets/d/14grmxVon3e45GZTQJT8awgBMlz__meGvy2ajNUY6FLE/edit#gid=0 is actually what's being followed, there's one more after this?

[05:52:08.0444] <waldo>
Oh, I guess tjr too.

[05:52:10.0020] <waldo>
So two.

[05:52:30.0071] <waldo>
I am interested in tjr's thing, fwiw

[05:59:10.0295] <waldo>
We're on the way now.

[06:02:23.0886] <zbraniecki>
goo

[06:04:28.0588] <jorendorff>
yulia: nbp: I'm in King, and it's free

[06:04:28.0747] <Benjamin Bouvier>
Where's the room?

[06:04:42.0908] <yulia>
jorendorff: ok thanks

[06:04:44.0018] <Benjamin Bouvier>
Found people to follow

[06:04:44.0831] <jorendorff>
Benjamin Bouvier: stand by

[06:05:01.0818] <jorendorff>
we're trying to figure that out

[06:05:35.0394] <nbp>
@bnjbvr follow us.


[06:06:03.0733] <jorendorff>
yulia: nbp: so ... is it King?

[06:09:51.0855] <waldo>
OMW

[06:15:09.0197] <jorendorff>
waldo: we're in King

[06:16:14.0521] <waldo>
Yeah, I've been in the room for several minutes. 😁

[06:19:23.0055] <nbp>
decoder: https://github.com/mozilla-spidermonkey/rust-frontend/blob/master/js/src/fuzz-tests/differential-parsing.js

[07:38:45.0763] <nbp>
Steve is starting soon.
mgaudet 

[07:39:10.0337] <nbp>
Cc jandem 

[07:41:08.0502] <jandem>
thanks @nbp 

[07:41:24.0182] <waldo>
Where's his thing happening?

[07:41:26.0459] <jandem>
* thanks nbp 

[07:41:38.0528] <jorendorff>
hate to miss it

[07:42:12.0767] <jandem>
Davos 2, at pullman

[07:51:46.0578] <mgaudet>
yulia: how are we getting to the Pergamon? (Will head towards lobby shortly)

[09:15:42.0837] <evilpie>
I think I am going to get Döner close to the restaurant we went to on Tuesday, in case someone is interested

[11:19:40.0131] <evilpie>
mhm and now the hotel lobby is basically abandoned


2020-01-31
[21:24:28.0783] <jandem>
arai: hey I miss having you here this week :) If you want, we could try setting up a Zoom call for the WebVM meeting?

[21:33:58.0732] <jandem>
the time (zone) may not be ideal though 

[00:01:36.0521] <zbraniecki>
anba: can you give me some intro to rebuilding ICU data for SpiderMonkey? I'd like to shorten the loop as I experiment with cutting out locales.

[00:25:54.0310] <anba>
zbraniecki:  `cd $MOZ_CENTRAL/intl/ && PYTHONPATH=$MOZ_CENTRAL/python/mozbuild/ python icu_sources_data.py ..` where $MOZ_CENTRAL points to the mozilla top-srcdir should work

[00:29:16.0236] <waldo>
zbraniecki: I believe running `./update-icu.sh` within `$topsrcdir/intl` is what you want to do.  I believe that will regen the data file, as it also redownloads ICU and applies our local patches.  Arguments to supply will look something like `./update-icu.sh https://github.com/unicode-org/icu.git maint/maint-62` -- given we're on ICU 65 right now, _probably_ changing that 62 to 65 will do the right thing.

[00:29:54.0158] <waldo>
....or listen to anba as usual.  I keep meaning to get this documented into an `intl/icu/README` or something...

[00:49:56.0104] <zbraniecki>
anba: what command did you trigger to kick off your try builds for the size?

[00:53:58.0255] <anba>
zbraniecki: opt-shippable for Windows/Linux; opt for Android (because there doesn't seem to be a "shippable" config for Android). All via ./mach try fuzzy

[01:11:49.0110] <zbraniecki>
anba: last q. How do I add locale whitelist to the `data_filter.json` ?

[01:22:31.0924] <Benjamin Bouvier>
Team meeting still happening in Charlottenburg 2?

[01:22:37.0071] <jandem>
yep

[01:34:45.0262] <anba>
zbraniecki: https://github.com/unicode-org/icu/blob/master/docs/userguide/icu_data/buildtool.md

[01:38:50.0258] <zbraniecki>
thank you!

[01:51:43.0854] <jorendorff>
The Smooshmonkey schedule document is here: https://docs.google.com/document/d/1ey3k3AQV9RXqZr-ObTNPV-Dh7LkYY8vmSpRDSyY9VJQ/edit#

[01:51:48.0654] <jorendorff>
if you need permission, ask

[01:52:14.0784] <jorendorff>
also our github issue tracker gives some idea of what's going on: https://github.com/mozilla-spidermonkey/jsparagus/issues

[02:09:12.0091] <zbraniecki>
anba waldo - what am I doing wrong? https://paste.mozilla.org/5czK0iWX

[02:09:36.0692] <waldo>
> <@zbraniecki:mozilla.org> anba waldo - what am I doing wrong? https://paste.mozilla.org/5czK0iWX

PYTHONPTH

[02:10:38.0153] <zbraniecki>
I give up. I can't type. :( thank you!

[02:10:52.0554] <waldo>
At least it was an easy question.  :-)

[02:18:21.0795] <zbraniecki>
ok, I'm doing something wrong.

[02:18:39.0211] <zbraniecki>
I added a filter to whitelist only two locales, and the ICU dat file grew a lot: https://paste.mozilla.org/zv6t8QTN

[02:19:00.0332] <zbraniecki>
ah, no, it shrinked!

[02:19:22.0855] <zbraniecki>
nice

[02:21:44.0845] <zbraniecki>
removing all but one language (en-GB) shrinks 11MB dat file to 1.6MB.

[02:23:15.0189] <zbraniecki>
is there anything else I have to do after? I did `./mach build` after and `./mach run` still works `(new Date()).toLocaleString("de", {weekday: "long"});` returns german word

[02:23:45.0210] <anba>
I think you need to clobber

[02:23:55.0233] <zbraniecki>
$(#*$@$@#

[02:24:22.0906] <waldo>
You could build just SpiderMonkey and get a faster turnaround from that, but that wouldn't tell you about the size of Firefox with the change in place.

[02:24:31.0672] <zbraniecki>
right

[02:25:07.0992] <anba>
there is <https://bugzilla.mozilla.org/show_bug.cgi?id=1315397>, but I don't think anyone actually ever looked into it

[02:29:22.0595] <waldo>
I think that bug got filed because there was a request/demand for one for any thing-requiring-a-clobber in the build system, but it's such an infrequent occurrence that I doubt anyone's going to look at it on any particular time frame.

[02:30:16.0143] <zbraniecki>
/me begs for sccache to work well for this project

[02:32:20.0706] <zbraniecki>
anba: does 11mb [all]-> 1.6mb ["en-US"] feel reasonable to you?

[02:33:05.0491] <anba>
That sounds like the expected size decrease, based on experience with node intl-small

[02:33:16.0558] <zbraniecki>
great

[04:51:01.0687] <zbraniecki>
anba, Waldo - how far are we from landable DisplayNames? I'd like to link the tradeoff when I publish my results

[04:56:30.0162] <anba>
zbraniecki: The implementation is ready, just blocked on the size decrease, IIRC

[05:00:39.0484] <zbraniecki>
excellent!

[05:00:47.0724] <zbraniecki>
thank you

[05:16:19.0667] <jonco>
sfink, @allstarschh:mozilla.org 

[05:16:40.0453] <jonco>
bug 1501438 is the bug for using the XPCOM thread pool ^

[05:18:31.0242] <allstarschh>
> <@jonco:mozilla.org> sfink, @allstarschh:mozilla.org

thanks jonco

[05:22:29.0795] <jonco>
I briefly summarised our conversation in the bug

[05:25:44.0541] <jonco>
sfink: I'm going to assign bug 1610193 to you as I'm pretty sure you're working on this

[05:54:21.0798] <yulia>
jorendorff: can you bring the orange bag that is on the table if you come to king for the tc39 thing?

[06:17:30.0284] <zbraniecki>
anba Waldo - https://bugzilla.mozilla.org/show_bug.cgi?id=1612379#c3

[06:44:45.0534] <nbp>
https://en.m.wikipedia.org/wiki/Digraphs_and_trigraphs in C, ?? = is expanded to #

[06:52:09.0118] <mgaudet>
Speaking of reading the spec: I found this blog post useful: https://timothygu.me/es-howto/ 

[07:18:16.0356] <zbraniecki>
anba: https://bugzilla.mozilla.org/show_bug.cgi?id=1612578

[07:58:19.0766] <nbp>
 * https://en.m.wikipedia.org/wiki/Digraphs_and_trigraphs in C, `??=` is expanded to `#`

[11:53:30.0515] <nbp>
https://en.m.wikipedia.org/wiki/Luke_Wagner hum...


