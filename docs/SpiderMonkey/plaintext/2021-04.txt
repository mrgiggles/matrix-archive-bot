2021-04-01
[05:07:10.0208] <wes>
chaircrusher: you want JS_GetStringBytes() ... for rrobustness, ensure JSVAL_IS_STRING first and/or JS_ValueToString() on it beforehand.

[07:40:59.0611] <sfink>
> <@tcampbell:mozilla.org> I only know mrgiggles

(I missed this whole conversation somehow) for the record, it was firebot who tracked karma on IRC. I think I might have implemented it for mrgiggles at some point, but never turned it on because firebot's was better (particularly because firebot was in way more channels)

[07:48:13.0654] <Ms2ger>
sfink--

[07:48:26.0908] <sfink>
heh

[07:48:46.0263] <sfink>
sfink-- for never getting around to porting mrgiggles to bbouvier's bot

[07:59:02.0362] <nbp>
confession: I have a working shared-memory for self-hosted code. 🎉 Now making a patch, testing on try, asking for feedback and doing the Android part.

[07:59:07.0689] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[07:59:24.0458] <sfink>
oh, nice!

[08:18:10.0071] <wes>
Is @dtebbs

[08:18:53.0162] <wes>
 * Is dtebbs in this channel? Referenced in evilpie 's link - wondering why  this is not a fork of the official 185 repo?

[08:20:55.0114] <wes>
Actually............did the release never get made into an official moz repo? Yikes. Looks like https://bugzilla.mozilla.org/show_bug.cgi?id=628723 was the end of it?

[08:22:32.0657] <Ms2ger>
What year is it??

[08:25:12.0336] <wes>
@ms2

[08:25:14.0484] <wes>
 * @ms2ger

[08:25:27.0539] <wes>
 * Ms2ger: hey, long time no see! :D

[08:26:47.0858] <wes>
Ms2ger: So, it turns out that yesterday was the ten year anniversary of that release.  If anybody's wondering, the traditional gifts for 10 year anniversary are made of tin or aluminium.

[08:28:43.0014] <Ms2ger>
Today is a day for tin-foil hats, I think :)

[08:29:07.0804] <Ms2ger>
/me disappears into the evening

[08:43:53.0244] <nbp>
smaug: I have a patch which is doing some shared-memory and adding code between the process init/shutdown to the JS engine, in short a bit of XPCOM and XPConnect. Would you be the best person to review? Or someone to recommend?

[08:45:43.0526] <smaug>
nbp: so something about CycleCollectedJSContext() and such?

[08:46:09.0203] <nbp>
not directly, but around these places, yes.

[08:46:21.0312] <smaug>
yeah, I think I or mccr8 could review

[08:46:38.0824] <nbp>
Ok, thanks.

[09:25:15.0670] <mgaudet>
confession: Private Method storage patches backed out for fuzz failures to avoid polluting results for next week; a tiny fantastic fuzz test has found something deeply hinky :) Good job fuzzing cluster + decoder 

[09:26:14.0084] <mgaudet>
(Also... I am probably not going to get this fixed this week as I'm off in a few hours for PTO, Plus easter holiday) 

[09:58:32.0873] <decoder>
mgaudet: enjoy your holidays! :)

[10:20:53.0907] <smaug>
nbp: what is self hosted content vs. self hosted code ?

[10:22:56.0700] <nbp>
content is just a way to avoid saying XDR all over the place.

[10:23:51.0076] <nbp>
while XDR is correct I just wanted to generalize from the outside point of view.

[10:24:25.0951] <mehaboob_shariff>
Im not able to mach jit-test while building spidermonkey can anyone have a look

[10:24:55.0295] <nbp>
mehaboob_shariff: did you enable the js shell in the mozconfig?

[10:25:56.0222] <mgaudet>
(this might be a place where we need to improve our documentation) It would be good to see the mozconfig, and the end of the output of your mach build

[10:27:15.0832] <mehaboob_shariff>
> <@nbp:mozilla.org> mehaboob_shariff: did you enable the js shell in the mozconfig?

yes

[10:27:22.0841] <mehaboob_shariff>
and then build it

[10:28:28.0471] <iain>
Does the file `c:\mozilla-source\mozilla-unified\obj-x86-64-pc-mingw32\dist\bin\js.exe` exist?

[10:28:38.0251] <nbp>
With `--enable-application=js` ?

[10:28:47.0933] <mehaboob_shariff>
> <@iain:mozilla.org> Does the file `c:\mozilla-source\mozilla-unified\obj-x86-64-pc-mingw32\dist\bin\js.exe` exist?

no i couln't find it

[10:29:29.0640] <iain>
Okay, sounds like something went wrong with the build

[10:29:50.0542] <iain>
Can you post the contents of your mozconfig?

[10:30:45.0386] <nbp>
Strange the mozconfig I generate either has `--enable-application=js` or `--enable-application=browser --enable-js-shell` … and both are working.

[10:31:50.0350] <iain>
How long did your build take, roughly?

[10:32:11.0029] <mehaboob_shariff>
> <@iain:mozilla.org> How long did your build take, roughly?

around 2mins

[10:32:22.0476] <iain>
Okay, so you didn't build the browser by mistake

[10:32:42.0706] <iain>
Were there any error messages in the build?

[10:34:49.0906] <mehaboob_shariff>
> <@nbp:mozilla.org> Strange the mozconfig I generate either has `--enable-application=js` or `--enable-application=browser --enable-js-shell` … and both are working.

yeah but in the documentation for building spidermonkey they asked to make another file mozconfig 

[10:35:28.0962] <nbp>
smaug: oh `InitSelfHostedCode` is used to trigger the parsing/decoding of the source which is embedded in the binary, or the content provided by the other function.

[10:36:01.0631] <mehaboob_shariff>
> <@iain:mozilla.org> Were there any error messages in the build?

yes

[10:36:18.0347] <smaug>
nbp: do you mean InitSelfHostedContent

[10:36:20.0210] <iain>
Oh, that's the problem

[10:36:33.0521] <smaug>
oh, no

[10:36:59.0101] <smaug>
nbp: anyhow, some tiny comment about how the methods are supposed to be used would be good.

[10:37:09.0538] <iain>
mehaboob_shariff: Have you run `mach bootstrap`?

[10:37:18.0125] <nbp>
No problem, I will do tomorrow.

[10:37:34.0071] <smaug>
thanks

[10:37:38.0623] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: Have you run `mach bootstrap`?

I ran python bootstrap

[10:38:08.0612] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: Have you run `mach bootstrap`?

should I try this out

[10:40:10.0429] <mehaboob_shariff>
https://firefox-source-docs.mozilla.org/setup/windows_build.html I followed the instructions in this documentation

[10:40:12.0749] <iain>
Are you following these instructions? https://firefox-source-docs.mozilla.org/setup/windows_build.html

[10:40:25.0120] <iain>
Hahaha yep

[10:40:33.0039] <mehaboob_shariff>
> <@iain:mozilla.org> Are you following these instructions? https://firefox-source-docs.mozilla.org/setup/windows_build.html

yes 

[10:45:01.0033] <iain>
mehaboob_shariff: It looks like something is going wrong with `configure.py`. Maybe ask in #introduction:mozilla.org; they have more experience debugging setup issues on Windows.

[10:45:44.0865] <mehaboob_shariff>
okay

[10:46:47.0134] <mgaudet>
(unfortunately not as many of us develop on Windows as ought to; leading to a bit of a skill deficit) 

[10:47:43.0900] <mgaudet>
if you have access to linux in some form or another (even a virtualbox VM) you may find the process a bit smoother

[10:48:26.0022] <mehaboob_shariff>
I would have continued on ubuntu (on virtual machine) but building firefox (in doc) showed it requires 40gb so I continues on windows

[10:48:43.0599] <mehaboob_shariff>
> <@mgaudet:mozilla.org> (unfortunately not as many of us develop on Windows as ought to; leading to a bit of a skill deficit)

yeah sure if there is no issue for size

[10:49:14.0197] <mgaudet>
you won't need 40GB of space just to build the shell; which works well enough for most things

[10:49:23.0520] <mgaudet>
(more like 1-10gb) 

[10:50:06.0464] <mehaboob_shariff>
okay 

[11:57:46.0895] <mehaboob_shariff>
hello again

[11:57:55.0924] <mehaboob_shariff>
i tried again on linux

[11:58:08.0507] <mehaboob_shariff>
i got a similar error

[12:00:01.0991] <sfink>
were there error messages before that? Your build failed while configuring. We'd need to see the error messages from the configuring.

[12:00:53.0550] <mehaboob_shariff>
I am getting this error only after making changes to mozconfig and building it

[12:01:25.0649] <sfink>
what's the output from before the part you pasted above?

[12:01:47.0986] <sfink>
(shift-pageup if it has scrolled off the screen)

[12:02:59.0103] <sfink>
Ok, the problem is the `ERROR: Rust compiler not found.`

[12:03:11.0059] <sfink>
did you run `mach bootstrap` and select option 2?

[12:03:42.0146] <mehaboob_shariff>
no, but I ran python3 bootstrap.py and selected option 1

[12:04:05.0972] <sfink>
option 1 doesn't give you the ability to build

[12:04:07.0786] <sfink>
you need option 2

[12:04:24.0647] <mehaboob_shariff>
ooh

[12:04:56.0453] <mehaboob_shariff>
so should I removed the whole directory and re do again or is there any option that I can use to change it

[12:05:05.0828] <mehaboob_shariff>
remove*

[12:05:18.0792] <sfink>
you don't need to remove the directory

[12:07:43.0363] <mehaboob_shariff>
should I download the bootstrap the mach bootstap and the select opt 1 again?

[12:09:24.0056] <arai>
`./mach bootstrap` does the same thing as running downloaded bootstrap.py

[12:09:37.0830] <arai>
so, run `./mach bootstrap`, and then select option 2

[12:10:07.0336] <mehaboob_shariff>
ok

[12:34:09.0718] <mehaboob_shariff>
i guess it takes a lot of time to build the jit-test

[12:46:23.0218] <iain>
mehaboob_shariff: When running `./mach jit-test`, you will want to use a mozconfig with `--enable-optimize`. `--disable-optimize` is good if you are going to look at the code in a debugger, but it is slower.

[12:51:00.0516] <mehaboob_shariff>
I will do that next time I build it

[12:51:24.0454] <mehaboob_shariff>
currently the build is still running 

[13:11:22.0544] <tcampbell|pto>
I just went through this a few days ago and the 'python bootstrap.py' gets you far enough for hg/git to download and for the mach commands to run. Then you need to run 'mach bootstrap' in the checkout directory to get the compilers, etc. Our docs might not be clear on this?

[13:11:36.0253] <tcampbell|pto>
I was confused myself when I hit it

[13:13:58.0763] <tcampbell|pto>
I suspect that seasoned spidermonkey hackers just clone the repo first and then start following the instructions, while the current docs have a bootstrap script to help with getting hg or cinnabar setup 

[13:24:14.0750] <evilpie>
tcampbell|pto: please merge https://github.com/mozilla-spidermonkey/spidermonkey-embedding-examples/pull/33

[13:25:03.0452] <tcampbell|pto>
@sfink should have permissions

[13:25:23.0466] <evilpie>
okay :)

[13:25:41.0847] <tcampbell|pto>
Or ptomato should too

[13:26:18.0473] <tcampbell|pto>
(I try not to be a gatekeeper on this so any reviewer on the list should do)

[13:26:28.0555] <evilpie>
sfink: thanks!

[13:26:28.0990] <sfink>
done

[13:35:51.0695] <chaircrusher>
OK this is a good one:  In SpiderMonkey 1.8.5 we do a thing where we keep a list of pointers to strings made with JS_NewExternalString.  These are then assigned to JS object properties or array elements.  Then later in our JSNative function, we get a JSString * from the values passed in, and look them up in our list of strings, to get the 'out of band' data we want about that string.

In JS60 (and presumable earlier & later) this doesn't work.  We assign these to JS String values & JSObject porperties, but later when we try to look up the strings,  they're no longer the string we made.  

It seems like something changed (and of courses a lot of things changed!) but we can no longer depend on getting our JSString back so we can look it up in our list.

[13:44:37.0732] <sfink>
chaircrusher: you're looking up by `JSString*`? It's probably because strings started getting allocated in the nursery. Though I thought that got enabled in 67. Anyway, could you look up the character data pointer instead?

[13:45:01.0970] <chaircrusher>
I'll give that a go.

[13:45:35.0756] <chaircrusher>
so if I assign an ExternalString to a var, the JSChar * for it will stay the same but the JSString * can change?

[13:45:56.0917] <sfink>
yes

[13:47:12.0908] <sfink>
for many other strings, both could change (because string data is often kept inside the JSString struct). But external strings allocated via `JS_NewExternalString` will always keep the original pointer.

[13:47:20.0493] <chaircrusher>
amazing. I thought it was going to be even harder.

[13:47:32.0370] <chaircrusher>
:thumbsup:

[13:50:10.0635] <ptomato>
evilpie: oh yeah sorry! yes, I can merge, but I wasn't sure if I'd be jumping ahead  anyone else who wanted to look at it

[13:50:20.0534] <chaircrusher>
Is there a method to look up the char data for a JSString *?

[13:51:02.0791] <sfink>
ooh boy, that's where it gets ugly

[13:51:15.0431] <sfink>
(the char data for most strings is very unstable)

[13:52:04.0500] <sfink>
hm, there's AutoStableStringChars

[13:52:48.0191] <sfink>
we probably ought to have something specific to external strings, since it's safe to return their pointers

[13:53:36.0535] <chaircrusher>
hmm JS_GetTwoByteExternalStringChars sounds promising.

[13:53:43.0779] <sfink>
ooh, I didn't see that

[13:53:44.0461] <evilpie>
Modern API as JS::GetTwoByteLinearStringChars

[13:55:12.0597] <sfink>
though that'll require an `AutoCheckCannotGC`; `JS_GetTwoByteExternalStringChars` doesn't.

[13:56:35.0519] <sfink>
there's also (now?) `JS::IsExternalString` that'll give you the `char16_t*` (as well as the callbacks)

[14:36:39.0805] <mehaboob_shariff>
any idea why this is running out of memory

[14:45:28.0417] <arai>
The testcase can hit out of memory depending on the environment

[14:45:59.0029] <arai>
it tries to allocate a very big ArrayBuffer

[14:48:14.0623] <arai>
so, if the failure happens without any change to the source code, you can ignore the failure

[14:49:14.0204] <mehaboob_shariff>
> <@arai:mozilla.org> so, if the failure happens without any change to the source code, you can ignore the failure

so now can I move on to the next phase which is fixing a bug

[14:49:33.0525] <arai>
yes :)

[14:49:51.0518] <mehaboob_shariff>
thank you everyone

[14:51:02.0143] <mehaboob_shariff>
the bugzilla page is not working and I am not able to create an account

[14:51:39.0309] <arai>
are you on this page?  https://bugzilla.mozilla.org/createaccount.cgi

[14:51:54.0742] <mehaboob_shariff>
yes

[14:52:25.0047] <arai>
and you've entered your email and checked the "I have read...", and clicked "Create Account"  ?

[14:52:52.0461] <arai>
(or does it show something else?)

[14:53:11.0074] <arai>
for me, there's "Create an account" section in the page

[14:53:30.0293] <mehaboob_shariff>
im not getting create an account page

[14:53:42.0137] <mehaboob_shariff>
its redirecting me back to the same login page

[14:53:50.0978] <arai>
can you try in private window?

[14:54:01.0180] <arai>
I saw some people hitting redirect issue there

[14:54:38.0237] <arai>
usually that kind of issue happens because of unexpected cookie/session or something, and it won't happen in private window

[14:54:50.0775] <mehaboob_shariff>
> <@arai:mozilla.org> can you try in private window?

it worked

[14:55:02.0506] <arai>
great :)


2021-04-02
[22:32:51.0562] <arai>
what's the reason why `UnwrapOneCheckedStatic` returns `nullptr` if `Wrapper::hasSecurityPolicy` returns `true` here? https://searchfox.org/mozilla-central/rev/402802eb42ba7d905531fd8e3b089fc8b2292f66/js/src/proxy/Wrapper.cpp#382  the context is bug 1552099

[22:32:53.0566] <botzilla>
https://bugzil.la/1552099 — ASSIGNED (arai) — Crash in [@ EnqueuePromiseReactionJob] spiking from zh-cn locales since 2019-05-15

[22:34:24.0979] <arai>
the comment about the field doesn't imply the behavior, and I'm wondering the logic/reasoning behind the code  https://searchfox.org/mozilla-central/rev/402802eb42ba7d905531fd8e3b089fc8b2292f66/js/public/Proxy.h#190-196

[22:45:41.0478] <18f>
https://searchfox.org/mozilla-central/source/js/src/jit/MIR.h#436

[22:46:06.0020] <18f>
Hey If I want search a function in special commit, how can I?

[22:47:04.0197] <arai>
18f: do you mean not in the latest tree, but inside some old checkout?

[22:47:26.0756] <18f>
Yes

[22:47:40.0505] <arai>
is it beta or release?  or something else?

[22:48:13.0129] <18f>
I want to know which is the BugID pf truncateKInd

[22:48:52.0184] <iain>
18f: There is no search index for older commits

[22:48:59.0202] <18f>
https://searchfox.org/mozilla-central/rev/b8786913fea3a93e53742c3f5f28d1f36242e135/js/src/jit/MIR.h#457

[22:49:44.0103] <18f>
so I got this.... But seems It  is not what I want....

[22:49:58.0718] <18f>
So I want search in older commits...

[22:50:15.0802] <iain>
If you look at the diff and see where the code was moved from, you can edit the URL

[22:50:37.0441] <iain>
Clicking "Show full diff" goes here: https://hg.mozilla.org/mozilla-central/rev/7944733c5201f9f389b01a88fc1e9851e964493a

[22:51:22.0338] <iain>
Oh, actually that's not needed here

[22:54:00.0223] <iain>
"Show latest version without this line" gives this: https://searchfox.org/mozilla-central/rev/4de0910c2efd670304b5399a5592e51aba141641/js/src/jit/MIR.h#653

[22:54:22.0351] <iain>
And then you can trace backwards from there

[22:55:35.0680] <18f>
sry.

[22:55:46.0707] <18f>
I don't understand this now.

[22:55:54.0657] <18f>
But I try to understand!

[22:56:35.0309] <iain>
 * <del>Clicking "Show full diff" goes here: https://hg.mozilla.org/mozilla-central/rev/7944733c5201f9f389b01a88fc1e9851e964493a</del>

[22:56:46.0112] <iain>
 * <del>If you look at the diff and see where the code was moved from, you can edit the URL</del>

[22:57:53.0167] <iain>
If you hover over the bar on the left, you see ```
Bug 1683535: Move TruncateKind out of MDefinition r=jandem
Iain Ireland <iireland@mozilla.com>, Tue, 5 Jan 2021 13:48:24 +0000
Show annotated diff or full diff
Show latest version without this line
Show earliest version with this line
```

[22:57:54.0687] <botzilla>
https://bugzil.la/1683535 — VERIFIED (iain) — Assertion failure: !outerScript->hadEagerTruncationBailout(), at  jit/BaselineBailouts.cpp:2026

[22:58:06.0319] <iain>
 * If you hover over the bar on the left, you see 
```
Bug 1683535: Move TruncateKind out of MDefinition r=jandem
Iain Ireland [iireland@mozilla.com](mailto:iireland@mozilla.com), Tue, 5 Jan 2021 13:48:24 +0000
Show annotated diff or full diff
Show latest version without this line
Show earliest version with this line
```
```

[22:58:33.0787] <18f>
Yes

[22:59:08.0450] <iain>
If you click on "Show latest version without this line", then you can find "enum TruncateKind" in the same file

[22:59:17.0448] <iain>
 * If you click on "Show latest version without this line", then you can find `enum TruncateKind` in the same file

[22:59:32.0412] <18f>
cool

[22:59:38.0297] <18f>
I know what u means.

[22:59:41.0910] <18f>
seems...

[23:00:37.0908] <iain>
The *next* trick is that there are a few changesets that automatically reformatted a lot of code

[23:00:59.0841] <iain>
Which you can see [here](https://searchfox.org/mozilla-central/rev/4de0910c2efd670304b5399a5592e51aba141641/js/src/jit/MIR.h#653)

[23:01:31.0501] <iain>
Click on "1 ignored changesets" and "show latest version without this line"

[23:01:57.0288] <iain>
And then you'll end up [here](https://searchfox.org/mozilla-central/rev/fe3fa7f53037d4e869858fef4ff9310dfa795c41/js/src/jit/MIR.h#657)

[23:02:12.0949] <iain>
Which points to [this bug](https://bugzilla.mozilla.org/show_bug.cgi?id=998580)

[23:02:47.0700] <iain>
Which I happen to know is the bug that introduced `TruncateKind`

[23:03:24.0372] <18f>
uh!

[23:03:29.0252] <18f>
Thank u.

[23:03:33.0576] <18f>
To be honest

[23:03:47.0348] <18f>
I don't think I fully understand what u express.

[23:03:59.0672] <18f>
I need time to study and try it.

[23:04:07.0957] <18f>
But it's very useful

[23:04:18.0265] <18f>
sometimes I want to learn something.

[23:04:25.0052] <18f>
like what is TruncateKind.

[23:04:38.0161] <18f>
read commit is a good way.

[23:04:49.0606] <18f>
but sometimes it is not enough.

[23:04:58.0904] <18f>
so I want to see the bug ID.

[23:05:26.0195] <18f>
to read the coder why add "TKind"

[23:05:37.0053] <18f>
It's very useful for me.

[23:05:44.0196] <18f>
Thank u very much

[23:06:58.0252] <iain>
Let me try to explain one more time

[23:07:15.0057] <iain>
Do you know "git blame"?

[23:07:36.0348] <18f>
no

[23:07:57.0681] <iain>
Okay

[23:08:49.0290] <iain>
For each line in the file, the bar on the left shows the most recent patch to change that line

[23:09:43.0542] <iain>
To see what the code looked like before that patch, you can click "Show latest version without this line"

[23:10:26.0415] <18f>
If u see something, I could understand I will type 1 otherwise I will type 2

[23:10:29.0261] <18f>
can I?

[23:10:39.0771] <18f>
> <@18f:mozilla.org> can I?

say

[23:11:00.0108] <iain>
You will type 1 if you understand, and 2 if you do not understand?

[23:11:09.0347] <18f>
ok

[23:11:15.0733] <18f>
> <@iain:mozilla.org> To see what the code looked like before that patch, you can click "Show latest version without this line"

1

[23:11:59.0372] <18f>
> <@iain:mozilla.org> You will type 1 if you understand, and 2 if you do not understand?

right, use this way, I won't break your thought.

[23:12:47.0965] <iain>
If code is moved, you may have to look around to find it

[23:13:21.0695] <iain>
The most reliable way is to click "full diff", which will show the patch

[23:14:18.0388] <iain>
Then you can search the entire diff to see whether the code was moved from somewhere else

[23:14:40.0802] <iain>
In this case, it was moved inside `MIR.h`

[23:14:41.0677] <18f>
> <@iain:mozilla.org> Then you can search the entire diff to see whether the code was moved from somewhere else

1

[23:15:13.0852] <iain>
So you can just search for `TruncateKind` on that page and find it

[23:15:36.0695] <18f>
> <@iain:mozilla.org> So you can just search for `TruncateKind` on that page and find it

1

[23:16:05.0080] <18f>
> <@18f:mozilla.org> 1

tip for myself: ctrl+f will help me.

[23:16:36.0086] <iain>
If it was moved from a different file, it is harder. What I do is look at the diff to see what file the code came from, then edit the URL to look at that file.

[23:18:16.0073] <iain>
For example: if the diff said that it was moved from `MIR.cpp` to `MIR.h`, and "https://searchfox.org/mozilla-central/rev/4de0910c2efd670304b5399a5592e51aba141641/js/src/jit/MIR.h#653" is the last version of MIR.h *without* the code, then "https://searchfox.org/mozilla-central/rev/4de0910c2efd670304b5399a5592e51aba141641/js/src/jit/MIR.cpp" will have the code

[23:18:49.0944] <iain>
 * For example: if the diff said that it was moved from `MIR.cpp` to `MIR.h`, and "https://searchfox.org/mozilla-central/rev/SOME_REVISION/js/src/jit/MIR.h#653" is the last version of MIR.h _without_ the code, then "https://searchfox.org/mozilla-central/rev/SOME_REVISION/js/src/jit/MIR.cpp" will have the code

[23:19:06.0130] <iain>
But we did not have to do that here

[23:20:32.0379] <18f>
blue is the revision number?

[23:21:33.0527] <iain>
It is, but you don't need to copy it from there

[23:22:12.0878] <iain>
You can use "Show latest version without this line"

[23:22:30.0577] <18f>
> <@iain:mozilla.org> You can use "Show latest version without this line"

1

[23:23:01.0223] <iain>
So that explains how we get here: https://searchfox.org/mozilla-central/rev/4de0910c2efd670304b5399a5592e51aba141641/js/src/jit/MIR.h#653

[23:23:26.0235] <iain>
But the bar on the right says "Bug 994957 - Fix pseudostack update by Ion ICs in inlined scripts to use top-level script in the frame and the pc of the call it makes to the inlined script. r=jandem"

[23:23:27.0546] <botzilla>
https://bugzil.la/994957 — RESOLVED (djvj) — Assertion failure: offset < length(), at jsscript.h

[23:23:52.0740] <iain>
That's not right

[23:24:16.0373] <iain>
This part is not easy to figure out on your own

[23:24:26.0822] <iain>
Which is why I want to make sure I explain it to you

[23:24:59.0414] <iain>
If you look closely, you will see "> One ignored changeset"

[23:25:16.0524] <18f>
> <@iain:mozilla.org> If you look closely, you will see "> One ignored changeset"

1

[23:25:56.0732] <iain>
If you click the arrow, you will see "Bug 1511181 - Reformat everything to the Google coding style r=ehsan a=clang-format"

[23:25:58.0206] <botzilla>
https://bugzil.la/1511181 — RESOLVED (Sylvestre) — Reformat everything to the Google coding style (the actual change)

[23:26:48.0523] <iain>
This was a large changeset that reformatted the code using clang-format

[23:27:02.0455] <18f>
> <@iain:mozilla.org> This was a large changeset that reformatted the code using clang-format

1

[23:27:55.0965] <iain>
Searchfox gets confused by that patch, so we have to skip past it

[23:28:38.0381] <18f>
> <@iain:mozilla.org> Searchfox gets confused by that patch, so we have to skip past it

1

[23:29:01.0425] <iain>
If you click "Show latest version without this line" under the reformat patch, you will get to this revision: https://searchfox.org/mozilla-central/rev/fe3fa7f53037d4e869858fef4ff9310dfa795c41/js/src/jit/MIR.h

[23:29:22.0586] <iain>
And then if you search for TruncateKind, you will end up [here](https://searchfox.org/mozilla-central/rev/fe3fa7f53037d4e869858fef4ff9310dfa795c41/js/src/jit/MIR.h#657)

[23:29:48.0250] <iain>
With the commit message "Bug 998580 - IonMonkey: Generalize RangeAnalysis truncation to handle other kinds of paths to integer types. r=nbp"

[23:29:49.0697] <botzilla>
https://bugzil.la/998580 — RESOLVED (sunfish) — Differential Testing: Different output message involving bitwise zero and empty with block

[23:30:21.0148] <18f>
1

[23:31:23.0435] <iain>
If you were doing this on your own, you would have to look at that patch, and read that bug, to figure out if that is what you are looking for, or if you need to keep going backwards

[23:32:19.0490] <iain>
In this case, I have looked at this code recently, so I know that it *is* the code you are looking for

[23:33:29.0083] <18f>
Like this... I try to note in English, so something is wrong...(express is not easy...)

[23:33:43.0207] <iain>
It looks correct to me!

[23:34:07.0993] <iain>
It gets easier with practice

[23:34:08.0686] <18f>
I think the basic idea is use earliest version to find the blame(blamer?)

[23:34:17.0496] <iain>
Yes

[23:34:22.0192] <18f>
But some times we wil find wrong version

[23:34:33.0073] <18f>
so I enum 3 reason which u mentioned.

[23:35:00.0614] <18f>
like I remember spidermonkey seems change "Ion" to "JIT" folder

[23:35:09.0880] <18f>
when we found this.

[23:35:19.0826] <iain>
Yes

[23:35:28.0367] <18f>
We use "last version with out this line"

[23:35:36.0387] <18f>
or "ignore the version"

[23:35:45.0021] <18f>
Then reback to step 00

[23:35:57.0529] <18f>
(earliest  version.)

[23:36:11.0477] <iain>
Yeah, that sounds pretty much right

[23:36:53.0729] <18f>
cool! I understand this(seems...)

[23:36:58.0556] <18f>
feel so happy.

[23:37:39.0918] <iain>
Looking at old code is very helpful to me

[23:38:05.0193] <18f>
And I want to thank u In Chinese, I can't express it in English. lol~

[23:38:12.0288] <18f>
"怀瑾握瑜". 

[23:38:22.0601] <iain>
Your English is much better than my Chinese! 🤣

[23:38:26.0962] <18f>
> <@iain:mozilla.org> Looking at old code is very helpful to me

Yes, I think too.

[23:38:48.0690] <18f>
I think it has two advantage.

[23:38:58.0902] <18f>
In the most old code bug ID.

[23:39:17.0562] <18f>
The blamer maybe will explain why he write this.

[23:39:31.0782] <18f>
another point is, old version code.

[23:39:48.0467] <18f>
In the most case, is the simpliest version.

[23:40:04.0132] <18f>
simplest

[23:40:40.0256] <18f>
so read it then read the complicated version wil be more easy.

[23:41:03.0566] <iain>
I agree completely

[23:42:19.0711] <18f>
cool

[23:42:26.0081] <18f>
I continue my work.

[23:42:39.0166] <18f>
thx again, and see u again!

[23:42:52.0876] <18f>
> <@18f:mozilla.org> I continue my work.

continue to.

[02:03:21.0634] <arai>
who knows about `document.domain` and security wrapper between top-level/inline frames?  I'm wondering if there can be some delay, or inconsistent state.  the context is bug 1552099

[02:03:23.0607] <botzilla>
https://bugzil.la/1552099 — ASSIGNED (arai) — Crash in [@ EnqueuePromiseReactionJob] spiking from zh-cn locales since 2019-05-15

[02:05:06.0988] <arai>
or some case that promise handling doesn't cover

[03:53:53.0277] <jandem>
arai: does it work with `CheckedUnwrapDynamic`? I can probably help out with this bug next week (today and monday are holidays)

[04:32:17.0243] <evilpie>
I wonder if Handle<Maybe<PropertyDescriptor>> could return a Handle<PropertyDescriptor> on get or something

[06:42:28.0033] <mehaboob_shariff>
https://bugzilla.mozilla.org/show_bug.cgi?id=1699273 Can I work on this bug

[08:35:02.0391] <arai>
jandem: thanks.  it still returns `nullptr` with `CheckedUnwrapDynamic`

[08:35:06.0429] <arai>
that means the wrapper isn't considered to be same-origin

[08:35:43.0181] <arai>
so, it's either that "same-origin" logic has race, or just that it's expected and we should handle such case

[09:11:08.0471] <arai>
maybe I was wrong.  it's not `CrossOriginObjectWrapper`, so the origin check isn't performed there

[09:18:15.0480] <chaircrusher>
If anyone cares about the problem I discussed yesterday (having to do with ExternalStrings in JS60 behaving differently than in 1.8.5) It turns out the problem was in our code, that wasn't properly assigning to vars in the global context that needed re-assigning.

[09:18:24.0813] <chaircrusher>
But again, thanks for all your help!

[10:38:49.0352] <mehaboob_shariff>
mgaudet|pto-and-holiday: Do I discuss regarding the bug here

[10:44:21.0175] <mgaudet|pto-and-holiday>
> <@mehaboob_shariff:mozilla.org> mgaudet|pto-and-holiday: Do I discuss regarding the bug here

Hey!  I am away from my computer a lot this weekend, but absolutely ask questions here and people will try to help

[10:44:39.0130] <mehaboob_shariff>
yeah I made changes to Array.cpp

[10:44:45.0699] <mehaboob_shariff>
and build the tests

[10:46:35.0631] <mehaboob_shariff>
after making changes how do I use moz-phab to commit and push

[10:46:43.0449] <mehaboob_shariff>
or what do I have to do

[10:49:36.0848] <sfink>
you did a `mach build` after making your changes (and before `mach jit-test`?)

[10:50:13.0467] <sfink>
if you have try server access, you'll probably want to do `mach try --preset=sm-shell`

[10:50:44.0527] <iain>
I don't think Outreachy applicants have try server access

[10:52:11.0985] <sfink>
ok, maybe using `moz-phab` to submit a patch is the right path, then? There's a way to trigger a try push from phabricator now, right? It might be a good use of that workflow.

[10:52:16.0389] <sfink>
assuming it exists and I didn't make it up

[10:52:36.0699] <sfink>
I haven't used `moz-phab` in over a year, so I don't remember that syntax

[10:52:48.0791] <arai>
mehaboob_shariff: have you commit your change?  (`hg commit` command)

[10:52:56.0363] <sfink>
oh, good point

[10:53:28.0606] <arai>
once you've modified files,  things to do is:  1. commit your change, with appropriate commit message.  2. submit your change by `moz-phab submit` command

[10:53:36.0910] <mehaboob_shariff>
> <@sfink:mozilla.org> you did a `mach build` after making your changes (and before `mach jit-test`?)

yes

[10:53:43.0195] <mehaboob_shariff>
i did

[10:54:42.0680] <mehaboob_shariff>
> <@arai:mozilla.org> mehaboob_shariff: have you commit your change?  (`hg commit` command)

not yet 

[10:54:59.0908] <arai>
okay, then. first, make sure `hg status` shows files that you've modified

[10:55:15.0452] <mehaboob_shariff>
> <@arai:mozilla.org> once you've modified files,  things to do is:  1. commit your change, with appropriate commit message.  2. submit your change by `moz-phab submit` command

okay

[10:55:16.0884] <arai>
files listed there will be stored into the patch

[10:55:43.0910] <mehaboob_shariff>
for moz-phab submit do I have to provide the origin too?


[10:55:45.0624] <iain>
There are instructions written [here](https://firefox-source-docs.mozilla.org/contributing/contribution_quickref.html#to-submit-a-patch)

[10:56:54.0109] <arai>
usually, `moz-phab submit` automatically figures out what to submit.  so you don't have to provide extra parameter

[10:57:00.0927] <iain>
If you put the reviewer's name in the commit message ("Bug <number>: <description> r=<reviewer>"), then `moz-phab submit` will do everything you need

[10:57:24.0959] <iain>
(You can also specify the reviewer with `moz-phab submit --reviewer <reviewer>`)

[10:57:52.0047] <iain>
mehaboob_shariff: Have you seen [https://docs.google.com/document/d/16tQqxYKXiwORe95UdlhGD2u8zDg3OH0UmSBMRy7F33U/edit#](this document)?

[10:57:54.0771] <mehaboob_shariff>
> <@iain:mozilla.org> If you put the reviewer's name in the commit message ("Bug <number>: <description> r=<reviewer>"), then `moz-phab submit` will do everything you need

cool

[10:58:06.0581] <iain>
 * mehaboob_shariff: Have you seen [this document](https://docs.google.com/document/d/16tQqxYKXiwORe95UdlhGD2u8zDg3OH0UmSBMRy7F33U/edit#)?

[11:29:20.0049] <mehaboob_shariff>
I have submmited it ... can I get a feedback

[11:29:28.0168] <mehaboob_shariff>
submitted*

[11:43:25.0662] <ptomato>
> <@iain:mozilla.org> mehaboob_shariff: Have you seen [this document](https://docs.google.com/document/d/16tQqxYKXiwORe95UdlhGD2u8zDg3OH0UmSBMRy7F33U/edit#)?

can I steal some of that document for my own outreachy mentoring?

[11:44:00.0737] <iain>
ptomato: Absolutely!

[11:44:57.0951] <ptomato>
thanks! it's really nicely written

[11:48:23.0990] <mehaboob_shariff>
Its is very nice indeed

[11:51:04.0608] <arai>
mehaboob_shariff: in the patch, you don't need to keep the old code as commented out

[11:53:04.0243] <arai>
the mercurial's history contains all the old code, so even if we needed it later, we can recover from it

[11:54:59.0234] <mehaboob_shariff>
> <@arai:mozilla.org> mehaboob_shariff: in the patch, you don't need to keep the old code as commented out

is that why the review bot gave a defect by clang-format

[11:56:24.0793] <arai>
it's different issue

[11:56:51.0022] <arai>
for the first one, it's because the indentation is off

[11:57:24.0316] <arai>
for the second one, you shouldn't put whitespace at the end of line

[11:58:14.0112] <arai>
the first one can be solved by just removing the whole line, because it's comment line that's not necessary

[11:58:43.0932] <arai>
the second one can be solved also by removing the whole line, because the empty line isn't necessary

[11:59:12.0856] <mehaboob_shariff>
okay 

[11:59:33.0898] <arai>
(for the second one, if your editor supports highlighting trailing whitespaces, try turning it on.  that will help finding them

[11:59:59.0211] <mehaboob_shariff>
> <@arai:mozilla.org> for the second one, you shouldn't put whitespace at the end of line

thank you :)

[12:00:15.0320] <mehaboob_shariff>
should I update the submitted patch?

[12:01:02.0622] <arai>
yes.  after modifying the local file, run `hg commit --amend`, so that new changes are stored into the same changeset (so, the current one is updated)

[12:01:25.0372] <mehaboob_shariff>
okay

[12:01:42.0403] <arai>
and then, submit again with `moz-phab submit`.   it will show that it's going to update existing phabricator revision

[15:02:29.0021] <sfink>
for formatting and whitespace, it's probably useful to get comfortable with running `mach clang-format` before making or amending a commit. That will automatically reformat the files you have modified.

[15:03:42.0341] <mehaboob_shariff>
> <@sfink:mozilla.org> for formatting and whitespace, it's probably useful to get comfortable with running `mach clang-format` before making or amending a commit. That will automatically reformat the files you have modified.

yes. I tried like that this time and submitted

[15:05:50.0170] <iain>
You can also configure `hg` to automatically run clang-format when you commit: https://firefox-source-docs.mozilla.org/code-quality/coding-style/format_cpp_code_with_clang-format.html#configuring-the-clang-format-commit-hook

[15:08:59.0996] <sfink>
does that work for other people? If I rebase a stack of patches, that makes a complete mess of my repository. I disabled it with prejudice.

[15:09:15.0623] <sfink>
I'd dig up the bug number, but I need to run now.

[15:24:07.0803] <iain>
I believe it was broken at some point in the past, but I haven't had a problem with it in a long time

[15:26:09.0157] <iain>
Every now and then I accidentally submit an unformatted patch because some command (histedit? absorb?) doesn't trigger the hook, but it doesn't happen often enough for me to have bothered figuring it out

[15:57:17.0136] <evilpie>
Must be histedit

[16:50:09.0596] <sfink>
bug 1557535

[16:50:11.0519] <botzilla>
https://bugzil.la/1557535 — NEW (nobody) — clang-format mercurial extension corrupts rebases

[16:54:28.0410] <iain>
I think I remember running into that problem at the time and disabling the extension, but then later while running `mach bootstrap` to update clang-format I gave in and re-enabled it, and I haven't had any problems since

[16:59:52.0234] <iain>
Although in general I tend to only rebase the patches that haven't already landed, and it sounds from your description like you are rebasing the whole stack? I don't know if that makes a difference


2021-04-03
[18:58:36.0044] <sfink>
that's a good point. I used to depend on rebase to delete already-landed patches from my stack. These days, I have a `landed` script that I use to obsolete them instead. Which is a little unnecessary (I could just rebase the unlanded patches onto the root, and prune the landed ones), but I kind of like having the true history in my obsolescence graph.

[18:58:57.0115] <sfink>
so it might actually work for me to re-enable, even if the bug *is* still there (and I don't know if it is)

[00:27:27.0481] <pavelp>
> <@mehaboob_shariff:mozilla.org> sent an image.

Hello everyone. Is it normal when some jit-test tests fail?

[00:31:32.0775] <jandem>
no they should all pass. Can you post a screenshot or use paste.mozilla.org to share the output? 

[00:38:09.0970] <mehaboob_shariff>
ok 

[00:39:16.0445] <jandem>
oh I see, the large array buffer tests are running out of memory 

[00:39:52.0815] <jandem>
we should fix that but you can probably just ignore them 

[00:42:18.0874] <mehaboob_shariff>
I haven't received anything from review bot after my final submit does it mean that there are no errors

[00:45:15.0881] <mehaboob_shariff>
I have used the clang format locally before submitting and it showed no errors

[00:45:22.0920] <arai>
yeah, there's no linting error found

[00:46:31.0162] <mehaboob_shariff>
So for my next step can I note this as a contribution in the outreachy page

[00:47:21.0868] <iain>
The lack of errors is just from machine checking

[00:47:31.0297] <iain>
The actual human review hasn't happened yet

[00:47:59.0679] <iain>
It's a holiday weekend in Canada, so your review might be a bit delayed

[00:48:19.0101] <mehaboob_shariff>
Okay sure

[00:56:31.0297] <jandem>
filed bug 1702857 for the large arraybuffer test failures

[00:56:32.0713] <botzilla>
https://bugzil.la/1702857 — NEW (nobody) — Large array buffer tests can fail with OOM

[03:32:17.0699] <pavelp>
> <@jandem:mozilla.org> no they should all pass. Can you post a screenshot or use paste.mozilla.org to share the output?

yes

[03:42:16.0088] <arai>
is the result with a build with `--enable-debug` and `--disable-optimize` ?  some test can take long time, and it might hit timeout depending on the build option and the environment

[03:42:22.0466] <arai>
especially, debug build can take long

[03:43:05.0679] <arai>
try passing `--timeout 1000` or something, to increase the timeout (defaults to 150 seconds)

[03:43:07.0030] <pavelp>
> <@arai:mozilla.org> is the result with a build with `--enable-debug` and `--disable-optimize` ?  some test can take long time, and it might hit timeout depending on the build option and the environment

yeah, it's a debug build.

[04:30:42.0828] <jandem>
pavelp: try `--enable-debug` with `--enable-optimize`, it's a lot faster for tests than `--disable-optimize`

[05:50:46.0214] <ashcode>
while setting up the firefox code base which version of firefox should i build firefox artifact,geckoview 

[06:14:08.0212] <arai>
ashcode: if it's about the qeustion in `./mach bootstrap`. there are 2 things.  if you're going to work on mobile, then geckoview.  if you're going to work on desktop browser, then firefox for desktop.

[06:14:36.0944] <ashcode>
its abt curl command

[06:14:43.0827] <arai>
then, if you're going to work on C++ or rust code, then non-artifact mode.   if you're going to work on HTML/CSS/JS code, then artifact mode will work (that builds faster)

[06:14:45.0550] <ashcode>
which setting up codebase

[06:15:13.0429] <ashcode>
when i was setting up as non arifact it showed error

[06:15:14.0289] <arai>
curl command?

[06:15:21.0800] <ashcode>
so i selected default

[06:15:35.0688] <arai>
are you following some documentation?  if so, which one is it?

[06:15:41.0976] <ashcode>
> <@arai:mozilla.org> curl command?

curl https://hg.mozilla.org/mozilla-central/raw-file/default/python/mozboot/bin/bootstrap.py -O
python3 bootstrap.py

[06:15:47.0076] <arai>
ah

[06:15:55.0184] <arai>
then, that's the same thing as `./mach bootstrap`

[06:16:22.0562] <ashcode>
anyways i build using artifact only

[06:16:38.0941] <ashcode>
desktop artifact*

[06:17:52.0708] <arai>
is the error still happening?

[06:18:04.0390] <arai>
if so, can you pastebin the error to https://paste.mozilla.org/ ?

[06:18:40.0867] <ashcode>
not wen i chose artifact mode for desktop..it wasnt allowing me to choose non artifact got desktop

[06:19:01.0858] <ashcode>
do u still want me to paste it?

[06:19:31.0683] <arai>
only if you want to use non-artifact mode and the error prevents that

[06:20:06.0090] <ashcode>
 * not wen i chose artifact mode for desktop..it wasnt allowing me to choose non artifact for desktop

[06:20:24.0847] <ashcode>
> <@arai:mozilla.org> only if you want to use non-artifact mode and the error prevents that

yh

[07:28:24.0005] <ashcode>
usage: jit_test.py [-h] [-s] [-f] [-o] [-F] [--no-show-failed] [-x EXCLUDE]
                   [--exclude-from EXCLUDE_FROM] [--slow] [--no-slow] [-t TIMEOUT]
                   [--no-progress] [--tinderbox] [--format {automation,none}] [--args ARGS]
                   [--feature-args ARGS] [-w FILE] [-C] [-r FILE] [-R FILE] [-g] [-G]
                   [--debugger DEBUGGER] [--valgrind] [--unusable-error-status]
                   [--valgrind-all] [--avoid-stdio] [--write-failure-output]
                   [--jitflags {all,jstests,ion,debug,tsan,baseline,interp,none}] [--ion]
                   [--no-xdr] [--tbpl] [-j MAX_JOBS] [--remote] [--deviceIP DEVICE_IP]
                   [--devicePort DEVICE_PORT] [--deviceSerial DEVICE_SERIAL]
                   [--remoteTestRoot REMOTE_TEST_ROOT] [--localLib LOCAL_LIB]
                   [--repeat REPEAT] [--this-chunk THIS_CHUNK] [--total-chunks TOTAL_CHUNKS]
                   [--ignore-timeouts FILE] [--retry-remote-timeouts TIMEOUT_RETRY]
                   [--test-reflect-stringify TEST_REFLECT_STRINGIFY] [-z GC_ZEAL]
                   JS_SHELL
jit_test.py: error: shell is not executable: /home/ashita/mozilla-unified/obj-x86_64-pc-linux-gnu/dist/bin/js


[07:28:59.0051] <ashcode>
> <@ashcode:mozilla.org> usage: jit_test.py [-h] [-s] [-f] [-o] [-F] [--no-show-failed] [-x EXCLUDE]
>                    [--exclude-from EXCLUDE_FROM] [--slow] [--no-slow] [-t TIMEOUT]
>                    [--no-progress] [--tinderbox] [--format {automation,none}] [--args ARGS]
>                    [--feature-args ARGS] [-w FILE] [-C] [-r FILE] [-R FILE] [-g] [-G]
>                    [--debugger DEBUGGER] [--valgrind] [--unusable-error-status]
>                    [--valgrind-all] [--avoid-stdio] [--write-failure-output]
>                    [--jitflags {all,jstests,ion,debug,tsan,baseline,interp,none}] [--ion]
>                    [--no-xdr] [--tbpl] [-j MAX_JOBS] [--remote] [--deviceIP DEVICE_IP]
>                    [--devicePort DEVICE_PORT] [--deviceSerial DEVICE_SERIAL]
>                    [--remoteTestRoot REMOTE_TEST_ROOT] [--localLib LOCAL_LIB]
>                    [--repeat REPEAT] [--this-chunk THIS_CHUNK] [--total-chunks TOTAL_CHUNKS]
>                    [--ignore-timeouts FILE] [--retry-remote-timeouts TIMEOUT_RETRY]
>                    [--test-reflect-stringify TEST_REFLECT_STRINGIFY] [-z GC_ZEAL]
>                    JS_SHELL
> jit_test.py: error: shell is not executable: /home/ashita/mozilla-unified/obj-x86_64-pc-linux-gnu/dist/bin/js

can someone tell y is this error comming while i m running ./mach jit-test

[07:29:00.0603] <arai>
are you building SpiderMonkey shell?

[07:29:40.0227] <arai>
the error means you haven't built the shell

[07:29:55.0165] <ashcode>
actually i m not quite sure:but i m following dis https://firefox-source-docs.mozilla.org/js/build.html

[07:30:01.0316] <arai>
have you run `./mach build` ?  if so, was it successful?

[07:30:12.0051] <ashcode>
> <@arai:mozilla.org> have you run `./mach build` ?  if so, was it successful?

here for testing we need to run dis

[07:30:28.0139] <ashcode>
> <@arai:mozilla.org> have you run `./mach build` ?  if so, was it successful?

yes ,even run was succesfull

[07:30:42.0600] <arai>
have you created mozconfig?

[07:31:02.0512] <arai>
by default (without mozconfig) `./mach build` doesn't build SpiderMonkey shell

[07:31:15.0361] <ashcode>
it already has one mozconfig i was trying to edit it

[07:32:03.0061] <ashcode>
 * it already has one mozconfig i was trying to edit it. when i tried it was showing error i thought because i m using artifact mode.So i removed optimisations

[07:32:03.0489] <arai>
what's the content of mozconfig file?

[07:32:34.0094] <ashcode>
> <@arai:mozilla.org> what's the content of mozconfig file?

# Automatically download and use compiled C++ components:
ac_add_options --enable-artifact-builds

[07:32:58.0706] <arai>
https://firefox-source-docs.mozilla.org/js/build.html

[07:33:10.0132] <arai>
there's instruction about mozconfig file

[07:33:20.0833] <arai>
please use that content

[07:33:35.0490] <ashcode>
wen i used that content it was throwing some error

[07:33:51.0984] <arai>
what was the error?

[07:34:00.0105] <ashcode>
> <@arai:mozilla.org> what was the error?

0:00.66 Clobber not needed.
 /home/ashita/mozilla-unified/obj-x86_64-pc-linux-gnu/config.status is out of date with respect to /home/ashita/mozilla-unified/obj-x86_64-pc-linux-gnu/.mozconfig.json
 0:00.67 /home/ashita/.mozbuild/_virtualenvs/mach/bin/python /home/ashita/mozilla-unified/configure.py
 0:00.88 Re-executing in the virtualenv
 0:01.07 Adding configure options from /home/ashita/mozilla-unified/mozconfig
 0:01.07   --enable-artifact-builds
 0:01.07   --enable-application=js
 0:01.07   --disable-optimize
 0:01.07   --enable-debug
 0:01.07 checking for vcs source checkout... hg
 0:01.09 checking for a shell... /usr/bin/sh
 0:01.11 checking for host system type... x86_64-pc-linux-gnu
 0:01.31 checking for target system type... x86_64-pc-linux-gnu
 0:01.37 Traceback (most recent call last):
 0:01.37   File "/home/ashita/mozilla-unified/configure.py", line 231, in <module>
 0:01.37     sys.exit(main(sys.argv))
 0:01.37   File "/home/ashita/mozilla-unified/configure.py", line 55, in main
 0:01.37     sandbox.run(os.path.join(os.path.dirname(__file__), "moz.configure"))
 0:01.37   File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/configure/__init__.py", line 512, in run
 0:01.37     self._value_for(option)
 0:01.37   File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/configure/__init__.py", line 617, in _value_for
 0:01.37     return self._value_for_option(obj)
 0:01.38   File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/util.py", line 1049, in method_call
 0:01.38     cache[args] = self.func(instance, *args)
 0:01.38   File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/configure/__init__.py", line 684, in _value_for_option
 0:01.38     raise InvalidOptionError(
 0:01.38 mozbuild.configure.options.InvalidOptionError: --disable-optimize is not available in this configuration
Error running mach:

    ['build']

The error occurred in code that was called by the mach command. This is either
a bug in the called code itself or in the way that mach is calling it.
You can invoke |./mach busted| to check if this issue is already on file. If it
isn't, please use |./mach busted file build| to report it. If |./mach busted| is
misbehaving, you can also inspect the dependencies of bug 1543241.

If filing a bug, please include the full output of mach, including this error
message.

The details of the failure are as follows:

Exception: Process executed with non-0 exit code 1: ['/home/ashita/.mozbuild/_virtualenvs/mach/bin/python', '/home/ashita/mozilla-unified/configure.py']

  File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/build_commands.py", line 151, in build
    return driver.build(
  File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/controller/building.py", line 1144, in build
    config_rc = self.configure(
  File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/controller/building.py", line 1529, in configure
    status = self._run_command_in_objdir(
  File "/home/ashita/mozilla-unified/python/mozbuild/mozbuild/base.py", line 897, in _run_command_in_objdir
    return self.run_process(cwd=self.topobjdir, **args)
  File "/home/ashita/mozilla-unified/python/mach/mach/mixin/process.py", line 176, in run_process
    raise Exception(


[07:34:04.0197] <botzilla>
https://bugzil.la/1543241 — NEW (nobody) — [meta] Tracking bug for known breakage in Firefox developer tooling

[07:35:17.0912] <arai>
ah

[07:35:23.0922] <arai>
in that configuration, you cannot use --enable-artifact-builds

[07:35:35.0595] <arai>
so, you cannot use artifact build

[07:35:54.0636] <arai>
and if you've run bootstrap for artifact mode, please re-run bootstrap and choose Firefox for desktop

[07:36:03.0091] <ashcode>
> <@arai:mozilla.org> in that configuration, you cannot use --enable-artifact-builds

dats wat i thought !! is dis due to the fact i m using in artifact mode?

[07:36:32.0512] <arai>
the option tells the build system to use artifact build (use pre-compiled binary)

[07:36:51.0746] <arai>
so, the supported option is limited

[07:37:01.0958] <arai>
(and also, I'm not sure if artifact mode supports JS shell)

[07:37:09.0766] <arai>
so, anyway, you need to use non-artifact mode

[07:37:13.0990] <ashcode>
> <@arai:mozilla.org> the option tells the build system to use artifact build (use pre-compiled binary)

so if i remove that line and replace it with what was given in documentation works?

[07:37:32.0108] <arai>
for mozconfig, yes.  please use the content in the document

[07:37:47.0735] <ashcode>
> <@arai:mozilla.org> so, anyway, you need to use non-artifact mode

how to get non artified mode ?delete everything and start from again?

[07:37:50.0952] <arai>
then, you need to run `./mach bootstrap` again, to set up the environment for non-artifact mode build

[07:38:07.0354] <ashcode>
> <@arai:mozilla.org> then, you need to run `./mach bootstrap` again, to set up the environment for non-artifact mode build

oh okay

[07:38:15.0780] <arai>
first, `./mach clobber`.  that will remove object directory created by artifact build

[07:38:28.0247] <arai>
(so that the next build runs from scratch

[07:38:43.0011] <arai>
then, `./mach bootstrap`, and choose 2 (Firefox for Desktop)

[07:38:49.0453] <arai>
that will install required tools (compiler etc)

[07:38:53.0595] <ashcode>
okay

[07:39:21.0433] <arai>
after that, follow the documentation (create mozconfig, export the env var, and run `./mach build`)

[07:43:35.0600] <ashcode>
is telemetry required?

[07:43:43.0147] <arai>
optional

[12:42:01.0254] <iain>
ashcode: Moving the conversation here, so that other people can also answer questions 

[12:42:32.0449] <iain>
If you have successfully built the js shell, the next step is to make sure that you can run jit-tests

[12:43:01.0578] <iain>
And then paste a screenshot in this channel of the tests passing for you

[12:43:32.0334] <iain>
After you've done that, find a bug on [codetribute](https://codetribute.mozilla.org/projects/jseng)

[12:43:40.0399] <ashcode>
should i exit js shell

[12:43:53.0723] <iain>
Yes

[12:44:45.0738] <iain>
[This document](https://docs.google.com/document/d/16tQqxYKXiwORe95UdlhGD2u8zDg3OH0UmSBMRy7F33U/edit?usp=sharing) has links to instructions for all the steps. If anything is unclear, let me know and I can update it!

[13:33:33.0206] <ashcode>
dis is the output of my jit-test

[13:37:20.0296] <iain>
ashcode: Did you build with `--disable-optimize`? For `jit-test`, you will want to build with `--enable-optimize`, to avoid having tests time out

[13:40:12.0093] <iain>
But otherwise that looks good! Go ahead and read through the bugs on codetribute and see if you can find one that looks interesting

[13:41:34.0006] <ashcode>
> <@iain:mozilla.org> ashcode: Did you build with `--disable-optimize`? For `jit-test`, you will want to build with `--enable-optimize`, to avoid having tests time out

yh i build with disable optimise,do u want me to build again with optimize and send ss?

[13:46:27.0675] <iain>
No, that's fine for now. Just make sure to build with `--enable-optimize` before running `jit-test` again. It will be a lot faster!


2021-04-04
[22:45:47.0566] <daneshwarik>
Hello everyone! I am Daneshwari, an Outreachy 2021 applicant and I'm interested to contribute to current round project: Modernize internationalization in SpiderMonkey's regular expression engine. I have worked with C++, regex and Git and Github. I am currently in mid-setup process. Once it completes I would like to start contributing. Thanks! 

[22:47:07.0141] <daneshwarik>
I wanted to confirm one thing, During setup process we have to install Visual Studio 2019. I already have Visual Studio Code(VS code) and I have been working on this. Is it still required to install Visual Studio for working on this project or I can continue with VS code ? 

[22:53:42.0779] <iain>
daneshwarik: Hi! Welcome to SpiderMonkey! 

[22:56:02.0034] <iain>
VSCode will be fine for editing code. There are configuration suggestions [here](https://firefox-source-docs.mozilla.org/contributing/vscode.html)

[22:56:34.0790] <liacds>
Hello! I am an Outreachy applicant, and I am excited to contribute to SpiderMonkey. I have already set up development environment

[22:57:11.0830] <iain>
liacds: Hello and welcome! Looks good!

[22:58:11.0199] <iain>
Feel free to look for a bug on [codetribute](https://codetribute.mozilla.org/projects/jseng). If you have any questions, ask here or in a comment on the bug

[22:59:02.0467] <liacds>
Okay thank you👍️

[23:01:41.0809] <iain>
daneshwarik: You will have to make sure that you have the development tools listed [here](https://codetribute.mozilla.org/projects/jseng) installed. I'm not sure if anybody in this channel has any experience setting up a Windows build environment using vscode, but if you run into any problems,somebody in #introduction likely knows the answer

[23:33:48.0687] <Redfire>
Would it be a good idea to make a PR to https://github.com/mozilla-spidermonkey/spidermonkey-embedding-examples with some rust examples too?

[23:34:00.0462] <Redfire>
 * Would it be a good idea to make a PR to https://github.com/mozilla-spidermonkey/spidermonkey-embedding-examples with some rust examples?

[00:40:48.0986] <pavelp>
> <@arai:mozilla.org> try passing `--timeout 1000` or something, to increase the timeout (defaults to 150 seconds)

thank you. PASSED ALL

[00:41:04.0615] <arai>
:)

[00:41:45.0653] <pavelp>
how can i take a bug to work on? i want to work on this one - https://bugzilla.mozilla.org/show_bug.cgi?id=1699277

[00:42:49.0316] <arai>
is the comment 1 there yours?

[00:43:09.0852] <pavelp>
oh, no, didn't saw it. so just comment in bug?

[00:43:46.0437] <arai>
usually, comment on the bug that you're going to work on.  or just submit a patch

[00:44:03.0029] <pavelp>
got it. thank you

[00:44:07.0900] <arai>
bug 1699268 is a meta bug for it, and there are some more similar bugs

[00:44:09.0212] <botzilla>
https://bugzil.la/1699268 — NEW (nobody) — [meta] Remove internal uses of JSID_IS_ATOM API

[00:44:50.0571] <arai>
"Depends on:" field under "References" section in the bug page

[01:19:11.0122] <18f>
Hi, If I think some code is redundant , could I remove it?

[01:20:11.0683] <arai>
yeah.  feel free to file a bug and post a patch there

[01:20:43.0740] <18f>
I will try to give my reason, then u decide.

[01:21:02.0488] <18f>
because it is a security check, but I think it is redundant...

[01:21:41.0288] <18f>
could u give me a link to file a bug. It's not a bug, I just think we don't need the check...

[01:29:02.0083] <arai>
18f: https://bugzilla.mozilla.org/enter_bug.cgi?product=Core&component=JavaScript%20Engine

[01:29:18.0138] <18f>
ok~ Thanks .

[01:30:05.0658] <arai>
we call everything "bug", including a task to add new thing, or just remove redundant code or comment

[01:31:17.0810] <18f>
ok, I know

[01:48:20.0108] <daneshwarik>
> <@iain:mozilla.org> daneshwarik: You will have to make sure that you have the development tools listed [here](https://codetribute.mozilla.org/projects/jseng) installed. I'm not sure if anybody in this channel has any experience setting up a Windows build environment using vscode, but if you run into any problems,somebody in #introduction likely knows the answer

Thanks for the articles. I'll follow them and go with VScode for now since I had the C++ setup earlier. If any problems are faced I'll surely ask them.

[07:42:00.0172] <sfink>
daneshwarik: I believe you *do* need to install Visual Studio 2019 to be able to build and link on Windows, [as described here](https://firefox-source-docs.mozilla.org/setup/windows_build.html). It's not for the code editor or for the compiler; you'll use vscode and clang for those. I think it's for the SDK and some other headers and libraries to link with. It's a free (but large) download.

[09:29:58.0829] <Lcf.vs>
hi all,

still playing with blob modules, I just created (for the fun) an `async` `with`, that works in strict mode, based on these requirements: https://github.com/VSADX/with-keyword-replacement
https://bit.ly/3fCZlD7

[09:30:14.0089] <Lcf.vs>
(strict mode & CSP)

[10:16:00.0345] <Lcf.vs>
it isn't a funny POC? 🙄

[11:05:54.0348] <pavelp>
After removing JSID_IS_ATOM from js/src/debugger/  got one test failed.

[11:06:05.0636] <pavelp>
What can i do with that?

[11:06:36.0307] <pavelp>
i've tried run this test.

[11:12:38.0938] <arai>
try `./mach jit-test gc/bug-1565272.js`

[11:13:17.0952] <pavelp>
oh, thanks

[11:14:46.0036] <Lcf.vs>
(if the bit.ly link afraid, I also can post a non-masked url but it's just to avoid a very long url)

[11:15:02.0773] <Lcf.vs>
 * (if the `bit.ly` link afraid, I also can post a non-masked url but it's just to avoid a very long url)

[11:15:16.0533] <Lcf.vs>
just ask if any

[11:15:29.0821] <Lcf.vs>
:)

[11:17:50.0675] <arai>
pavelp: then, if the test fails with the command, then the next step is to debug it, to see how it fails

[11:18:14.0343] <arai>
are you using debug build?  (does your mozconfig have `--enable-debug` and `--disable-optimize`?)

[11:18:26.0126] <pavelp>
> <@arai:mozilla.org> pavelp: then, if the test fails with the command, then the next step is to debug it, to see how it fails

gotcha. i've started all tests again and seems passed (already 600 seconds passed).

[11:18:30.0331] <Lcf.vs>
 * (if the `bit.ly` link afraid, I also can post a non-masked url but it's just to avoid a very long url, **1090 chars**)

[11:19:39.0638] <arai>
if you're on linux, `./mach --debugger=gdb jit-test gc/bug-1565272.js` will run the testcase with gdb

[11:19:52.0540] <arai>
or `./mach --debugger=lldb jit-test gc/bug-1565272.js` if you're on macOS

[11:20:07.0959] <arai>
err, sorry, the order was wrong

[11:20:09.0946] <Lcf.vs>
 * (if the `bit.ly` link scary you, I also can post a non-masked url but it's just to avoid a very long url, **1090 chars**)

[11:20:22.0209] <arai>
 * if you're on linux, `./mach jit-test  --debugger=gdb gc/bug-1565272.js` will run the testcase with gdb 

[11:20:31.0532] <arai>
 * or `./mach  jit-test --debugger=lldb gc/bug-1565272.js` if you're on macOS

[11:20:36.0070] <arai>
fixed the above messages

[11:21:47.0976] <pavelp>
> <@arai:mozilla.org> if you're on linux, `./mach jit-test  --debugger=gdb gc/bug-1565272.js` will run the testcase with gdb

ok. you think it's better to run this testcase again to be sure it will pass?

[11:21:59.0491] <arai>
yeah

[11:22:43.0336] <pavelp>
> <@arai:mozilla.org> are you using debug build?  (does your mozconfig have `--enable-debug` and `--disable-optimize`?)

debug build with enabled optimize

[11:23:00.0442] <arai>
okay, that would also work

[11:24:15.0992] <ashcode>
which ide do u use for dev?

[11:24:19.0073] <ashcode>
vs code?

[11:24:23.0485] <pavelp>
yes

[11:24:24.0079] <arai>
also, even if it passes the next time, it can still be an issue that it intermittently fail

[12:10:25.0093] <ashcode>
while i was working with bug1699276, i was replacing JSID_IS_ATOM in cpp files with id.isAtom, itshows me this error while i m running ./mach build command can someone help where i m going wrong.

[12:11:39.0283] <arai>
wait, sounds like you two are working on same bugs?

[12:12:18.0149] <arai>
 * wait, sounds like you two are working on same bug?

[12:12:21.0326] <ashcode>
who is the other one?

[12:12:36.0273] <arai>
pavelp: ^

[12:12:54.0901] <ashcode>
i saw it was unassigned , and i was the first one to comment

[12:14:11.0491] <ashcode>
https://bugzilla.mozilla.org/show_bug.cgi?id=1699276

[12:14:36.0154] <pavelp>
hm. i've decided to submit a patch without a comment just as i was advised.

[12:15:15.0215] <iain>
I don't think there's a collision here

[12:15:33.0186] <iain>
There are multiple bugs removing JSID_IS_ATOM from different places

[12:16:36.0096] <ashcode>
> <@iain:mozilla.org> There are multiple bugs removing JSID_IS_ATOM from different places

so should i continue  and complete it or find another one?

[12:17:09.0448] <pavelp>
no problem, take it

[12:17:22.0721] <iain>
These are two different bugs, so you can each work on your own

[12:18:11.0807] <pavelp>
i think this is a last JSID_IS_ATOM bug

[12:20:06.0617] <ashcode>
can someone tell the error while i got during the build

[12:20:42.0153] <ashcode>
> <@pavelp:mozilla.org> sent an image.

yh i was only checking unassigned....jus realised there were 5 of the same type

[12:22:44.0726] <arai>
ashcode: the error is saying that none of `isAtom` methods match to the call.  usually means that the parameter type is unexpected

[12:22:47.0004] <pavelp>
> <@ashcode:mozilla.org> can someone tell the error while i got during the build

isAtom() dont need args 

[12:23:32.0334] <pavelp>
> <@iain:mozilla.org> These are two different bugs, so you can each work on your own

can you please help me understand this bug - https://bugzilla.mozilla.org/show_bug.cgi?id=1695386

[12:23:44.0589] <arai>
also, it sounds like you've replaced `JSID_TO_ATOM`.  that's different macro than `JSID_IS_ATOM`

[12:24:51.0769] <arai>
pavelp: do you have question regarding the bug description?

[12:25:48.0290] <pavelp>
> <@arai:mozilla.org> pavelp: do you have question regarding the bug description?

yeah, somewhat unclear what's need to be done

[12:29:05.0279] <arai>
does the background part make sense to you?

[12:30:50.0219] <ashcode>
> <@arai:mozilla.org> also, it sounds like you've replaced `JSID_TO_ATOM`.  that's different macro than `JSID_IS_ATOM`

no ,i checked i removed JSID_IS_ATOM

[12:31:21.0542] <ashcode>
> <@arai:mozilla.org> also, it sounds like you've replaced `JSID_TO_ATOM`.  that's different macro than `JSID_IS_ATOM`

 * no ,i checked i replaced JSID_IS_ATOM

[12:31:34.0467] <arai>
ashcode: try checking the output of `hg diff` if you're using mercurial, or `git diff` if you're using git

[12:31:39.0464] <pavelp>
> <@arai:mozilla.org> does the background part make sense to you?

partly. i have some knowledge about jit. i'll try to figure it out tomorrow.

[12:32:04.0058] <ashcode>
> <@arai:mozilla.org> ashcode: try checking the output of `hg diff` if you're using mercurial, or `git diff` if you're using git

okay

[12:35:59.0940] <arai>
pavelp: to my understanding, the thing needs to be done in the bug is that, avoid using `BailoutKind::TooManyArguments` for some specific case described there

[12:36:24.0137] <arai>
so, I think first you need to figure out how the current code works, and when the problematic case happens

[12:37:17.0556] <arai>
iain: please correct me, if that's wrong

[12:37:28.0347] <pavelp>
> <@arai:mozilla.org> pavelp: to my understanding, the thing needs to be done in the bug is that, avoid using `BailoutKind::TooManyArguments` for some specific case described there

makes sense, thank you again

[12:37:45.0624] <iain>
That is correct

[12:48:42.0993] <iain>
This bug is a little harder than the `JSID_IS_ATOM` bugs. One of the things we're evaluating in Outreachy applicants is how well you handle learning on the fly. You definitely don't have to figure everything out on your own, but I encourage you to spend a little time trying to figure it out, and identify specific questions you can ask. (More about this in the second half of [this document](https://docs.google.com/document/d/16tQqxYKXiwORe95UdlhGD2u8zDg3OH0UmSBMRy7F33U/edit?usp=sharing))

[12:52:03.0007] <pavelp>
> <@iain:mozilla.org> This bug is a little harder than the `JSID_IS_ATOM` bugs. One of the things we're evaluating in Outreachy applicants is how well you handle learning on the fly. You definitely don't have to figure everything out on your own, but I encourage you to spend a little time trying to figure it out, and identify specific questions you can ask. (More about this in the second half of [this document](https://docs.google.com/document/d/16tQqxYKXiwORe95UdlhGD2u8zDg3OH0UmSBMRy7F33U/edit?usp=sharing))

well, i'm here for learning, thanks :)


2021-04-05
[23:17:57.0500] <ashcode>
i have created a patch and put it for review do i have to wait fr the reviewer or can i start on another bug?

[23:20:20.0979] <iain>
ashcode: Wait for the reviewer. They may have useful feedback that will be relevant for your next bug.

[23:21:28.0964] <ashcode>
my reviwer is on holiday-mgaudet

[00:00:20.0616] <iain>
ashcode: It's a holiday weekend in Canada. I believe he's back tomorrow; if not, I can take over the review

[07:34:39.0482] <18f>
I think sink is not easy to understand.. 

[07:53:54.0162] <mgaudet|pto-and-holiday>
> <@redfire75369:mozilla.org> Would it be a good idea to make a PR to https://github.com/mozilla-spidermonkey/spidermonkey-embedding-examples with some rust examples?

I suspect it would be appreciated :) 

[08:40:31.0741] <iain>
18f: An important thing to know about the sink code is that a lot of it is [disabled](https://searchfox.org/mozilla-central/rev/05cea55db68db7a3c8531cadaa169e46176e3983/js/src/jit/Sink.cpp#49,118-124) by [default](https://searchfox.org/mozilla-central/source/js/src/jit/JitOptions.cpp#115)

[08:42:24.0653] <sfink>
Heh. When I first saw that comment I thought that 18f has mistyped my userid, and scrolled up to see what I had been trying to explain recently. :-)

[08:42:32.0754] <sfink>
 * Heh. When I first saw that comment I thought that 18f had mistyped my userid, and scrolled up to see what I had been trying to explain recently. :-)

[11:46:22.0878] <zbraniecki>
Waldo: hi, a friendly ping that we're waiting for your review in https://bugzilla.mozilla.org/show_bug.cgi?id=1695937

[15:02:15.0525] <mgaudet>
confession: Fixing fuzzbugs on the private method storage patches. 

[15:02:17.0943] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire


2021-04-06
[18:18:01.0923] <18f>
> <@iain:mozilla.org> 18f: An important thing to know about the sink code is that a lot of it is [disabled](https://searchfox.org/mozilla-central/rev/05cea55db68db7a3c8531cadaa169e46176e3983/js/src/jit/Sink.cpp#49,118-124) by [default](https://searchfox.org/mozilla-central/source/js/src/jit/JitOptions.cpp#115)

emmmm, If it is disable, why not delete it directly...

[18:18:24.0851] <18f>
> <@sfink:mozilla.org> Heh. When I first saw that comment I thought that 18f had mistyped my userid, and scrolled up to see what I had been trying to explain recently. :-)

hhhh ,  cool name.

[18:22:10.0318] <18f>
Even if I don't know too much thing about sink, but seems it will do two optimizations.

[18:22:56.0167] <18f>
1. if a instruction's all uses is recoveronbailoout, propagate the flags to the instruction.

[18:23:21.0931] <18f>
2. if it is not, and a instruction's all uses share same(common) dominator.

[18:24:03.0907] <18f>
2.1 if it is canclone(). create a clone instruction.

[18:24:20.0331] <18f>
2.2 move the instruction to commom dominator.

[18:24:52.0866] <18f>
seems the if the flags set to disable, will disable optimization "2".

[18:25:25.0548] <18f>
But "2" is why we decide add sink phase... so curious about this...

[18:26:37.0787] <18f>
https://bugzilla.mozilla.org/show_bug.cgi?id=1093674

[01:26:23.0993] <mehaboob_shariff>
mgaudet: can I now add the bug fix as a contribution

[03:07:25.0644] <Lcf.vs>
Since someone said to me it can interest some fools here, I re-share it a last time...

still playing with blob modules, I created (for the fun) an `async` `with` PoC, that works in strict mode & CSP, based on these requirements: https://github.com/VSADX/with-keyword-replacement
https://bit.ly/3fCZlD7

:)

[03:08:26.0996] <nbp>
18f: Sink phase is half disabled now, and the code which is disabled should probably be removed unless someone else want to give it a try.

[03:09:00.0262] <nbp>
At the moment, it will only Sink in bailout path, by flagging instructions as recovered-on-bailout.

[03:09:47.0122] <Lcf.vs>
 * Since someone said to me it can interest some fools here and since the weekend ended, I re-share it a last time...

still playing with blob modules, I created (for the fun) an `async` `with` PoC, that works in strict mode & CSP, based on these requirements: https://github.com/VSADX/with-keyword-replacement
https://bit.ly/3fCZlD7

:)

[03:13:22.0901] <nbp>
18f: The example in comment 1 of the same bug is worth looking at.

[03:21:26.0876] <Lcf.vs>
 * Since someone from the Firefox team said to me it can interest some fools here and since the weekend ended, I re-share it a last time...

still playing with blob modules, I created (for the fun) an `async` `with` PoC, that works in strict mode & CSP, based on these requirements: https://github.com/VSADX/with-keyword-replacement
https://bit.ly/3fCZlD7

:)

[03:29:29.0770] <Lcf.vs>
 * Since someone from the Firefox team said to me it can interest some fools here and since the weekend ended, I re-share it a last time...

still playing with blob modules, I created (for the fun) an `async` `with` PoC, that works in strict mode & CSP, based on these requirements: https://github.com/VSADX/with-keyword-replacement
https://bit.ly/2RbWl6D

:)

[03:32:00.0310] <Lcf.vs>
oh, sorry... shame on me... I didn't see my editor's url was wrong, escaping some chars...  😬 I just updated my bitly link to a correct one

[03:36:30.0873] <ashwiniwankhede>
Hello everyone! This is Ashwini. I am an outreachy applicant and I was thinking if could contribute to Internationalization in SpiderMonkey's regular expression engine. 

[03:38:16.0295] <Lcf.vs>
 * Since someone from the Firefox team said to me it can interest some fools here and since the weekend ended, I re-share it a last time...

still playing with blob modules, I created (for the fun) an `async` `with` PoC, that works in **strict mode & CSP**, based on these requirements: https://github.com/VSADX/with-keyword-replacement
https://bit.ly/2RbWl6D

:)

[03:38:33.0755] <ashwiniwankhede>
I was downloading the FireFox source code and in the process it is asking API Token from the phabricator page. 
How should I login to phabricator(there is no option for setting up an account)?

[04:01:12.0180] <jandem>
ashwiniwankhede: hey, welcome! Did you see [this document](https://docs.google.com/document/d/16tQqxYKXiwORe95UdlhGD2u8zDg3OH0UmSBMRy7F33U/edit?usp=sharing)?

[04:01:30.0802] <jandem>
(phabricator is linked to the bugzilla account mentioned there)

[04:02:11.0059] <jandem>
 * phabricator is linked to the bugzilla account mentioned there

[04:03:37.0006] <jandem>
there's some more info here: https://moz-conduit.readthedocs.io/en/latest/phabricator-user.html

[04:43:49.0747] <ashwiniwankhede>
jandem: It worked. I was trying but same but for some reason I was not able to register account from my laptop. I tried with another device it works fine. Thanks.

[04:44:40.0389] <jandem>
excellent

[04:58:47.0205] <jandem>
pretty cool, MS Flight Simulator uses Wasm module add-ons instead of DLLs: https://docs.flightsimulator.com/html/Programming_Tools/WASM/WebAssembly.htm

[04:58:58.0046] <jandem>
 * pretty cool, MS Flight Simulator supports Wasm module add-ons instead of DLLs: https://docs.flightsimulator.com/html/Programming_Tools/WASM/WebAssembly.htm

[05:03:32.0473] <leveryd>
how to call "js function" in c++ code? is there any document or sample code? i does not find sample code on "https://github.com/mozilla-spidermonkey/spidermonkey-embedding-examples".

[05:10:51.0105] <yulia>
do you mean arbitrary js functions, or js functions that are part of the engine (self hosted)

[05:12:03.0325] <yulia>
or, can you describe your use case a bit?

[05:12:31.0411] <arai>
leveryd:
```
JS::Rooted<JS::Value> thisValue(cx, {this value here});
JS::Rooted<JS::Value> functionValue(cx, {callee function here});
JS::Rooted<JS::Value> arg0(cx, {first argument here});
JS::Rooted<JS::Value> rval(cx);

JS::Rooted<JSObject*> functionObject(cx, &functionValue.toObject());

JS::RootedVector<JS::Value> args(cx);
if (!args.append(arg1)) {
  return false;
}

if (!JS::Call(cx, thisValue, functionObject, args, &rval)) {
  // Either the function throws, or the call fails for some other reason.
  return false;
}

// rval contains the returned value
```


[05:12:46.0037] <leveryd>
js functions that are part of the engine.those js function declaration is like "func(JSContext* cx, uint32_t argc, Value* vp) {..}"

[05:13:14.0440] <arai>
oh, then the above isn't complete

[05:13:21.0944] <yulia>
right, those are being called back from js usually, i think we have some examples how we normally do that

[05:13:41.0821] <yulia>
or, arai will have a good example in a second!

[05:14:38.0606] <arai>
leveryd: do you have function object (`JSObject*`) or function value (`JS::Value`) of the C++ function?

[05:14:47.0560] <arai>
or just a function pointer?

[05:15:31.0827] <leveryd>
i will describe my use case more clearly.wait

[05:21:06.0194] <leveryd>
i want to get ast of javascript code. i plan to call "reflect_parse" function in ReflectParse.cpp, and then traverse the return object "CallArgs rval()". what i do is like the anwser in "https://stackoverflow.com/questions/34480530/spidermonkey-24-how-to-call-reflect-parse.

[05:24:06.0945] <arai>
usually, the C++ function with that signature isn't supposed to be directly called (except from the engine internal)

[05:24:27.0392] <arai>
So, I guess it's better retrieving the value of `Reflect.parse`, and call it

[05:26:10.0428] <arai>
First, you need to call `JS_InitReflectParse`, so that `Reflect.parse` property is defined (it's non-standard, so it's not defined by default)

[05:29:49.0019] <leveryd>
> <@arai:mozilla.org> So, I guess it's better retrieving the value of `Reflect.parse`, and call it

after Reflect.parse property is defined,how to call "Reflect.parse"? any document?

[05:30:26.0172] <arai>
leveryd:
```
// global = global object

// define Reflect.parse
if (!JS_InitReflectParse(cx, global)) {
  return false;
}

// Get Reflect.parse value
JS::Rooted<JS::Value> Reflect(cx);
if (!JS_GetProperty(cx, global, "Reflect", &Reflect)) {
  return false;
}

// assert Reflect.isObject()

JS::Rooted<JSObject*> ReflectObj(cx, Reflect.toObject());
JS::Rooted<JS::Value> Reflect_parse(cx);
if (!JS_GetProperty(cx, ReflectObj, "Reflect", &Reflect_parse)) {
  return false;
}

// use Reflect_parse as function value in the above example
```


[05:30:51.0678] <arai>
 * leveryd:
```
// global = global object

// define Reflect.parse
if (!JS_InitReflectParse(cx, global)) {
  return false;
}

// Get Reflect.parse value
JS::Rooted<JS::Value> Reflect(cx);
if (!JS_GetProperty(cx, global, "Reflect", &Reflect)) {
  return false;
}

// assert Reflect.isObject()

JS::Rooted<JSObject*> ReflectObj(cx, &Reflect.toObject());
JS::Rooted<JS::Value> Reflect_parse(cx);
if (!JS_GetProperty(cx, ReflectObj, "Reflect", &Reflect_parse)) {
  return false;
}

// use Reflect_parse as function value in the above example
```

[05:31:16.0304] <arai>
So, get the property value by `JS_GetProperty`

[05:31:41.0010] <arai>
so that you'll get `Reflect.parse` value, that's function value that can be used by the above `JS::Call` example

[05:32:12.0747] <arai>
"this value" will be `Reflect`

[05:32:21.0014] <arai>
 * "this value" should be `Reflect`

[05:33:00.0666] <leveryd>
thanks. i need spend some time to understand those.

[05:37:53.0688] <yulia>
Just in case anyone was missed when tcampbell posted this earlier, quick PSA: we are looking for more info about projects embedding spidermonkey: https://discourse.mozilla.org/t/survey-where-are-you-embedding-spidermonkey/77988 please let us know if you haven't already about your project!

[05:40:44.0808] <leveryd>
> <@arai:mozilla.org> leveryd:
> ```
> JS::Rooted<JS::Value> thisValue(cx, {this value here});
> JS::Rooted<JS::Value> functionValue(cx, {callee function here});
> JS::Rooted<JS::Value> arg0(cx, {first argument here});
> JS::Rooted<JS::Value> rval(cx);
> 
> JS::Rooted<JSObject*> functionObject(cx, &functionValue.toObject());
> 
> JS::RootedVector<JS::Value> args(cx);
> if (!args.append(arg1)) {
>   return false;
> }
> 
> if (!JS::Call(cx, thisValue, functionObject, args, &rval)) {
>   // Either the function throws, or the call fails for some other reason.
>   return false;
> }
> 
> // rval contains the returned value
> ```

rval's type is JS::MutableHandleValue. what operations can be used deal with these type? any document or sample code?

[05:41:30.0714] <arai>
leveryd: a pointer to Rooted<T> is implicitly comvertible to MutableHandle<T>

[05:41:52.0717] <arai>
 * leveryd: a pointer to Rooted<T> is implicitly convertible to MutableHandle<T>

[05:42:18.0831] <arai>
so, just prepending `&` to Rooted variable work

[05:44:10.0034] <arai>
https://searchfox.org/mozilla-central/rev/d7e344e956d9da2808ea33e1fe0f963ed10c142d/js/public/RootingAPI.h#102-110 (and the entire SMDOC) for the documentation

[06:09:18.0735] <mgaudet>
> <@mehaboob_shariff:mozilla.org> mgaudet: can I now add the bug fix as a contribution

Yep :) 

[07:09:24.0711] <wraitii>
Hello everyone, trying to work out the usage of OffThreadPromiseTask. Am I correct that this class mostly serves to block the JSContext from destroying itself before all such tasks are resolved (/dispatched)? 

[07:09:41.0960] <wraitii>
In particular I'm not entirely sure what to choose between that system and the JS::JobQueue system

[07:14:15.0075] <jandem>
wraitii: did you see [this comment](https://searchfox.org/mozilla-central/rev/d7e344e956d9da2808ea33e1fe0f963ed10c142d/js/src/vm/OffThreadPromiseRuntimeState.h#29)?

[07:15:26.0101] <wraitii>
I did, but I'm not entirely sure what to make of it 

[07:17:26.0539] <wraitii>
if I get it right, it'd go "JS call some JSNative function ,which makes an OffThreadPromiseTask, returning a promise, and then the code runs somewhere, and at some point the OffThreadPromiseTask::dispatch is called and the promise resolves"

[07:18:01.0803] <wraitii>
which doesn't seem all that different from "JS calls a JSNative, which manually creates a promise object & return that, then does its computation, and someday calls the promise's resolve()"

[07:28:53.0206] <jandem>
wraitii: I _think_ the JobQueue mechanism is probably more lightweight if you only care about the main thread. `OffThreadPromiseTask` was added for larger off-thread workloads like compilation or network IO

[07:29:56.0907] <wraitii>
well there's a good chance we'll run the 'work code' asynchronously, C++ side, on some other thread, but given our architecture we have to guarantee it returns someday anyways, so I don't really have concerns about shutting off

[07:30:26.0400] <wraitii>
secondary question then -> what the heck am I supposed to do in "enqueuePromiseJob"

[07:30:54.0961] <wraitii>
I get that 'job' is the function to call, but I'm not sure how to get the argument ?

[07:31:40.0769] <jandem>
you don't want to use the internal job queue, `js::UseInternalJobQueues`?

[07:34:19.0378] <wraitii>
Mh, the comments sort of made it sound like a not-production-ready/debug-only implementation, but I guess it's not?

[07:34:36.0728] <wraitii>
My question is largely when that runs jobs

[07:34:47.0644] <wraitii>
since I need that to be deterministic

[07:35:26.0858] <jandem>
I htink you have to call `js::RunJobs` for that

[07:35:49.0347] <wraitii>
right

[07:36:15.0633] <wraitii>
Correct that there is only one job queue per runtime, it's not a per realm thing?

[07:36:20.0411] <tcampbell>
thanks for the embedder info, wraitii 

[07:37:03.0178] <jandem>
wraitii: correct

[07:38:05.0305] <wraitii>
tcampbell: no problem - I tried adding some myself some notifications for the discourse thing too, so I won't miss further exchanges

[07:38:37.0781] <wraitii>
jandem: Right, thanks. I guess I'm not sure at this stage if I want to use the internal queue, but otherwise I can just take some inspiration from it to code another derived class

[07:39:35.0122] <jandem>
wraitii: yeah, maybe use it to get started until you hit a wall

[09:24:24.0094] <evilpie>
jonco: could we add something like a handle() function returning a Handle<T> to WrappedPtrOperations<Maybe<>>?  i.e. https://searchfox.org/mozilla-central/rev/d7e344e956d9da2808ea33e1fe0f963ed10c142d/js/public/RootingAPI.h#1509

[09:26:02.0750] <jonco>
evilpie: is that safe?  you could reset() the Maybe and invalidate the handle

[09:26:50.0540] <jonco>
or do you mean return Handle<Maybe<T>>

[09:27:43.0497] <evilpie>
no I guess you are right

[09:28:19.0236] <jonco>
what's the specific case?  happy to add anything that makes rooting easier to use, just as long as it doesn't add footguns

[09:29:34.0151] <evilpie>
this is about https://phabricator.services.mozilla.com/D110663

[09:55:03.0473] <mehaboob_shariff>
> <@mgaudet:mozilla.org> Yep :)

I can work on another bug also right ?

[09:55:45.0202] <iain>
mehaboob_shariff: Yep! 

[10:05:51.0300] <mehaboob_shariff>
https://bugzilla.mozilla.org/show_bug.cgi?id=1699273#c4

[10:06:05.0817] <mehaboob_shariff>
should I use this as a contribution link

[10:45:36.0416] <nbp>
tcampbell: should we add mozjs (rust crate) in the embedders list?

[10:46:04.0542] <nbp>
Seeing that GJS is being mentioned without the consumers of GJS

[10:47:22.0533] <tcampbell>
Yeah, that makes sense to me

[10:47:33.0298] <tcampbell>
You should be able to edit the wiki post

[10:49:59.0407] <tcampbell>
(my sorting was basically by current supported version..)

[10:51:07.0099] <nbp>
https://crates.io/crates/mozjs/reverse_dependencies

[13:43:13.0631] <zbraniecki>
tcampbell jandem we asked Waldo and anba for review on https://bugzilla.mozilla.org/show_bug.cgi?id=1695937 2 weeks ago with no response. Would you be ok with us landing it as-is? We'll have a chance to further fine tune as we propose the patches to switch SpiderMonkey to use it.

[13:43:45.0554] <tcampbell>
/me rereads the existing comments from them

[13:46:59.0796] <tcampbell>
zbraniecki yep, that works for me.


2021-04-07
[21:21:34.0988] <18f>
> <@nbp:mozilla.org> 18f: The example in comment 1 of the same bug is worth looking at.

Uh, I read it, and debug. now undertsand how it  works. Yhx

[21:21:37.0366] <18f>
Thx

[23:27:57.0483] <18f>
https://hg.mozilla.org/releases/mozilla-b2g37_v2_2r/file/d2c2577599d44b7bb433e22a48b766f0007b07af/js/src/jit/Ion.cpp#l1349

[23:28:21.0949] <18f>
hey, at here, we run |GVN| before |LICM|.

[23:28:49.0002] <18f>
I want to whether a way could make me run LICM before |GVN|?

[23:41:08.0209] <iain>
18f: I don't think anything would break if we ran LICM before GVN

[23:41:45.0809] <iain>
You could try it and find out

[23:41:48.0431] <iain>
Why do you ask?

[23:42:16.0070] <18f>
wait me a moment.

[23:42:33.0165] <18f>
I try to express it clearly.

[23:43:31.0931] <18f>
I read some blog, confused with "recompile".

[23:43:53.0392] <18f>
So I curious about,are there a process like this.

[23:44:03.0912] <18f>
1. first we optimize out program.

[23:44:30.0607] <18f>
1.1 we optimize it, |GVN->LICM->another|.

[23:44:48.0340] <18f>
1.2 some tricks make us recompile.

[23:45:17.0051] <18f>
2. we reuse our ir, the. |GVN->LICM| again.

[23:45:53.0002] <18f>
3: combine with two pass: |GVN->LICM->another->GVN->LICM->another|

[23:46:12.0911] <iain>
Whenever we recompile, we start again from WarpBuilder

[23:46:19.0393] <18f>
|GVN(1)->LICM(2)->another->GVN(3)->LICM(4)->another|

[23:46:39.0754] <iain>
We never optimize the same MIR graph twice

[23:46:48.0828] <18f>
oh... that will discard the mir code... right?

[23:47:31.0683] <iain>
Yes

[23:48:04.0578] <iain>
We discard the MIR after we finish compiling

[23:48:35.0221] <iain>
All that is left is the generated code

[23:49:02.0660] <18f>
I know what u means. seems.

[23:49:36.0365] <iain>
(The result of compilation is an [IonScript](https://searchfox.org/mozilla-central/source/js/src/jit/IonScript.h))

[23:49:40.0353] <18f>
It means if I want to run GVN, I must run warpbuilder first?

[23:50:36.0071] <18f>
are there a way  like |builder->gvn->licm->|for some reason|->gvn->licm|?

[23:51:05.0188] <iain>
No

[23:51:26.0477] <iain>
It might be possible for us to run GVN or LICM twice

[23:51:43.0392] <iain>
 * It might be possible for us to run GVN or LICM twice by changing Ion

[23:51:49.0195] <iain>
 * It might be possible for us to run GVN or LICM twice by changing Ion.cpp

[23:51:52.0900] <18f>
But we didn't...

[23:52:28.0864] <iain>
We don't currently do that now

[23:53:16.0258] <iain>
I know at some point we experimented with running GVN again at the end of optimization

[23:53:25.0513] <iain>
But it had problems

[23:53:33.0941] <iain>
nbp might remember what they were

[23:54:08.0235] <18f>
Yeah. If i am right.

[23:54:19.0524] <18f>
it is called "trade off"...

[23:54:33.0296] <18f>
seems , I don't know too much about this...

[23:54:42.0756] <18f>
just like "balance".

[23:55:14.0108] <iain>
Yes, there is a trade off between optimizing more and compiling faster

[23:56:46.0034] <18f>
cool!

[23:57:12.0738] <iain>
Also, some passes can't run before some other passes

[23:58:00.0473] <18f>
> <@iain:mozilla.org> Also, some passes can't run before some other passes

Interesting, I think it is "independently".

[23:58:10.0961] <iain>
For example, `EliminateRedundantChecks` can't run after any pass that moves instructions: https://searchfox.org/mozilla-central/source/js/src/jit/Ion.cpp#1445-1448

[23:59:47.0134] <18f>
> <@iain:mozilla.org> For example, `EliminateRedundantChecks` can't run after any pass that moves instructions: https://searchfox.org/mozilla-central/source/js/src/jit/Ion.cpp#1445-1448

emmmm, I know what u means.

[00:00:54.0998] <18f>
I will read it more "carefully"

[00:00:58.0376] <18f>
Thanks !

[00:04:42.0524] <18f>
By the way?

[00:05:04.0155] <18f>
what is "KABOUM"?

[00:20:40.0882] <jandem>
18f: the sound of a big explosion, for software it probably means "it crashes"

[00:22:41.0963] <nbp>
> <@iain:mozilla.org> nbp might remember what they were

They were too many. The problems might come from the fact that we are not tracking the original code, but replacing it. 

[00:23:22.0230] <nbp>
Especially after range analysis. 

[00:23:37.0500] <18f>
> <@jandem:mozilla.org> 18f: the sound of a big explosion, for software it probably means "it crashes"

cool, like "boom"

[02:45:41.0357] <leveryd>
> <@arai:mozilla.org> leveryd: a pointer to Rooted<T> is implicitly convertible to MutableHandle<T>

in c++ function, how to construct "this" value?   i use your sample code,but it "js::call" fail,can you help me? i guess it fails beacause i does not construct "this" value.

[02:45:52.0597] <leveryd>
the code is on "https://gist.github.com/leveryd/4f76985a95e9f666c85ccc00ec9bfa5f"

[02:46:53.0250] <arai>
leveryd: "this value" means the value that becomes the value of `this` inside the function

[02:47:07.0882] <arai>
so, if you call `Reflect.parse()`, `this` inside it is `Reflect`

[02:47:18.0095] <arai>
you already have the value in `Reflect` variable

[02:48:50.0875] <arai>
so you can use it

[02:51:07.0988] <leveryd>
like "JS::Call(cx, Reflect, Reflect_parse, args, &rval) "  ?  i run again, but "JS:Call" still fail.

[02:51:36.0471] <arai>
how?

[02:51:45.0878] <arai>
what do you mean by "fail" ?

[02:52:17.0026] <leveryd>
it will print "error5"

[02:57:10.0472] <leveryd>
i got it

[02:57:45.0188] <leveryd>
i should modify the code,  JS_GetProperty(cx, ReflectObj, "parse", &Reflect_parse)

[02:57:55.0323] <leveryd>
not JS_GetProperty(cx, ReflectObj, "Reflect", &Reflect_parse)

[02:59:09.0926] <arai>
for the next time, try looking into error reporting

[02:59:12.0379] <arai>
https://github.com/mozilla-spidermonkey/spidermonkey-embedding-examples/blob/04056e642fe13d289b2923ffda631af2556dbba8/examples/boilerplate.cpp#L25

[02:59:29.0721] <arai>
if any JSAPI fails, it will set a pending exception tot he context

[02:59:39.0759] <arai>
in that case, you can get the exception and report it

[02:59:52.0866] <arai>
so that you'll get error message that explains what's wrong

[03:00:33.0235] <arai>
 * if any JSAPI fails, it will set a pending exception to the context

[03:00:50.0728] <leveryd>
ok, i will spend some time to learn it. thanks

[04:47:42.0289] <ashcode>
can anyone tell how to submit only first or the new patch not the earlier one

[04:48:14.0172] <arai>
Before start working on a new bug, you need to pull from remote mozilla-unified and update to the mozilla-unified tip, so that your new change is based on clean tree

[04:48:24.0683] <arai>
currently your new change is based on your previous work

[04:48:35.0169] <arai>
so, you need to rebase your new change to mozilla-unified tip

[04:49:39.0767] <ashcode>
but i used hg tip before using hg commit

[04:49:43.0255] <arai>
first, `hg pull` to download latest changes from remote

[04:49:57.0277] <ashcode>
 * but i used hg tip before using hg commit after that only i  used moz-phab

[04:49:59.0700] <arai>
second, rebase your work by `hg rebase -d central -s .`, that will rebase your current changeset onto mozilla-central tip

[04:50:36.0352] <arai>
hg tip does nothing

[04:50:57.0187] <ashcode>
oh i though it updates the tip

[04:51:01.0925] <ashcode>
fine i ll do it

[04:51:10.0793] <arai>
`hg update central` updates to the central tip

[04:51:27.0856] <arai>
so, from the next time, `hg pull` and then `hg update central`, before working on new bug

[04:51:38.0452] <arai>
for this time, use rebase command instead of update

[04:51:53.0507] <ashcode>
hg pull --rebase will dis work? or should i use the one which u said?

[04:52:17.0819] <arai>
I don't think it works, because your current history contains 2 non-remote changeset

[04:52:49.0352] <arai>
you need to explicitly specify that you want to rebase only one of them

[04:53:30.0059] <arai>
(the other is already closed, so `hg pull` will download it, and it's in the rebase target

[04:53:38.0671] <ashcode>
oh okay

[08:46:19.0300] <sfink>
jonco: be there in 1 minute

[09:08:35.0783] <ashwiniwankhede>
I finished setting up my development environment. I will start working towards my contributions now. 

[09:09:17.0293] <ashwiniwankhede>
For further developments do we need to clone the Firefox repository again?

[09:10:03.0770] <iain>
ashwiniwankhede: No, once you have cloned once, you do not need to clone again unless you are getting set up on a new machine

[09:11:33.0317] <ashwiniwankhede>
 iain: Okay. Thank you

[09:12:32.0975] <iain>
To update to the latest version of the code, you can use `hg pull central` instead

[09:13:41.0027] <iain>
Good work getting your development environment set up. Go ahead and look at [codetribute](https://codetribute.mozilla.org/projects/jseng) to find a bug to work on

[09:14:52.0396] <ashwiniwankhede>
https://mozilla-version-control-tools.readthedocs.io/en/latest/hgmozilla/firefoxworkflow.html

here clone the repository was given after configure mercurial so I got confused. 

[09:16:40.0742] <iain>
Ah, yes, I see how that could be confusing

[14:46:53.0160] <mgaudet>
confession: Private method patches are awaiting fuzzing. Addressing some Debug-metadata related review feedback (hope those go back for review tomorrow morning). Revived my old ergonomic brand check patches -- seem to work against the still-pending-merge test262 tests, so sending them back out for review. 

[14:46:56.0180] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[15:08:30.0565] <arai>
oh, it's old patch.  I wondered why the phabricator revision number has only 4 digits

[15:10:15.0871] <arai>
 * oh, it's old patch.  I wondered why the phabricator revision number has only 5 digits

[15:14:25.0799] <tcampbell>
arai: as a workaround for the crash, I wonder if the simplest hack is to check for `hasBaseScript` in setEnclosingLazyScript

[15:14:59.0135] <tcampbell>
and then uplift that and only do our other fixes/cleanups on nightly


2021-04-08
[19:19:43.0768] <borane>
Hey, I have a small question about how spidermonkey optimizes functions that are always called with the same type

[19:21:14.0447] <borane>
So, I've read that it's bad practice to call `foo(a,b){return a+b}` with both strings and numbers, because switching the argument types will jump out of the JITed version

[19:23:03.0219] <borane>
So what I was wondering is, if I have a superclass with a function like that, and I have a String and a Number subclass that inherit that function, and furthermore each subclass only gets used with one type, will the JIT make two versions, or will it deoptimize every time a different subclass has its method called?

[19:26:31.0583] <arai>
if the method is not inlined to the callsite, it will become polymorphic for each type.  if the method is inlined to the callsite, the inlined function will be specialized for the callsite's type

[19:26:42.0390] <arai>
there's a section about inlining https://hacks.mozilla.org/2020/11/warp-improved-js-performance-in-firefox-83/

[19:34:03.0473] <arai>
then, about the deoptimization,  if unknown type appears *after* JIT compile, yes, deoptimization happens there

[19:36:00.0339] <borane>
I'm writing a math library for a game engine, so it'd be pretty bad if one rare call to an integer vector method deoptimised all of the floating point code

[19:36:25.0125] <borane>
Any ideas for how to avoid that other than cut-and-paste?

[19:38:10.0946] <arai>
which is rare case, integer or floating point?

[19:38:59.0501] <arai>
also, by vector do you mean TypedArray, or regular Array ?

[19:39:51.0807] <borane>
I have an extremely commonly used vector class that contains a typed array and provides typical geometric methods like dot products.

[19:40:13.0886] <borane>
It's virtually always floating point but I need to have an integer version around for webgl compliance.

[19:43:06.0329] <arai>
so, it's about `Float32Array` vs `Int32Array` or similar variant, right?

[19:44:01.0064] <borane>
Yeah, there's two classes, both with an attribute named `array`, but one of them creates a Float32Array in the constructor and the other creates an Int32Array.

[19:46:51.0003] <borane>
The methods are simple things like summation and scalar multiplication.

[19:50:17.0221] <arai>
let me check how typed array works there

[19:52:51.0685] <arai>
(I guess, most of JIT devs are now sleeping

[19:55:38.0670] <borane>
Element is acting pretty weird for me atm so I'm not sure if you saw... But yes they're functions that act on typed arrays.

[20:01:36.0023] <arai>
yeah, I see that a bit un-optimized code is generated if a method operates both on Int32Array and Float32Array

[20:02:13.0372] <arai>
err, maybe my experiment isn't correct

[20:02:34.0165] <arai>
I was checking the behavior when single callsite passes both types

[20:04:27.0182] <arai>
fwiw, you can do the same experiment, by building SpiderMonkey JS shell, and running it to generate a log for MIR/LIR, and visualize it with https://github.com/sstangl/iongraph

[20:05:37.0843] <borane>
Hey that's cool.

[20:07:44.0623] <borane>
How do I get the spew file? (There's a dead link on the ionmonkey wiki page and I don't see how to do it.)

[20:08:25.0221] <arai>
IONFLAGS=logs path/to/js_shell --ion-offthread-compile=off path/to/script.js

[20:08:46.0095] <borane>
Looks like I need to build ionmonkey too.

[20:09:22.0683] <arai>
you just need to build SpiderMonkey JS shell

[20:09:24.0680] <arai>
https://firefox-source-docs.mozilla.org/js/build.html

[20:10:47.0946] <arai>
IonMonkey is the name of JIT compiler inside it

[20:12:33.0275] <arai>
then, about the script, you need to run the part that you want to visualize enough time (so, the code becomes hot and JIT compile gets triggered).  running 2000 times would work for most case I think  (I don't remember the latest threshold)

[20:13:10.0812] <borane>
Would the jsshell on the nightly build server work or do I need to do a debug build?

[20:13:47.0084] <arai>
iirc, it needs to be a debug build

[20:14:25.0548] <arai>
I guess there's a binary in taskcluster artifact or somewhere.  let me look for i

[20:15:14.0613] <arai>
 * I guess there's a binary in taskcluster artifact or somewhere.  let me look for it

[20:15:22.0772] <arai>
borane: which OS are you on?

[20:15:31.0581] <borane>
Arch linux

[20:15:46.0160] <arai>
also, which architecture?

[20:16:02.0204] <borane>
x86_64

[20:17:16.0724] <arai>
https://treeherder.mozilla.org/jobs?repo=mozilla-central&selectedTaskRun=ao-omHR9RiO48UcyeEP5SA.0

[20:17:26.0227] <arai>
that's a UI for build/test automation

[20:17:39.0344] <arai>
the URL shows the latest mozilla-central tip's result

[20:18:02.0316] <arai>
currently it selects build job for linux x64, debug build

[20:18:12.0499] <arai>
the bottom half of the page shows the details of the job

[20:18:20.0959] <arai>
and there's "Artifacts" tab there

[20:18:41.0345] <arai>
and it contains `target.jsshell.zip` link, that I think is JS shell binary

[20:19:36.0028] <borane>
The powerful forbidden webdev tool

[20:20:44.0390] <arai>
looks like the archive contains `js` binary and some `.so` files

[20:24:07.0726] <arai>
I did another experiment that, call a function both with Int32 and Float32 in one callsite, and then call with Float32 in other callsite, and looks like the callsite with Float32 generates optimized code, with specializaton on function inlining

[20:24:41.0096] <borane>
Oh so it's callsite based?

[20:25:16.0446] <arai>
so, if the method is small enough (so that the function is inlined), and the callsite uses only one type, you don't have to worry about other callsite's type

[20:25:57.0259] <borane>
Is inlining something that happens gradually, or will small functions always be inlined whenever the JIT runs?

[20:27:48.0075] <arai>
I don't know the entire latest behavior tho, for my experiment, the small function (one liner) is inlined in the first JIT compilation

[20:28:29.0388] <arai>
you could wait maybe 8 hours or so, until JIT devs wake up

[20:28:46.0911] <arai>
you can get more detailed info then

[20:30:13.0538] <borane>
I'm trying out the js shell, where do the logs get written to?

[20:30:31.0730] <arai>
in `/tmp/ion.json`

[20:30:47.0110] <arai>
iongraph loads from there

[20:32:21.0727] <arai>
oh, also, if you're using recent python, iongraph may fail because of missing `cgi.escape` method.  in that case try rewriting `cgi` with `html` in the source code

[20:32:49.0566] <borane>
Hey, this is really cool. Thanks for telling me about iongraph/js shell

[20:33:01.0237] <18f>
Hey, why we sometimes directly guardshape on a newobject...

[20:33:12.0838] <18f>
but sometimes we need unbox it?

[20:33:51.0180] <18f>
I guess it is becauseof |fallible|, but I don't know what is "fallible"...

[20:34:49.0362] <borane>
> <@arai:mozilla.org> oh, also, if you're using recent python, iongraph may fail because of missing `cgi.escape` method.  in that case try rewriting `cgi` with `html` in the source code

It works fine on Python 3.9.2

[20:35:16.0411] <arai>
cool :)

[20:35:31.0038] <borane>
Oh the top of the git log says Deian Stefan fixed that issue Dec 12 2019.

[20:35:37.0945] <borane>
Thanks Stefan. :)

[20:36:14.0232] <arai>
ah, then I just need to update my local clone

[20:36:28.0205] <arai>
thank you for the info :)

[20:51:38.0131] <arai>
18f: one reason I can think of is, because you can modify `Object.prototype` properties and that changes the shape of new object

[20:51:58.0310] <arai>
and that will break assumption of the JIT code

[21:19:28.0047] <18f>
> <@arai:mozilla.org> 18f: one reason I can think of is, because you can modify `Object.prototype` properties and that changes the shape of new object

I am not fully understand, let me debug and think more..

[21:22:18.0623] <arai>
you can see bailout log by setting `IONFLAGS=bailouts` environment variable.  try writing a testcase that adds a new property to `Object.prototype` at some point inside the loop

[21:22:41.0077] <arai>
it will trigger bailout from guardshape

[21:24:18.0083] <18f>
ok!

[21:24:21.0649] <18f>
Thx

[22:00:05.0148] <iain>
borane: If you're still around, I wrote the inlining code for Warp and can try to answer any questions about it

[22:00:19.0982] <iain>
(Not asleep, just making dinner)

[22:03:22.0576] <iain>
Quick summary of how inlining works: we keep a warmup counter for each function, and increment it when you call the function or when the function jumps back to the top of a loop. When the warmup counter gets hot enough, we do an optimization compilation. When the warmup counter is about halfway to that point, we do "trial inlining".

[22:05:59.0072] <iain>
We look at all the calls in the function and figure out whether they have been hit often enough and always call the same small function

[22:07:25.0062] <iain>
If they are, we create a new ICScript (which ~holds profiling data) for the callee, and modify the call so that it always uses the new ICScript. The ICScript is only ever used for this call site, so the profiling data it collects is specific to this invocation 

[22:08:07.0517] <iain>
When we eventually compile the caller, we also generate code for the callee, and use the specialized ICScript

[22:08:34.0975] <iain>
So anything that was monomorphic for calls from that call side will be optimized efficiently in Warp

[22:09:14.0050] <iain>
Right now the size limit on inlineable functions is quite strict, because inlining too aggressively can slow things down

[22:09:38.0946] <iain>
But we're doing some experiments right now to see whether we should tweak inlining heuristics

[22:10:20.0732] <borane>
Roughly speaking what's the size of the largest inlineable functions?

[22:10:57.0155] <iain>
130 bytecode ops, which doesn't necessarily correspond directly to anything in the JS source

[22:12:12.0938] <iain>
But as an example, here's some self-hosted Array code that was just barely too long: https://searchfox.org/mozilla-central/source/js/src/builtin/Array.js#1155-1184

[22:12:44.0990] <iain>
If you have a copy of the shell, you can see the bytecode using the `dis()` function

[22:13:26.0422] <iain>
```
js> function foo(a,b) { return a + b; }
js> dis(foo)
flags: CONSTRUCTOR
loc     op
-----   --
main:
00000:  GetArg 0                        # a
00003:  GetArg 1                        # a b
00006:  Add                             # (a + b)
00007:  Return                          # 
00008:  RetRval                         # !!! UNREACHABLE !!!
```

[22:13:41.0050] <borane>
I see

[22:15:02.0652] <iain>
(But there's a good chance that we're about to increase the limit, so don't make any important decisions based on the numbers here)

[22:15:48.0812] <borane>
So essentially, my goal is to figure out whether or not calling `add` on IntegerVec2 can be expected to deoptimize `add` on `FloatVec2`

[22:16:38.0144] <iain>
Quickly typing that into the shell, it's well below the limit

[22:16:50.0192] <iain>
So it will be inlined wherever it's hot

[22:17:55.0639] <borane>
And if my understanding is correct inlining makes functions immune to deoptimization due to calls elsewhere? I guess that makes sense since the guards are inlined too.

[22:18:36.0392] <iain>
Yep

[22:19:41.0279] <borane>
A 4x4 matrix multiplication takes roughly 128 arithmetic operations so it might come in over the limit

[22:20:48.0059] <iain>
It's the static size of the code, not the number of operations executed

[22:21:47.0184] <borane>
Oh good idea it didn't occur to me that rolling the loop could be faster due to code size

[22:22:55.0869] <iain>
Again, I should emphasize that what I'm describing is the behaviour right now, and there's a very real chance that it will change in the future 

[22:23:55.0020] <iain>
If you're writing code that benefits a lot from inlining, and we do not inline it, then that's arguably a problem with our code, not yours

[22:24:42.0161] <iain>
For example, we've considered tracking whether we've seen polymorphism in a function, and inlining it more aggressively if we have (because we might be able to make it monomorphic for this call site)

[22:25:12.0228] <iain>
So don't twist your code into knots trying to target our current heuristics

[22:26:22.0443] <iain>
18f: For unboxing NewObject: are you looking at scalar replacement?

[22:29:12.0240] <iain>
If so, this patch might help explain: https://phabricator.services.mozilla.com/D107305

[22:30:13.0405] <iain>
When WarpBuilder is creating a loop, we don't know the type of the phi inputs from the back edge, because we haven't seen it yet

[22:33:48.0442] <iain>
So if CacheIRTranspiler sees a `GuardToObject`, then it isn't certain that `arguments` is an object, so it generates an Unbox just in case

[22:34:15.0106] <iain>
GVN will remove that unbox, but scalar replacement runs before GVN

[22:51:43.0012] <leveryd>
is there some document about performance best practice when embedding sm?  i build a shared library what will be use to parse javascript code by "openresy-lua code","openresty-lua code" will call "boilerplate::RunExample" many times. i found the code's performance is bad, rps decrease to "40 RPS" (without call "boilerplate::RunExample" rps is "15000 RPS"). i use "locust" tool to test "RPS".

[22:51:48.0400] <leveryd>
code is on "https://gist.github.com/leveryd/f4af9aaa9b9719023a2215b99e017322"

[22:55:58.0840] <18f>
> <@iain:mozilla.org> If so, this patch might help explain: https://phabricator.services.mozilla.com/D107305

Yes, I see scalar replacement.

[22:56:31.0355] <18f>
|scalar replacement == "escape analysis"|

[22:56:40.0512] <18f>
I use this way to understand it.

[22:57:07.0058] <18f>
But if a unbox use it, it will won't think it is !escape.

[22:57:21.0310] <18f>
escape... typo error.

[22:57:54.0146] <iain>
Escape analysis and scalar replacement are connected

[22:58:08.0621] <iain>
Escape analysis checks to see if objects escape the function

[22:58:57.0055] <iain>
If they don't, then scalar replacement rewrites the code to avoid allocating the object

[22:59:18.0729] <18f>
> <@iain:mozilla.org> If they don't, then scalar replacement rewrites the code to avoid allocating the object

1

[22:59:57.0328] <18f>
> <@iain:mozilla.org> Escape analysis and scalar replacement are connected

Means, scarlar replacement will do more work?

[23:01:19.0999] <iain>
 Escape analysis tells us if it is safe to do scalar replacement. Scalar replacement does the work.

[23:01:56.0869] <18f>
oh!

[23:02:08.0408] <18f>
seems I know what u means..

[23:02:40.0944] <iain>
[Here](https://searchfox.org/mozilla-central/source/js/src/jit/ScalarReplacement.cpp#1810-1815), `replacer.escapes(ins)` is escape analysis, and `replacer.run()` is scalar replacement

[23:03:12.0440] <18f>
function jit(){let o =  {x:1, y:2}; let sum = o.x + o.y};

[23:03:16.0178] <18f>
opt it.

[23:03:47.0700] <18f>
function jit(){let o =  {let sum = o_x + o_y;};




[23:04:02.0036] <18f>
The pass names "scalar replacement".

[23:04:11.0931] <18f>
why we could do it .

[23:04:23.0639] <18f>
because we know "o won't escape"

[23:04:38.0369] <18f>
> <@18f:mozilla.org> because we know "o won't escape"

This is "escape analysis"

[23:04:42.0066] <18f>
right?

[23:04:47.0840] <iain>
Yep, exactly!

[23:04:57.0948] <18f>
ok!

[23:04:59.0727] <18f>
Thx

[00:22:36.0163] <ashwiniwankhede>
hello. I made some changes in a file, but those were not good so i did revert the changes. now the file is as originally downloaded but when I run the jit-test all the tests are failing. I am not able to understand why?

[00:31:36.0250] <yulia>
have you tried building after reverting?

[00:32:34.0298] <ashwiniwankhede>
> <@yulia:mozilla.org> have you tried building after reverting?

yes. i did.

[00:33:39.0982] <yulia>
so you did something like `hg up central -C; ./mach build; ./mach jit-test` if i got it right

[00:34:13.0172] <yulia>
maybe try `./mach clobber; ./mach build` in central and see if that works

[00:35:29.0763] <yulia>
 * maybe try `./mach clobber` followed by `./mach build` in central and see if that works

[00:42:33.0082] <ashwiniwankhede>
It says. The shell is not executable. 

[00:47:00.0369] <mehaboob_shariff>
could check echo $MOZCONFIG

[00:47:06.0359] <mehaboob_shariff>
could you*

[00:47:38.0682] <mehaboob_shariff>
maybe after restarting pc the path is gone

[00:49:47.0465] <ashwiniwankhede>
$ echo MOZCONFIG
MOZCONFIG

result

[00:49:59.0484] <mehaboob_shariff>
ooh

[00:50:17.0316] <mehaboob_shariff>
export MOZCONFIG=<path to the mozconfig>

[00:51:49.0897] <mehaboob_shariff>
export MOZCONFIG=$HOME/mozconfigs/debug (this one is given in the documetnation) but I guess you made it another path

[00:52:59.0720] <mehaboob_shariff>
> <@mehaboob_shariff:mozilla.org> export MOZCONFIG=<path to the mozconfig>

after this run echo $MOZCONFIG and see if it showing the path to the file

[00:53:31.0391] <mehaboob_shariff>
then mach build and mach jit-test . I think it will work

[01:15:33.0467] <18f>
> <@iain:mozilla.org> 18f: For unboxing NewObject: are you looking at scalar replacement?

Hey, If I try to use let o = {x:1, y:2};

[01:15:51.0765] <18f>
then x and y always be "fixedslot".

[01:16:20.0670] <18f>
Can I create a "DynamicSlot" by newObject

[01:16:22.0591] <18f>
?

[01:16:58.0841] <18f>
I use this way, but I am failed...

[01:18:29.0729] <jandem>
18f: you need more than 16 properties :)

[01:19:06.0710] <jandem>
 * 18f: you need more than 16 properties. Or something like: `var o = {}; o.x1 = 1; ... o.x5 = 5` (I think there are 4 inline slots in this case)

[01:21:07.0993] <18f>
uh, I success.

[01:21:11.0078] <18f>
Thanks!

[02:25:16.0453] <leveryd>
hello is there some document about performance best practice when embedding sm?  i build a shared library what will be used to parse javascript code by "openresy-lua code","openresty-lua code" will call "boilerplate::RunExample" many times. i found the code's performance is bad, rps decrease to "40 RPS" (without call "boilerplate::RunExample" rps is "15000 RPS"). i use "locust" tool to test "RPS".

code is on "https://gist.github.com/leveryd/f4af9aaa9b9719023a2215b99e017322"

[03:00:52.0145] <ashcode>
i m trying to resolve clang format errors: but wen i run locally i m not getting any error  but here it shows:   https://phabricator.services.mozilla.com/D111168#C3772875NL633

[03:15:55.0403] <jandem>
ashcode: is this with your changes applied? what does `hg log -r .` say?

[03:18:07.0678] <ashcode>
> <@jandem:mozilla.org> ashcode: is this with your changes applied? what does `hg log -r .` say?

oh now it is showing updated code which as used hg pull but before hg pull also i got same out

[03:20:12.0457] <ashcode>
but now i m getting errors if i m changing according to wat was written in phabricator

[03:20:27.0434] <jandem>
what's the error?

[03:21:59.0698] <ashcode>
```
Processing 3 file(s)...
--- a/js/src/jit/CacheIRHealth.h	2021-04-08 15:38:56.233972418 +0530
+++ b/js/src/jit/CacheIRHealth.h	2021-04-08 15:40:58.817767786 +0530
@@ -33,13 +33,15 @@
 //
 // There are a few ways to generate a health report for a script:
 // 1. Simply running a JS program with the evironment variable
-//    SPEW=CacheIRHealthReport. We generate a health report for a script whenever we
-//    reach the trial inlining threshold.
+//    SPEW=CacheIRHealthReport. We generate a health report for a script
+//    whenever we reach the trial inlining threshold.
 //      ex) SPEW=CacheIRHealthReport dist/bin/js jsprogram.js
-// 2. In the shell you can call CacheIRHealthReport() with no arguments and a report
+// 2. In the shell you can call CacheIRHealthReport() with no arguments and a
+// report
 //    will be generated for all scripts in the current zone.
 //      ex) CacheIRHealthReport()
-// 3. You may also call CacheIRHealthReport() on a particular function to see the
+// 3. You may also call CacheIRHealthReport() on a particular function to see
+// the
 //    health report associated with that function's script.
 //      ex) CacheIRHealthReport(foo)
 //

--- a/js/src/jit/BaselineIC.cpp	2021-04-08 15:37:02.716075922 +0530
+++ b/js/src/jit/BaselineIC.cpp	2021-04-08 15:40:59.257797146 +0530
@@ -630,7 +630,8 @@
                             ICFallbackStub* stub) {
   if (stub->state().maybeTransition()) {
 #ifdef JS_CACHEIR_SPEW
-    if (cx->spewer().enabled(cx, frame->script(), SpewChannel::CacheIRHealthReport)) {
+    if (cx->spewer().enabled(cx, frame->script(),
+                             SpewChannel::CacheIRHealthReport)) {
       CacheIRHealth cih;
       RootedScript script(cx, frame->script());
       cih.rateIC(cx, stub->icEntry(), script, SpewContext::Transition);

--- a/js/src/util/StructuredSpewer.cpp	2021-04-08 15:40:52.825368666 +0530
+++ b/js/src/util/StructuredSpewer.cpp	2021-04-08 15:40:59.297799817 +0530
@@ -187,9 +187,12 @@
         "usage: SPEW=option,option,... where options can be:\n"
         "\n"
         "  help                     Dump this help message\n"
-        "  channel                  Enable the selected channel from below, if\n"
-        "                           more than one channel is specified, then the\n"
-        "                           channel will be set whichever specified filter\n"
+        "  channel                  Enable the selected channel from below, "
+        "if\n"
+        "                           more than one channel is specified, then "
+        "the\n"
+        "                           channel will be set whichever specified "
+        "filter\n"
         "                           comes first in STRUCTURED_CHANNEL_LIST."
         "  AtStartup                Enable spewing at browser startup instead\n"
         "                           of when gecko profiling starts."
@@ -197,11 +200,14 @@
         " Channels: \n"
         "\n"
         // List Channels
-        "  BaselineICStats          Dump the IC Entry counters during Ion analysis\n"
-        "  ScriptStats              Dump statistics collected by tracelogger that\n"
+        "  BaselineICStats          Dump the IC Entry counters during Ion "
+        "analysis\n"
+        "  ScriptStats              Dump statistics collected by tracelogger "
+        "that\n"
         "                           is aggregated by script. Requires\n"
         "                           JS_TRACE_LOGGING=1\n"
-        "  CacheIRHealthReport      Dump the CacheIR information and associated "
+        "  CacheIRHealthReport      Dump the CacheIR information and "
+        "associated "
         "rating\n"
         // End Channel list
         "\n\n"
```



[03:22:53.0939] <ashcode>
> <@ashcode:mozilla.org> ```
> Processing 3 file(s)...
> --- a/js/src/jit/CacheIRHealth.h	2021-04-08 15:38:56.233972418 +0530
> +++ b/js/src/jit/CacheIRHealth.h	2021-04-08 15:40:58.817767786 +0530
> @@ -33,13 +33,15 @@
>  //
>  // There are a few ways to generate a health report for a script:
>  // 1. Simply running a JS program with the evironment variable
> -//    SPEW=CacheIRHealthReport. We generate a health report for a script whenever we
> -//    reach the trial inlining threshold.
> +//    SPEW=CacheIRHealthReport. We generate a health report for a script
> +//    whenever we reach the trial inlining threshold.
>  //      ex) SPEW=CacheIRHealthReport dist/bin/js jsprogram.js
> -// 2. In the shell you can call CacheIRHealthReport() with no arguments and a report
> +// 2. In the shell you can call CacheIRHealthReport() with no arguments and a
> +// report
>  //    will be generated for all scripts in the current zone.
>  //      ex) CacheIRHealthReport()
> -// 3. You may also call CacheIRHealthReport() on a particular function to see the
> +// 3. You may also call CacheIRHealthReport() on a particular function to see
> +// the
>  //    health report associated with that function's script.
>  //      ex) CacheIRHealthReport(foo)
>  //
> 
> --- a/js/src/jit/BaselineIC.cpp	2021-04-08 15:37:02.716075922 +0530
> +++ b/js/src/jit/BaselineIC.cpp	2021-04-08 15:40:59.257797146 +0530
> @@ -630,7 +630,8 @@
>                              ICFallbackStub* stub) {
>    if (stub->state().maybeTransition()) {
>  #ifdef JS_CACHEIR_SPEW
> -    if (cx->spewer().enabled(cx, frame->script(), SpewChannel::CacheIRHealthReport)) {
> +    if (cx->spewer().enabled(cx, frame->script(),
> +                             SpewChannel::CacheIRHealthReport)) {
>        CacheIRHealth cih;
>        RootedScript script(cx, frame->script());
>        cih.rateIC(cx, stub->icEntry(), script, SpewContext::Transition);
> 
> --- a/js/src/util/StructuredSpewer.cpp	2021-04-08 15:40:52.825368666 +0530
> +++ b/js/src/util/StructuredSpewer.cpp	2021-04-08 15:40:59.297799817 +0530
> @@ -187,9 +187,12 @@
>          "usage: SPEW=option,option,... where options can be:\n"
>          "\n"
>          "  help                     Dump this help message\n"
> -        "  channel                  Enable the selected channel from below, if\n"
> -        "                           more than one channel is specified, then the\n"
> -        "                           channel will be set whichever specified filter\n"
> +        "  channel                  Enable the selected channel from below, "
> +        "if\n"
> +        "                           more than one channel is specified, then "
> +        "the\n"
> +        "                           channel will be set whichever specified "
> +        "filter\n"
>          "                           comes first in STRUCTURED_CHANNEL_LIST."
>          "  AtStartup                Enable spewing at browser startup instead\n"
>          "                           of when gecko profiling starts."
> @@ -197,11 +200,14 @@
>          " Channels: \n"
>          "\n"
>          // List Channels
> -        "  BaselineICStats          Dump the IC Entry counters during Ion analysis\n"
> -        "  ScriptStats              Dump statistics collected by tracelogger that\n"
> +        "  BaselineICStats          Dump the IC Entry counters during Ion "
> +        "analysis\n"
> +        "  ScriptStats              Dump statistics collected by tracelogger "
> +        "that\n"
>          "                           is aggregated by script. Requires\n"
>          "                           JS_TRACE_LOGGING=1\n"
> -        "  CacheIRHealthReport      Dump the CacheIR information and associated "
> +        "  CacheIRHealthReport      Dump the CacheIR information and "
> +        "associated "
>          "rating\n"
>          // End Channel list
>          "\n\n"
> ```

dis is the output of :./mach clang-format -s -p js/src/jit/CacheIRHealth.h js/src/jit/BaselineIC.cpp js/src/util/StructuredSpewer.cpp


[03:23:29.0384] <jandem>
I didn't check it exactly but it mostly matches the output I see on phabricator?

[03:23:47.0021] <ashcode>
> <@jandem:mozilla.org> I didn't check it exactly but it mostly matches the output I see on phabricator?

yh exactly

[03:24:20.0393] <jandem>
clang-format isn't very smart in this case, you probably want to format the comment a bit differently than it's suggesting. It just wants it to fit in 80 characters per line

[03:24:30.0818] <ashcode>
how can i directly import the patch as shown in phab

[03:24:57.0505] <ashcode>
 * how can i directly import the patch as shown in phab using hg import

[03:25:45.0412] <jandem>
if you don't use `-s` I think it applies the changes instead of showing them

[03:27:37.0436] <jandem>
(you probably want to tidy up the comment in CacheIRHealth.h manually after that so it doesn't break after one word)

[03:36:18.0479] <jandem>
 * clang-format isn't very smart in this case, you should format the comment a bit differently than it's suggesting. It just wants it to fit in 80 characters per line

[03:53:14.0635] <ashcode>
 i m not able to amend the commit which i commited i think it is because i used update central ..can anyone tell how to fix this?

[03:54:37.0767] <ashcode>
 *  i m not able to amend the commit which i commited i think it is because i used update central ..can anyone tell how to fix this?.I thought of closing previous pharicator link and creating a new link ..with my present changes ?can anything else be done if not that?

[03:57:54.0688] <yulia>
hmm, is what happened the following? You created a commit on an old central, updated to the new central, did some work. You want to apply this work to your old branch, but can't find it?

[03:58:08.0475] <yulia>
did you set up hg to have the `hg wip` command?

[03:58:22.0603] <ashcode>
> <@yulia:mozilla.org> did you set up hg to have the `hg wip` command?

no

[03:58:43.0485] <yulia>
hg wip is a visualization of the tree

[03:58:57.0934] <yulia>
looks like this

[03:59:13.0429] <ashcode>
> <@yulia:mozilla.org> hg wip is a visualization of the tree

yh ik but i didnt setup dats y it shows me not found wip

[03:59:36.0694] <yulia>
no worries, i am getting to it -- just explaining the tool a bit :)

[03:59:46.0137] <yulia>
in order to get it set up, you can run `./mach bootstrap again`

[03:59:52.0296] <yulia>
 * in order to get it set up, you can run `./mach bootstrap` again

[04:00:03.0826] <ashcode>
> <@yulia:mozilla.org> in order to get it set up, you can run `./mach bootstrap again`

for linux also ryt?

[04:00:12.0053] <yulia>
yes

[04:00:19.0496] <yulia>
so here, i will do it with you

[04:00:23.0151] <yulia>
first option is here:

[04:00:39.0766] <yulia>
you probably want to select `2` here

[04:01:14.0991] <yulia>
answer whatever prompts that are not y/n

[04:01:15.0042] <ashcode>
actually my changes are uncommitted ,should i leave it as it is and do everything again?i mean use bootstrap

[04:01:34.0767] <yulia>
bootstrap shouldn't impact your tree afaik

[04:01:41.0151] <yulia>
you can save them

[04:01:52.0716] <yulia>
one way to do that is through `hg diff > my-patch.diff`

[04:01:56.0910] <yulia>
then later you can apply those changes

[04:02:03.0080] <yulia>
ill walk you through that

[04:02:13.0424] <ashcode>
one more doubt

[04:02:54.0720] <ashcode>
In my old central also , i committed the changes but those changes were not landed 

[04:03:12.0832] <ashcode>
 * In my old central also , i committed the changes but those changes were not landed just reviewd

[04:03:24.0339] <yulia>
by old central -- you mean, same repo, but from an earlier moment in time?

[04:03:41.0648] <yulia>
if you pushed to phabricator, but lost the changes locally, they are also recoverable

[04:03:58.0149] <yulia>
but, if you have them still in tree on your local machine, you will be able to find them via hg wip

[04:04:08.0377] <yulia>
you can also find them via hg log, but it is a bit harder

[04:04:27.0348] <yulia>
for getting hg wip set up, the first important prompt is this one:

[04:04:39.0437] <yulia>
(this is in mach bootstrap)

[04:04:43.0372] <yulia>
you want to say `y` here

[04:04:46.0765] <ashcode>
ok i ll setup wip with u

[04:05:11.0295] <yulia>
first question is about evolve -- it's up to you if you want it

[04:05:39.0484] <yulia>
evolve is helpful in updating your code

[04:06:27.0008] <ashcode>
first feauture is hg help config.ui

[04:06:52.0035] <yulia>
ah, shit -- i already set everything up

[04:06:55.0753] <yulia>
my stuff is out of order

[04:07:02.0838] <ashcode>
oh

[04:07:13.0580] <yulia>
well.... hm -- eventually you will get to an option that asks about hg wip as an alias

[04:07:13.0594] <ashcode>
its okay i ll tel ..u guide me

[04:07:19.0959] <yulia>
make sure you say `y` to that one

[04:07:37.0271] <ashcode>
> <@ashcode:mozilla.org> first feauture is hg help config.ui

wat abt dis now?

[04:07:43.0217] <yulia>
up to you

[04:08:12.0873] <yulia>
the default configs are helpful, i would say if it is your first time say yes to everything, then next time if you know you don't use an extension you can remove it

[04:09:00.0585] <ashcode>
i use git as well, config.ui wont effect dat in anyway ryt?

[04:09:11.0693] <yulia>
are you using git to interact with mercurial?

[04:09:24.0835] <ashcode>
> <@yulia:mozilla.org> are you using git to interact with mercurial?

no no ..for my personal use

[04:10:00.0457] <yulia>
i don't have it in front of me, but i would be surprised if it impacted git

[04:10:17.0476] <yulia>
the only way i could see it impacting git is if you are using git cinnabar to interface with mercurial

[04:10:26.0704] <ashcode>
> <@ashcode:mozilla.org> i use git as well, config.ui wont effect dat in anyway ryt?

i m askin will it affect?

[04:10:53.0385] <yulia>
if you are worried, you can say no to this for now and check the documentation later

[04:10:57.0979] <yulia>
it is unrelated to hg wip

[04:11:29.0689] <ashcode>
for evolve - y 

[04:11:37.0997] <yulia>
evolve is also not so important, up to you

[04:11:48.0702] <yulia>
the one you are looking for says something about aliasing a command to `hg wip`

[04:12:22.0649] <ashcode>
yh wip is done

[04:12:31.0748] <ashcode>
now its askin smart annotate

[04:12:31.0914] <yulia>
these are all mercurial plugins -- git is a different svn so they shouldn't affect your setup for other projects

[04:12:38.0183] <yulia>
you can say no to the rest

[04:12:43.0815] <ashcode>
> <@yulia:mozilla.org> these are all mercurial plugins -- git is a different svn so they shouldn't affect your setup for other projects

great

[04:13:59.0027] <ashcode>
should i write changes to hgrc file?

[04:14:10.0833] <ashcode>
 * should i write changes to hgrc file? y/n

[04:14:20.0760] <jandem>
y(es)

[04:15:23.0903] <ashcode>
enable telementary

[04:15:46.0264] <ashcode>
 * enable telemetry

[04:15:49.0252] <jandem>
you can say no, doesn't matter much

[04:19:20.0691] <ashwiniwankhede>
hello. i made changes to the code and the jit-test and jstests have passed with --enable-debug --enable-optimize 
can i commit it now?

[04:22:36.0617] <yulia>
you should commit your work, often, even if it is intermediary

[04:22:41.0117] <yulia>
so, yes!

[04:22:52.0360] <yulia>
you can always squash changes later or rearrange them

[04:23:24.0826] <ashwiniwankhede>
> <@yulia:mozilla.org> you should commit your work, often, even if it is intermediary

Okay. Thanks 🙂

[04:24:57.0121] <ashcode>
after setting up wip what need to be done

[04:25:41.0287] <yulia>
you should be ready to go, try running `hg wip` in your terminal, and see if you can find you branch

[04:28:54.0896] <ashcode>
i got the bug which i wanted ,wat do to next

[04:29:31.0874] <yulia>
ok, let's say you are on my tree, and you want to revert to this commit

[04:29:48.0386] <yulia>
or maybe you want to rebase

[04:29:57.0027] <yulia>
what you an ddo iis you can copy that id

[04:30:12.0976] <yulia>
 * what you an do is you can copy the id of the commit you are interested in

[04:30:33.0015] <yulia>
if you want to switch to it, you would do `hg up <commit id>`

[04:30:49.0640] <yulia>
but, you might have work in flight, and if it conflicts with your other changes it will throw

[04:31:21.0564] <yulia>
in that case, you can either save your changes (use either hg shelve if you enabled it, or pipe it to an empty file via `hg diff >mypatch.diff` as before)

[04:31:27.0195] <yulia>
 * in that case, you can either save your changes (use either hg shelve if you enabled it, or pipe it to an empty file via `hg diff > mypatch.diff` as before)

[04:31:54.0089] <yulia>
clear your changes by doing hg up . -C, and then move to the branch you are interested via `hg up ...`

[04:32:05.0095] <yulia>
or, if you want to update the target branch to the most recent central

[04:32:15.0259] <yulia>
you can do git rebase

[04:33:06.0041] <yulia>
 * clear your changes by doing hg up . -C, and then move to the branch you are interested via `hg up ...` -- once this succeeds, you can apply your changes via `hg import mypatch.diff`. it will ask you for a commit message, if you aren't ready to commit -- leave it empty. the commit will be aborted but the changes will be there.

[04:37:17.0280] <yulia>
 * you can do an hg rebase

[04:43:19.0253] <ashcode>
while commiting will i get different other merging

[04:44:35.0848] <ashcode>
 * while commiting will i get other commits as well
?

[04:45:14.0871] <yulia>
I don't quite understand the question

[04:45:38.0378] <yulia>
Which other commits do you mean?

[04:55:58.0860] <ashcode>
hg up 642696:dd97007028ca if i m doin dis ,it shows uncommited changes are der

[04:56:16.0535] <ashcode>
 * hg up 642696:dd97007028ca if i m doin dis ,it shows uncommited changes are der,i saved my changes into a file 

[04:56:53.0248] <ashcode>
 * hg up 642696:dd97007028ca if i m doin dis ,it shows uncommited changes are der,i saved my changes into a file ,i thought to import it but hg up is not allowing me to do it,should i use hg up 642696:dd97007028ca --clean ?

[05:02:46.0615] <ashcode>
my problem got resolved i guess!! 

[05:04:34.0274] <yulia>
it worked?

[05:05:18.0841] <ashcode>
dese things i did

[05:05:20.0824] <ashcode>
hg histedit
 2023  ./mach bootstrap
 2024  ./mach build
 2025  ./mach run
 2026  ./mach jit-test
 2027  hg wip
 2028  hg diff > mypatch.diff
 2029* 
 2030  hg up 642696:dd97007028ca --clean
 2031  hg import mypatch.diff
 2032  hg up.-C
 2033  hg up .-C
 2034  hg up . -C
 2035  hg import mypatch.diff
 2036  hg pull --rebase
 2037  hist
 2038  history


[05:05:41.0620] <ashcode>
 *  2023  ./mach bootstrap
 2024  ./mach build
 2025  ./mach run
 2026  ./mach jit-test
 2027  hg wip
 2028  hg diff > mypatch.diff
 2029* 
 2030  hg up 642696:dd97007028ca --clean
 2031  hg import mypatch.diff
 2032  hg up.-C
 2033  hg up .-C
 2034  hg up . -C
 2035  hg import mypatch.diff
 2036  hg pull --rebase
 2037  hist
 2038  history


[05:05:57.0800] <ashcode>
 *  2023  ./mach bootstrap
 2024  ./mach build
 2025  ./mach run
 2026  ./mach jit-test
 2027  hg wip
 2028  hg diff > mypatch.diff
 2029* 
 2030  hg up 642696:dd97007028ca --clean
 2031  hg import mypatch.diff
 2032  hg up.-C
 2033  hg up .-C
 2034  hg up . -C
 2035  hg import mypatch.diff
 2036  hg pull --rebase



[05:06:56.0042] <ashcode>
 *  2023  ./mach bootstrap
 2024  ./mach build
 2025  ./mach run
 2026  ./mach jit-test
 2027  hg wip
 2028  hg diff > mypatch.diff
 2029* 
 2030  hg up 642696:dd97007028ca --clean
 2031  hg import mypatch.diff
 2032  hg up.-C
 2033  hg up .-C
 2034  hg up . -C
 2035  hg import mypatch.diff
 2036  hg pull --rebase

ashita@gigster:~/mozilla-unified$ hg pull --rebase
pulling from https://hg.mozilla.org/mozilla-unified
searching for changes
adding changesets
adding manifests
adding file changes
updated firefox tree tag autoland (+90 commits)                                         
updated firefox tree tag central (+60 commits)
added 90 changesets with 517 changes to 504 files
new changesets dab1af643107:5a9d146f18a0
rebasing 642696:dd97007028ca "Bug 1697644: Resolved naming consistency for CacheIR Health Report r=caroline"
merging js/src/shell/js.cpp                                                             
merging js/src/util/StructuredSpewer.cpp                                                
merging js/src/vm/JSScript.cpp 

[05:06:57.0405] <botzilla>
https://bugzil.la/1697644 — ASSIGNED (cOde.A4sh) — Naming consistency for CacheIR Health Report

[05:13:02.0997] <ashcode>
after i import my patch.diff, it shows hunk failed

[05:13:25.0094] <ashcode>
 * after i import my patch.diff, it shows hunk failed,in the modified files,what does dat mean?

[05:14:09.0003] <ashcode>
 * after i import mypatch.diff, it shows hunk failed,in the modified files,what does dat mean?

[05:14:31.0577] <yulia>
it means that the change did not apply cleanly

[05:14:43.0378] <yulia>
if you do `hg status`, you will see a list of files

[05:14:51.0736] <yulia>
some of them will have `.rej` on them, with a longer path anme

[05:15:07.0836] <yulia>
that means that, in this file, these specific changes did not apply because there was a conflict

[05:15:14.0697] <ashcode>
> <@yulia:mozilla.org> some of them will have `.rej` on them, with a longer path anme

dis is shown now as well

[05:15:22.0729] <yulia>
its similar to git conflict resolution, where you have `<<<<` and `=====` 

[05:15:26.0512] <yulia>
but they are in separate files

[05:15:43.0278] <yulia>
so, to resolve it, you can check the rejected changes and apply them as necessary to your files

[05:16:01.0158] <ashcode>
> <@yulia:mozilla.org> so, to resolve it, you can check the rejected changes and apply them as necessary to your files

u mean manually?

[05:16:05.0310] <yulia>
yes

[07:00:18.0962] <nbp>
tcampbell: sfink: Do we have release notes for SpiderMonkey to mention Bug 1689348 ?

[07:00:20.0801] <botzilla>
https://bugzil.la/1689348 — ASSIGNED (tcampbell) — Remove non-syntactic scope support from JSExecutionContext

[07:00:54.0340] <tcampbell>
nbp: the best we have is the migration guide in the embedding examples repo

[07:01:07.0370] <tcampbell>
That patch is only for the DOM side though

[07:01:31.0388] <tcampbell>
Since we need to finish ESM-ificiation first to remove from SM

[07:01:45.0955] <nbp>
oh … I had thought this was within the JS engine based on file names, but I did not look at the path

[07:02:27.0688] <tcampbell>
this is basically just a piece of nsJSUtils

[07:03:13.0435] <tcampbell>
good point about release notes when we eventually remove though

[07:03:15.0839] <nbp>
yep, I've been there :P

[07:03:41.0733] <nbp>
I guess this is also the reason I am the reviewer.

[07:04:01.0176] <tcampbell>
haha, yep

[07:05:32.0676] <tcampbell>
nbp: these are the remaining non-syntactic cases https://bugzilla.mozilla.org/show_bug.cgi?id=1689348#c0

[07:06:26.0817] <tcampbell>
the HTML Forms one will never go away (but we'll probably redesign the scope chain for it at some point), and the FrameScript case is blocked on ESM-ification hitting 100% which wont be any time soon

[07:09:27.0941] <nbp>
strangely I had thought the only reason to keep this was for XUL, where functions were defined in a lot of various places.

[07:09:57.0286] <tcampbell>
unfortunately, the non-syntactic scope trick got used in many odd places over the years

[07:09:58.0277] <18f>
> <@iain:mozilla.org> Yep, exactly!

Hey, I read the source code. Found there are 3 structure for recover on bailout. 1. resume point 2. snapshot 3. recover info.

[07:10:24.0932] <18f>
would u mind tell me they difference? (I know resume point with your explain....)

[07:10:27.0114] <tcampbell>
 * unfortunately, the non-syntactic scope trick got used in many odd places over the years. Each one was more custom than the last, which is why I want them all gone and normalized.

[07:10:39.0258] <nbp>
these non-syntatic scope sounds like some implementation of eval-in-frame.

[07:11:04.0578] <nbp>
18f: I can help.

[07:11:13.0609] <tcampbell>
nbp: yep. exactly, which all the challenges that come with that

[07:11:18.0278] <tcampbell>
 * nbp: yep. exactly, withall the challenges that come with that

[07:11:21.0951] <tcampbell>
 * nbp: yep. exactly, with all the challenges that come with that

[07:11:27.0101] <18f>
> <@nbp:mozilla.org> 18f: I can help.

Thx😂

[07:12:21.0444] <nbp>
18f: recover on bailout is a concept that some instruction which appear as being part of the code is in fact sinked to be executed before every resume points, if used to recover a frame while doing a bailout.

[07:13:23.0252] <nbp>
18f: https://nbp.github.io/slides/RInstruction/index.html?full#recover-idea (have a look at these slides)

[07:13:59.0317] <nbp>
This presentation is the presentation I made in front of the SpiderMonkey team when adding recover instruction, and consequently the recovered-on-bailout flag.

[07:15:13.0392] <18f>
> <@nbp:mozilla.org> 18f: recover on bailout is a concept that some instruction which appear as being part of the code is in fact sinked to be executed before every resume points, if used to recover a frame while doing a bailout.

Can I give myself idea about this?

[07:15:23.0589] <nbp>
sure.

[07:15:33.0052] <18f>
I read your blog, but I don't know I am right or not.

[07:15:52.0603] <18f>
With your example.

[07:16:41.0448] <18f>
This one '@a' is not easy to remove.

[07:17:16.0097] <18f>
because it will used in resume point.

[07:17:45.0235] <nbp>
It is used in a resume point, yes. (I assume the then-block is removed as well?)

[07:17:45.0605] <18f>
But rethink about this, we found we need its value only in "bailout" occurs.

[07:18:11.0270] <18f>
So when  we run opt code. we don't need the value.

[07:18:28.0579] <18f>
we give it a flag to dicate this, then won't emit any code.

[07:18:39.0857] <nbp>
the bailout is in charge of computing the value to save it in the frame, as expected.

[07:18:52.0932] <18f>
"won't emit any code == remove x"

[07:19:17.0696] <nbp>
We emit recover-instructions, which are referenced by the snapshots.

[07:19:31.0239] <18f>
Then when bailout "occurs", we will recover this value by the flag|recover on bailout|..

[07:19:39.0629] <18f>
oh, sry.

[07:19:46.0055] <nbp>
The recover instructions are like a tiny control-flow free interpreted language, which is executed on bailout.

[07:19:46.0401] <18f>
I understand wrong, 😑 

[07:20:39.0701] <nbp>
the MIR does not exists anymore when we bailout. This is why we have to recall these instruction in the form of recover-instructions.

[07:21:36.0776] <18f>
> <@nbp:mozilla.org> the MIR does not exists anymore when we bailout. This is why we have to recall these instruction in the form of recover-instructions.

Yeah, I understand this.

[07:21:59.0816] <18f>
If we have "recoverInfo", which "info" will be logged?

[07:24:24.0850] <arai>
leveryd: I'm not sure I'm following, but are you calculating the time taken by `boilerplate::RunExample` assuming it's executed many times?   creating/destroying context + initializing self-hosted code isn't light task.  if you're going to execute many scripts, it's better reusing single context

[07:24:35.0723] <nbp>
When we lower, we convert the resume point to snapshots. The resume point reference instructions as operands, while snapshots are referencing allocation.

[07:25:03.0128] <nbp>
18f: A recover instruction has not associated register, nor stack location.

[07:25:09.0334] <nbp>
 * 18f: A recover instruction has no associated register, nor stack location.

[07:25:13.0833] <arai>
leveryd: also, try using profiler to see which function is taking long time

[07:26:55.0246] <18f>
> <@nbp:mozilla.org> When we lower, we convert the resume point to snapshots. The resume point reference instructions as operands, while snapshots are referencing allocation.

Yes, I could understand this part.

[07:26:57.0372] <nbp>
18f: the RecoverInfo is used to collect the DAG of recovered-on-bailout instructions, such that we can create space for these recover instructions, space to encode the instruction and to store the results on bailout.

[07:28:00.0063] <18f>
> <@nbp:mozilla.org> 18f: the RecoverInfo is used to collect the DAG of recovered-on-bailout instructions, such that we can create space for these recover instructions, space to encode the instruction and to store the results on bailout.

I maybe understand this....

[07:28:08.0967] <18f>
Let me try.

[07:28:18.0496] <18f>
If I have a resumepoint.

[07:28:28.0530] <18f>
1 2 3  3 4

[07:28:40.0729] <18f>
4 is add x, y

[07:28:52.0917] <nbp>
https://searchfox.org/mozilla-central/source/js/src/jit/shared/CodeGenerator-shared.cpp#516-539

[07:28:53.0379] <18f>
and 4 has been set |recoveredOnBailout|

[07:29:28.0232] <18f>
recoverinfo will log "x" and "y" use it try to recover the value of "add"?

[07:30:25.0571] <nbp>
The snapshot will record `x` and `y` allocations, while the RecoverInfo should record the `Add` operation.

[07:31:24.0038] <nbp>
and provide a `4 = recovered-result Add x, y` where the result of the addition is expected in the snapshot.

[07:31:51.0955] <nbp>
Like displayed in the second image of the blog post.

[07:32:31.0117] <18f>
seems I read wrong code.🥲

[07:33:26.0513] <18f>
Thanks for your explain, But something I can't understand fully. because I lack some knowledge, I decide reread your blog and slide and try again.

[07:33:30.0977] <nbp>
18f: can you use searchfox links instead of screnshot, when possible? This is easier to look back at the code for others.

[07:35:00.0941] <18f>
https://searchfox.org/mozilla-central/source/js/src/jit/shared/Lowering-shared.cpp#235-265

[07:35:04.0109] <18f>
Yes, here

[07:36:30.0841] <nbp>
This is `buildSnapshot`, so we expect to look for allocations, to build the snapshot which would be interpreted by recover instructions.

[07:37:56.0392] <18f>
> <@nbp:mozilla.org> This is `buildSnapshot`, so we expect to look for allocations, to build the snapshot which would be interpreted by recover instructions.

Ok, I will think this carefully.

[08:12:53.0272] <ashcode>
having untracked files during commit is an issue? if yes how to resolve it,if now how to remove those files

[08:13:07.0545] <arai>
what are them?

[08:13:08.0470] <ashcode>
 * having untracked files during commit is an issue? if yes how to resolve it,if no how to remove those files

[08:13:20.0706] <ashcode>
> <@arai:mozilla.org> what are them?

i dont knw,hw to check

[08:13:25.0891] <ashcode>
> <@arai:mozilla.org> what are them?

 * i dont knw,hw to check?

[08:13:28.0559] <arai>
`hg status`

[08:15:09.0842] <ashcode>
oh ! those are .rej files which got saved when i was having hg import error

[08:15:35.0821] <ashcode>
 * oh ! those are .rej files which got saved when i was having hg import error.Also, spew output files

[08:17:02.0888] <arai>
then, usually it's better removing them.  just having them isn't much trouble in term of mercurial's tracking (as long as they are not accidentally added) tho

[08:17:47.0001] <ashcode>
what is the safe way to remove them?

[08:19:12.0728] <arai>
`hg purge` seems to remove untracked files.  you might need to enable the purge extension

[08:19:19.0318] <arai>
or, just remove them one by one manually

[08:23:04.0590] <ashcode>
```[extensions]
purge = ``` Does adding dis line in .hgrc work to enable purge extension?

[08:23:44.0898] <ashcode>
 * [extensions]
purge =  Does adding dis line in .hgrc work to enable purge extension?

[08:24:10.0036] <arai>
yes

[08:29:21.0070] <ashcode>
my hrgc file already contains this extension still it shows unknown command purge.Contents of hrgc file ```[extensions]
mq =
purge =
rebase =
share =
transplant =

[ui]
username = tester <tester@example.com>

[08:30:02.0925] <ashcode>
 * my hrgc file already contains this extension still it shows unknown command purge.Contents of hrgc file                                                                                  [extensions]
mq =
purge =
rebase =
share =
transplant =

[ui]
username = tester [tester@example.com](mailto:tester@example.com)

[08:30:22.0046] <arai>
sorry, maybe it's not built-in

[08:32:12.0825] <arai>
(I haven't used it

[08:33:10.0313] <ashcode>
can i remove them using sudo rm -rf command?

[08:33:25.0411] <arai>
please do not use `sudo`

[08:33:29.0420] <iain>
You don't need `sudo` or `-rf`. Just `rm` is enough

[08:33:46.0943] <ashcode>
> <@iain:mozilla.org> You don't need `sudo` or `-rf`. Just `rm` is enough

okay

[08:34:06.0601] <mgaudet>
> <@ashcode:mozilla.org> having untracked files during commit is an issue? if yes how to resolve it,if no how to remove those files

Having untracked files isn't really an issue; if you would like to clean them up, as Iain says, `rm` will work

[08:34:49.0949] <mgaudet>
that `.hgrc` looks a bit surprising tho; I would expect to see your name under `ui.username`, and wouldn't expect to see `mq =` in there

[08:36:39.0945] <iain>
`sudo` means "do this as the root user", for admin tasks that require more permissions. `-r` means "remove the contents of directories recursively". `-f` means "don't ask for confirmation". Put together, `sudo rm -rf` is very dangerous, because it can remove almost any directory on your machine if you have a typo. 

[09:03:38.0852] <ashcode>
> <@iain:mozilla.org> `sudo` means "do this as the root user", for admin tasks that require more permissions. `-r` means "remove the contents of directories recursively". `-f` means "don't ask for confirmation". Put together, `sudo rm -rf` is very dangerous, because it can remove almost any directory on your machine if you have a typo.

yh i know ,i thought i need sudo  coz i created my mozilla folder as sudo, so while removing it ,i thought i might need sudo permissions as well.Anyways i removed using rm,n it worked , Thank you!

[09:04:26.0841] <ashcode>
> <@mgaudet:mozilla.org> that `.hgrc` looks a bit surprising tho; I would expect to see your name under `ui.username`, and wouldn't expect to see `mq =` in there

can u explain more abt mq=??What else should be der in place of that

[09:05:37.0834] <mgaudet>
ashcode: We don't recommend anyone use MQ these days, so you can just remove that line. What's the full path that `hgrc`? I just wonder if that's not a different file than the one `hg` is actually using

[09:05:47.0534] <mgaudet>
hence why `hg purge` didn't work

[09:06:24.0301] <arai>
if you used `sudo` to create (or even clone?) the directory, it could be in unexpected state.  it's better checking owner, group, and permission of the directory and fix if necessary

[09:07:56.0698] <ashcode>
> <@mgaudet:mozilla.org> hence why `hg purge` didn't work

/testing/mozharness/test/helper_files/.hgrc- path of hrgc

[09:08:39.0806] <ashcode>
> <@arai:mozilla.org> if you used `sudo` to create (or even clone?) the directory, it could be in unexpected state.  it's better checking owner, group, and permission of the directory and fix if necessary

i don remember exactly ,i used it to create or while cloning

[09:08:58.0500] <ashcode>
> <@arai:mozilla.org> if you used `sudo` to create (or even clone?) the directory, it could be in unexpected state.  it's better checking owner, group, and permission of the directory and fix if necessary

 * i don remember exactly ,i used it to create or while cloning, what are the perimission needed to be given?

[09:09:28.0550] <mgaudet>
 ashcode yeah, that's definitely the wrong hgrc; you're more intersted in `$HOME/.hgrc` 

[09:09:33.0340] <mgaudet>
 * ashcode yeah, that's definitely the wrong hgrc; you're more interested in `$HOME/.hgrc`

[09:11:24.0910] <ashcode>
> <@mgaudet:mozilla.org> ashcode yeah, that's definitely the wrong hgrc; you're more interested in `$HOME/.hgrc`

but i don hv any .hgrc file in home directory

[09:12:25.0231] <mgaudet>
Hmm. Something is definitely peculiar; possibly due to too much use of sudo. 

It's very rare for you to need to use sudo during mozilla development; you could try re-running `mach bootstrap`as a regular user and letting it setup your `.hgrc` as part of that wizard

[09:12:31.0371] <ashcode>
> <@mgaudet:mozilla.org> ashcode yeah, that's definitely the wrong hgrc; you're more interested in `$HOME/.hgrc`

 * but i don hv any .hgrc file in home directory.I even used find -name command to find the directory

[09:12:45.0274] <arai>
it's hidden file, so it's not listed in filer, or normal `ls`

[09:13:31.0403] <ashcode>
> <@arai:mozilla.org> it's hidden file, so it's not listed in filer, or normal `ls`

i saw it through ui,in linux u hv option to see hidden files ,through that option i saw

[09:13:53.0826] <ashcode>
> <@arai:mozilla.org> it's hidden file, so it's not listed in filer, or normal `ls`

 * i saw it through ui as well ,in linux u hv option to see hidden files ,through that option i saw

[09:14:37.0253] <ashcode>
> <@mgaudet:mozilla.org> Hmm. Something is definitely peculiar; possibly due to too much use of sudo. 
> 
> It's very rare for you to need to use sudo during mozilla development; you could try re-running `mach bootstrap`as a regular user and letting it setup your `.hgrc` as part of that wizard

I used sudo once while setup only i guess,after that i never used it afair

[09:16:40.0423] <mgaudet>
Mmm. But if you did `sudo mach bootstrap` for example, it would have setup not -your- `.hgrc`, but instead the `root` user's `.hgrc` 

[09:16:53.0205] <mgaudet>
hence why re-running it does make sense

[09:17:24.0565] <ashcode>
> <@mgaudet:mozilla.org> Hmm. Something is definitely peculiar; possibly due to too much use of sudo. 
> 
> It's very rare for you to need to use sudo during mozilla development; you could try re-running `mach bootstrap`as a regular user and letting it setup your `.hgrc` as part of that wizard

i did it today evening to setup wip command, it worked perfectly fine

[09:17:46.0641] <ashcode>
 * i did ./mach bootstrap today evening to setup wip command, it worked perfectly fine

[09:18:30.0964] <mgaudet>
huh. Then you must have a `$HOME/.hgrc`, or else `wip` wouldn't wor 

[09:18:32.0734] <mgaudet>
 * huh. Then you must have a `$HOME/.hgrc`, or else `wip` wouldn't work

[09:18:54.0822] <sfink>
you can look at the output of `hg config --debug` and it'll tell you where it's getting settings from

[09:19:40.0225] <sfink>
that's the source directory, not your home directory, so it's not going to reveal anything about `~/.hgrc`

[09:19:40.0904] <ashcode>
This is my home ,with hidden files enabled

[09:20:27.0246] <sfink>
that looks like ~/mozilla-unified/ to me

[09:21:02.0085] <arai>
home means `/home/{your user name}/`

[09:21:36.0160] <ashcode>
> <@sfink:mozilla.org> that looks like ~/mozilla-unified/ to me

oh i thought the mozilla-unified to be my home,.. so sry😟

[09:22:12.0614] <ashcode>
> <@sfink:mozilla.org> that looks like ~/mozilla-unified/ to me

 * oh i assumed the mozilla-unified to be $home here as we building everything here itself ,.. so sry😟

[09:23:27.0727] <sfink>
`$HOME` is a special environment variable (not `$home`) that is your home directory, which will also be referred to as `~` in the shell. It will almost certainly be `/home/<your user name>/

[09:23:32.0797] <sfink>
 * `$HOME` is a special environment variable (not `$home`) that is your home directory, which will also be referred to as `~` in the shell. It will almost certainly be `/home/<your user name>/`

[09:24:17.0870] <ashcode>
yh purge was not there in .hrgc in home directory, i added it jus now ,everything wrks fine i guess

[09:24:36.0888] <ashcode>
I m so sry😟

[09:25:06.0289] <sfink>
no problem, these are the sorts of standard startup things that happen

[10:16:12.0668] <yulia>
quick reminder, tomorrow i am doing a university lecture: https://twitter.com/ioctaptceb/status/1380207128883957762 😐️ 

[10:16:31.0032] <yulia>
Come, watch me suffer on camera as I implement things live.

[10:16:35.0371] <yulia>
(also, retweet it)

[10:59:38.0097] <mgaudet>
One day, jandem , I'd love to get some details on your xdrp setup. I have it about 3/4 done now, but would be curious how yours is rigged up. 

Definitely not urgent tho 

[11:02:45.0966] <jandem>
mgaudet: I installed xrdp on ubuntu and connect to that on macOS with Microsoft Remote Desktop (I think it's in the app store?). It's not perfect, but it works well enough for occasionally starting the browser and clicking on a few things to gather data 

[11:05:04.0318] <jandem>
there may be better clients. The MS one is a bit annoying when you always connect to the same server. (It has this "list of PCs" view that's overkill when you have just one machine... maybe that can be changed)

[11:06:46.0383] <mgaudet>
Hmm. Ok. It's not starting a session for me; but working on it :P Hopefully I'llfigure it out

[11:06:54.0123] <mgaudet>
Lunch now tho! 

[11:07:50.0196] <jandem>
hm weird, I think it just worked here after I entered the IP address

[11:08:34.0603] <mgaudet>
le-sigh. This is my curse :P 

[11:34:39.0432] <mehaboob_shariff>
pavelp:  Are you working on Clean up BailoutKind::TooManyArgs bug ?

[12:13:55.0077] <avandolder>
Hey! It's been a while! I just wanted to say that I'm going to be starting my Master's at the University of Waterloo this fall, as part of their PL group (https://plg.uwaterloo.ca/)

[12:14:36.0581] <mgaudet>
avandolder: cool! Congrats! 

[12:16:29.0870] <mgaudet>
I've worked with some of the alumni of that gorup

[12:16:35.0604] <mgaudet>
 * I've worked with some of the alumni of that group

[12:16:41.0998] <avandolder>
Thanks! I'm thankful for the encouragement you all had given me, I think the experiences I had while interning probably helped me get in too :)

[12:17:30.0371] <mgaudet>
:) 

[12:25:25.0632] <evilpie>
avandolder: cool congrats

[12:31:47.0592] <mgaudet>
confession: Got Xrdp working after changing a configuration parameter [off in the distance](https://unix.stackexchange.com/a/529945/54727)

[12:31:50.0603] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[12:53:08.0294] <iain>
avandolder: I remember reading some of Ondřej Lhoták's alias analysis papers in grad school and being very impressed

[14:09:06.0510] <mgaudet>
General call: Looking for a good-third-bug for ashcode :) At this point they've done a few of the easier tasks, and could probably be aimed at something a touch meatier. 

[14:15:20.0194] <arai>
bug 1696085 maybe?  or some more complex task?

[14:15:21.0686] <botzilla>
https://bugzil.la/1696085 — NEW (nobody) — Use js::EnumFlags for js::ObjLiteralFlags

[14:16:38.0299] <mgaudet>
arai: That looks pretty good -> if you'd be willing to mentor, I could cc ashcode and go from there?

[14:16:56.0028] <arai>
sure

[14:17:10.0920] <mgaudet>
👍️ Thanks! 

[14:30:40.0257] <arai>
also, in general, I think bug 622261 (error reporting enhancement) contains simple and some more complex tasks.

[14:30:43.0161] <botzilla>
https://bugzil.la/622261 — NEW (nobody) — [meta] Error message/reporting bugs & enhancements

[14:48:51.0762] <mgaudet>
Oh interesting. Good idea! 

[15:42:11.0194] <borane>
Hey I was wondering, do `new`-constructed objects that don't escape a function get allocated on the stack? 

[15:43:13.0128] <borane>
I know that escape analysis is performed somewhere, but is it only during compilation, or will the interpreter do it?

[15:50:17.0845] <iain>
borane: Only during compilation

[15:50:28.0509] <iain>
 * borane: Only during compilation

[15:50:43.0913] <iain>
It is the ScalarReplacement pass in Warp

[15:51:50.0146] <iain>
For technical reasons, we currently don't scalar-replace objects allocated via `new`, but we used to, and we have a bug open to fix it

[15:52:27.0414] <iain>
(Bug 1700422)

[15:52:30.0189] <botzilla>
https://bugzil.la/1700422 — NEW (nobody) — Support constructors in scalar replacement

[15:53:49.0478] <borane>
Interesting, so I would probably see more allocation pressure if I went back and profiled that same code again.

[15:54:11.0802] <iain>
Depends on when you last profiled it, but yes

[15:54:33.0932] <iain>
And also on whether we could prove that the objects didn't escape

[15:57:40.0240] <borane>
Ion was able to prove that, probably because all of the functions were short enough for inlining. 

[16:00:09.0040] <borane>
Thanks for the info though, I'll avoid creating intermediate storage with `new` this time around.


2021-04-09
[20:24:32.0085] <18f>
If I compile the js-shell with --enable-debug, are there a way to disable MOZ_ASSERT?

[20:24:47.0571] <18f>
🥲

[20:27:39.0558] <iain>
No

[20:29:14.0710] <iain>
That's what `--enable-debug` is for

[20:29:49.0319] <iain>
 * Turning on assertions is the reason we have `--enable-debug`

[20:47:22.0930] <ashcode>
> <@mgaudet:mozilla.org> General call: Looking for a good-third-bug for ashcode :) At this point they've done a few of the easier tasks, and could probably be aimed at something a touch meatier.

4th* bug, 😁,Thanks for the bug, i ll do it😃👍️

[22:30:24.0780] <Redfire>
re: https://discourse.mozilla.org/t/survey-where-are-you-embedding-spidermonkey/77988/4
should I add my WIP js runtime here? or wait till it's more complete?

[22:40:48.0115] <18f>
> <@iain:mozilla.org> Turning on assertions is the reason we have `--enable-debug`

ok, thx

[01:11:32.0916] <mehaboob_shariff>
For the isFirststub bug having a look at header file of CacheIR is enough or do I have to check some other files too

[01:27:09.0673] <wraitii>
Hello everyone, quick question: is there a way to set a callback before an object (specifically a proxy) with some non-null private data is deleted? 

[01:36:47.0173] <arai>
if it's your own custom `JSClass` object, you can have `JSFinalizeOp` for it  https://searchfox.org/mozilla-central/rev/5a8487d8e9dd114289083800f723d9c56c9a8003/js/public/Class.h#418-423

[01:36:56.0921] <arai>
https://searchfox.org/mozilla-central/rev/5a8487d8e9dd114289083800f723d9c56c9a8003/js/public/Class.h#735-744

[01:51:57.0136] <wraitii>
Right, thanks, that could work.

[07:29:52.0949] <tcampbell>
If your object has a custom Proxy handler in C++, you would implement the `BaseProxyHandler::finalize` virtual method

[07:48:59.0521] <sfink>
Redfire: I think for the purpose that list is serving, I would say to add it. I think it's for knowing about who is impacted by various changes and identifying a pool of expertise. And for both of those purposes, it makes sense to add it.

[07:49:01.0713] <sfink>
thanks!

[08:33:37.0140] <iain>
mehaboob_shariff: `IRGenerator` and all its subclasses are in `CacheIR.h`. The `isFirstStub` bug will have to change that code, and probably also the code in `BaselineIC.cpp` and `IonIC.cpp` that creates IRGenerators.

[09:22:34.0953] <mgaudet>
confession: Strings, Ownership, CompileOptions and OOM handling... I am in a hell of my own making 😞

[09:22:41.0167] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[10:18:36.0723] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: `IRGenerator` and all its subclasses are in `CacheIR.h`. The `isFirstStub` bug will have to change that code, and probably also the code in `BaselineIC.cpp` and `IonIC.cpp` that creates IRGenerators.

okay

[10:51:07.0971] <evilpie>
sfink: can you merge https://github.com/mozilla-spidermonkey/mozilla-spidermonkey.github.io/pull/21 ?

[10:54:11.0194] <ashwiniwankhede>
Hello! 
Whenever I run hg commands, I get the following in return
obsolete feature not enabled but 4 markers found!

Any idea what is going wrong?

[10:54:27.0994] <sfink>
evilpie: done. Though I'm confused as to why I was needed? Was it because yulia only added comments but did not mark it reviewed? (I'm still new to the github workflow.)

[10:54:53.0049] <evilpie>
I made another commit to change the first instance

[10:54:58.0736] <evilpie>
I think that invalidated it?

[10:55:22.0637] <sfink>
ashwiniwankhede: it is ignorable. It probably means you had evolve enabled at some point, it created some obsolescence markers, and now you have it disabled?

[10:55:26.0762] <sfink>
ok

[10:55:33.0026] <yulia>
sfink: i don't have merge rightss

[10:55:37.0440] <sfink>
wat?

[10:55:40.0651] <yulia>
ikr

[10:55:50.0278] <sfink>
how do we give you those?

[10:55:53.0255] <yulia>
i think that was why anyway

[10:56:26.0498] <yulia>
actually now i am not so sure... im not used to that workfflow either

[10:57:07.0448] <ashwiniwankhede>
> <@sfink:mozilla.org> ashwiniwankhede: it is ignorable. It probably means you had evolve enabled at some point, it created some obsolescence markers, and now you have it disabled?

how do I enable it?
I am not able to hg commit --amend 
returns:
abort: cannot amend public changesets
(see 'hg help phases' for details)

[10:58:20.0245] <sfink>
that's unrelated to the message

[10:58:46.0644] <sfink>
have you made a commit yet? You're probably trying to amend to an upstream commit.

[11:00:13.0666] <ashwiniwankhede>
> <@sfink:mozilla.org> have you made a commit yet? You're probably trying to amend to an upstream commit.

i made a commit earlier today and then my system updated itself. now I was trying to amend it.

[11:00:32.0431] <sfink>
what's the output of `hg log -r .`?

[11:01:07.0857] <sfink>
I guess I should figure out why `hg wip` gives me garbage output so I can stop using my own command.

[11:01:29.0233] <sfink>
hm, `hg show stack` works for me

[11:04:58.0579] <iain>
ashwiniwankhede: The `[extensions] section of my `.hgrc` contains a line like `evolve = /home/iain/.mozbuild/evolve/hgext3rd/evolve`. I believe it's added by `mach bootstrap`, if you let it modify your `.hgrc`.

[11:05:09.0298] <iain>
 * ashwiniwankhede: The `[extensions]` section of my `.hgrc`contains a line like`evolve = /home/iain/.mozbuild/evolve/hgext3rd/evolve`. I believe it's added by `mach bootstrap`, if you let it modify your `.hgrc`.

[11:17:30.0274] <ashwiniwankhede>
> <@iain:mozilla.org> ashwiniwankhede: The `[extensions]` section of my `.hgrc`contains a line like`evolve = /home/iain/.mozbuild/evolve/hgext3rd/evolve`. I believe it's added by `mach bootstrap`, if you let it modify your `.hgrc`.

yes. there is a line like this. 

[11:17:37.0196] <ashwiniwankhede>
do i remove it?

[11:19:08.0352] <iain>
Hmm, no. I thought that was what enabled the `obsolete` feature.

[11:33:29.0481] <sfink>
it should. ashwiniwankhede what's the output of `hg config --debug extensions.evolve` ?

[11:37:21.0058] <sfink>
Huh. So it really is set.

[11:40:46.0116] <sfink>
though I just noticed that if I disable evolve, I still don't get that warning message. It might be that the obsolete stuff is sufficiently builtin now.

[11:46:38.0810] <ashwiniwankhede>
i read somewhere that `$ rm .hg/store/obsstore` might work. do you think that it might make some negative changes for future use?

[11:54:19.0783] <sfink>
it probably would work, but I want to be sure you're aware that this is unrelated to your problem with `hg commit --amend`.

[11:54:49.0031] <sfink>
the only effect of deleting obsstore is to make the warning go away; it wouldn't be fixing anything

[11:55:09.0081] <sfink>
another way to make the warning go away is to figure out why obsolescence markers are disabled for you

[11:55:48.0336] <ashwiniwankhede>
yeah

[11:58:43.0586] <sfink>
and unfortunately I have to run soon, so I may not be able to help with that today

[12:05:40.0105] <sfink>
for the channel in general: I have something going on this afternoon and all the afternoons of next week. So I'll be working roughly 6:30am-2pm Pacific time, and drawing on PTO to work less than that some of those days. So my availability will be less and different than usual, in case any of y'all care.

[13:49:08.0982] <sfink>
(but please, continue asking questions here. Plenty of other people to help!)

[13:49:21.0042] <sfink>
 * (but please, continue asking questions here. Plenty of other people who can help!)

[14:03:10.0807] <mgaudet>
confession: Private method patches are being fuzzed, but looking good. Since we have the impending soft freeze, out of an abundance of caution I'll likely wait until the 19th to land them. Popping my work stack back to where I was a couple months ago and trying to reverse-engineer why I ended up where I did... 😬

[14:03:14.0733] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[15:33:00.0337] <dana>
hi folks - I was wondering if anyone has some advice on leaks like these:
https://treeherder.mozilla.org/jobs?repo=try&revision=2696021f2337cef9c496f72ac2d74dc2dbee3e70&selectedTaskRun=QY1N5e1DSECgq5Pp8I6KVA.0
(seems to be similar to preexisting intermittent https://bugzilla.mozilla.org/show_bug.cgi?id=1697396)

[15:33:34.0672] <dana>
basically, the patch I'm trying to land makes that leak much more often (or perhaps it's something else, just with similar  symptoms)

[15:42:40.0421] <mccr8>
dana: That's kind of a strange leak. Lots of JS stuff, a little bit of Fluent stuff, but nothing else that I could see.

[15:42:57.0072] <mccr8>
Usually a leak will show up as a mixture of JS and DOM C++ stuff.

[15:43:36.0905] <mccr8>
At least it is in the toolkit/components/certviewer/tests/browser/ directory which I presume is at least related to what you are working on.

[15:43:51.0617] <dana>
ah, yes

[15:43:59.0416] <mccr8>
dana: you could see if the leak reproduces in debug builds. It'll have more information and less JS spam.

[15:44:43.0655] <dana>
debug without  asan? (I don't think there are jobs for debug + asan...)

[15:45:00.0217] <mccr8>
Yes, debug without ASan. We have leakchecker there.

[15:45:21.0342] <mccr8>
It is possible that this leak won't show up there.

[15:45:46.0409] <mccr8>
dana: does your patch change shutdown in any kind of way? My only real guess for this kind of issue would be that shutdown isn't being allowed to tear everything down.

[15:46:31.0866] <dana>
I don't think it does - the patch really just changes how a couple of pages use a js utility library...

[15:47:22.0148] <dana>
the original patch is here: https://phabricator.services.mozilla.com/D106340

[15:55:50.0112] <mccr8>
dana: yeah, nothing obviously leaky in that patch. I'm not sure. Hopefully the debug run will give more info.

[15:56:21.0161] <dana>
ok - thanks for having a look. I started the debug tests, so we'll see how that goes


2021-04-10
[18:29:39.0470] <borane>
Can warp generate SIMD instructions?

[18:33:55.0813] <iain>
borane: No, we don't use SIMD in JS. Wasm is in the process of adding support, though 

[18:36:17.0669] <borane>
I heard about wasm adding that. Once it's done, the answer to all of my detailed optimization questions will be "just use wasm." :) It probably is already lol

[02:05:07.0520] <18f>
> <@iain:mozilla.org> Not exactly. Instructions that don't have resume points can still bail out.

Hey, It's too late, but now seems I finnaly understand what u saying.😂

[02:09:20.0670] <18f>
1. first I have this js code:

[02:10:24.0735] <18f>
Then I will have this IR graph(block00, here is not important)

[02:11:14.0419] <18f>
I think for insert resumepoint. will insert two point.

[02:11:24.0877] <18f>
1. the block start location/

[02:12:15.0121] <18f>
2. the instruction which have "side-effect". like(newObject, 21:storefixedslot, 25:storefixedslot)

[02:12:34.0362] <18f>
> <@18f:mozilla.org> 1. the block start location/

Here should be each block. sry.

[02:13:43.0479] <18f>
for recover the baselinestack frame. we need list the varibale which is need in baseliine.

[02:14:00.0078] <18f>
so we have this similar graph.

[02:16:02.0596] <18f>
The read value part maybe I am wrong... because I don't know why "1:undefined" will be here... but "4, 4(MagicUninitializedLexical)" seems should be i, sum.

[02:16:35.0605] <18f>
Becuase they don't initialed, but seems "js" will lift it to the function header.

[02:16:53.0146] <18f>
could u tell me I am right or not?

[09:03:39.0940] <iain>
 18f That looks almost all right.

[09:05:20.0659] <iain>
I think the correct layout for the resume point after newObject is:
```
18 1 4 4 16 0 1 1
18 = newObject (on stack)
1 = i   (local var; not in scope yet)
4 = sum (local var)
4 = o   (local var)
16 = mm (local var)
0 = this
1 = environment chain
1 = args object
```

[09:07:41.0369] <iain>
If you look at `dis(jit)`, you will see that we start with 
```00000:  Uninitialized                   # UNINITIALIZED
00001:  InitLexical 0                   # UNINITIALIZED    // mm
00005:  InitLexical 1                   # UNINITIALIZED    // o
00009:  InitLexical 2                   # UNINITIALIZED    // sum
```
We don't set `i` to `UninitializedLexical` until later

[09:07:59.0760] <iain>
Which is why it is still `undefined` in this resume point

[09:11:31.0388] <iain>
If we had a second loop `for (let j = 0; j < 2; j++)` after (not inside) the `i` loop, the parser could use the same stack slot for `i` and `j` because the lifetimes don't overlap

[09:39:43.0972] <mehaboob_shariff>
iain: I have time to look at the bug right. I might be travelling

[09:40:04.0044] <iain>
Yep, take your time

[11:20:55.0983] <ashwiniwankhede>
Hello! I was working on this bug 
https://bugzilla.mozilla.org/show_bug.cgi?id=1702601
It passed all jit-test and jstests except one. 
Can someone help me find what is going wrong?


[11:22:20.0094] <ashwiniwankhede>
I used struct to pass the parameters for the function. 

[11:22:29.0617] <arai>
sure

[11:22:33.0370] <arai>
are you using debug build?

[11:22:43.0479] <ashwiniwankhede>
yes

[11:23:22.0741] <ashwiniwankhede>
`--enable-debug` and `--enable-optimize`

[11:24:16.0453] <arai>
first, try to run the test alone

[11:24:32.0258] <arai>
pass the filename after jit-test

[11:24:44.0742] <arai>
to see if it fails there

[11:26:12.0175] <ashwiniwankhede>
> <@arai:mozilla.org> pass the filename after jit-test

the file name for which it is giving timeout right?

[11:26:37.0829] <arai>
parser/bug-1263881-2.js

[11:26:39.0956] <arai>
it's not timeout

[11:26:44.0331] <arai>
it says it hits out of memory

[11:26:56.0062] <ashwiniwankhede>
ohh yes. sorry.

[11:27:19.0123] <ashwiniwankhede>
```
$ ./mach jit-test parser\bug-1263881-2.js
No tests found matching command line arguments.
```

[11:28:44.0683] <arai>
try using slash instead of backslash

[11:29:19.0989] <arai>
in the shell, the the path delimiter is slash

[11:30:41.0191] <ashwiniwankhede>
still the same outcome. 
No test found matching command line arguments

[11:31:24.0310] <arai>
what if `./mach jit-test bug-1263881-2.js` ?

[11:32:38.0805] <ashwiniwankhede>
```
$ ./mach jit-test bug-1263881-2.js
[1|0|0|0] 100% ==========================================================>|   0.5s
PASSED ALL
```

[11:32:58.0580] <arai>
so, looks like it works

[11:33:20.0223] <arai>
try running it some more times, to see if the error is intermittent or not

[11:33:33.0330] <ashwiniwankhede>
Okay. Cool.

[11:33:43.0671] <ashwiniwankhede>
Thanks 😀

[11:34:00.0650] <arai>
if it passes this time, the possibility is either:  1. the test sometimes fails.  2. the test fails if it's executed with other tests parallely

[11:35:40.0126] <ashwiniwankhede>
Is it comman for this to happen?

[11:36:16.0425] <arai>
the former case sometimes happen

[11:36:23.0104] <arai>
the latter case may happen depending on the environment

[11:41:38.0506] <arai>
for "out of memory" error, it means that the process failed to allocate memory required by the code.  so, if there aren't much available RAM, it can fail

[11:42:57.0020] <arai>
by default, jit-test runs tests parallelly (with the number of CPU cores)

[11:43:04.0460] <arai>
 * by default, jit-test runs tests parallelly, with the number of CPU cores

[11:43:37.0750] <arai>
so, it's possible that RAM-consuming test was running at the same time

[11:44:03.0535] <ashwiniwankhede>
Ohh Okay. 

[11:44:40.0076] <arai>
also, one more thing to check is, if the test fails without your change

[11:45:00.0573] <arai>
both with running with other tests, and running it alone

[11:45:18.0650] <ashwiniwankhede>
> <@arai:mozilla.org> for "out of memory" error, it means that the process failed to allocate memory required by the code.  so, if there aren't much available RAM, it can fail

I thought out-of-memory error meant the build is taking way more memory than it should. 

[11:45:40.0118] <arai>
if it happens during build, it's correct

[11:45:52.0676] <arai>
but this time it happens during test

[11:46:26.0180] <ashwiniwankhede>
Yes. 

[11:52:04.0510] <ashwiniwankhede>
it gave oom failure for a couple of more tests(different tests than previous) while testing again but when tested individually both of the test passed.

[11:53:53.0167] <arai>
then, sounds like it's more like environment-dependent

[11:54:09.0532] <arai>
try to make sure it doesn't change between with/without your changes

[11:54:38.0786] <ashwiniwankhede>
Okay. 

[11:58:37.0459] <ashwiniwankhede>
I have one more doubt. 
When I trying to amend my commit it gives 
```
$ hg commit --amend
abort: cannot amend public changesets
(see 'hg help phases' for details)
```


[11:59:35.0452] <arai>
if means you're on not-your-own changeset

[11:59:59.0020] <arai>
try checking `hg parent` before running the command, to make sure you're on the changeset that you want to amend

[12:01:10.0152] <ashwiniwankhede>
changeset and parent are different

[12:10:15.0248] <arai>
do you mean `hg parent` shows not-your-own changeset now?

[12:14:12.0914] <arai>
if that's the case, you need to update to your changeset that contains the change that you want to amend.  first, look for your changeset.  `hg heads` will show leaf changesets (that has no child changeset).  if it shows yours, you can update to it

[12:17:07.0361] <arai>
if you have any uncommitted changes to files, you need to save it to safe space before updating. shelve extension provides the feature  https://www.mercurial-scm.org/wiki/ShelveExtension


2021-04-11
[23:09:59.0811] <Redfire>
sfink: Got it, I'll work on adding it soon!

[00:20:32.0297] <Redfire>
https://discourse.mozilla.org/t/survey-where-are-you-embedding-spidermonkey/77988/6 I hope this is fine :upside

[00:20:41.0897] <Redfire>
 * https://discourse.mozilla.org/t/survey-where-are-you-embedding-spidermonkey/77988/6 I hope this is fine :ecstatic:

[00:20:54.0209] <Redfire>
 * https://discourse.mozilla.org/t/survey-where-are-you-embedding-spidermonkey/77988/6 I hope this is fine 🙃

[04:10:11.0065] <18f>
> <@iain:mozilla.org> I think the correct layout for the resume point after newObject is:
> ```
> 18 1 4 4 16 0 1 1
> 18 = newObject (on stack)
> 1 = i   (local var; not in scope yet)
> 4 = sum (local var)
> 4 = o   (local var)
> 16 = mm (local var)
> 0 = this
> 1 = environment chain
> 1 = args object
> ```

Thx. seems I am wrong because I don't know why "o != newObject".

[04:10:30.0196] <18f>
But the another part is easy to understand with your explain.

[04:16:50.0303] <18f>
When we bailout to baseline, we need a function to recover the baselineframe, could anyone tell me the function name?

[05:01:16.0051] <18f>
|FinishBailoutToBaseline|. seems is this

[07:06:19.0841] <sfink>
Redfire: thanks, looks good!

[10:28:33.0530] <iain>
18f: If you look at the output of `dis(jit)`, `let o = {x: mm, y: 2}` looks like this:
```00026:  NewObject ({x:(void 0), y:(void 0)}) # OBJ
00031:  GetLocal 0                      # OBJ mm
00035:  InitProp "x"                    # OBJ
00040:  Int8 2                          # OBJ 2
00042:  InitProp "y"                    # OBJ
00047:  InitLexical 1                   # OBJ
```

[10:30:08.0772] <iain>
 * 18f: If you look at the output of `dis(jit)`, `let o = {x: mm, y: 2}` looks like this:
```00026: NewObject ({x:(void 0), y:(void 0)}) # OBJ
00031:  GetLocal 0                      # OBJ mm
00035:  InitProp "x"                    # OBJ
00040:  Int8 2                          # OBJ 2
00042:  InitProp "y"                    # OBJ
00047:  InitLexical 1                   # OBJ
```

[10:30:35.0791] <iain>
 * 18f: If you look at the output of `dis(jit)`, `let o = {x: mm, y: 2}` looks like this:
```
00026: NewObject ({x:(void 0), y:(void 0)}) # OBJ
00031:  GetLocal 0                      # OBJ mm
00035:  InitProp "x"                    # OBJ
00040:  Int8 2                          # OBJ 2
00042:  InitProp "y"                    # OBJ
00047:  InitLexical 1                   # OBJ
```

[10:31:33.0257] <iain>
We create the new object at offset 26, but we don't store it into `o` until offset 47. 

[10:32:37.0105] <iain>
So in the resume point right after `NewObject`, `o` isn't set yet

[14:24:32.0444] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: `IRGenerator` and all its subclasses are in `CacheIR.h`. The `isFirstStub` bug will have to change that code, and probably also the code in `BaselineIC.cpp` and `IonIC.cpp` that creates IRGenerators.

This emitCalleeGaurd member function which is declared in CacheIR.cpp also uses the isFirstStub 

[14:27:08.0622] <mehaboob_shariff>
And If I remove isFirstStub from CallIRGenerator then emitCallee wont be able to access it

[15:27:55.0388] <arai>
where is the source of https://firefox-source-docs.mozilla.org/js/build.html stored?  I'd like to propose a change to MOZCONFIG file for debug build, to explicitly specify MOZ_OBJDIR, so that it doesn't conflict with Firefox build

[16:16:29.0617] <iain>
mehaboob_shariff: CallIRGenerator inherits from IRGenerator. You can make `isFirstStub_` a protected member of IRGenerator, or add an accessor function (`bool isFirstStub() const { return isFirstStub_; }`) and call that function from `emitCallGuard`


2021-04-12
[18:41:34.0800] <18f>
> <@iain:mozilla.org> 18f: If you look at the output of `dis(jit)`, `let o = {x: mm, y: 2}` looks like this:
> ```
> 00026: NewObject ({x:(void 0), y:(void 0)}) # OBJ
> 00031:  GetLocal 0                      # OBJ mm
> 00035:  InitProp "x"                    # OBJ
> 00040:  Int8 2                          # OBJ 2
> 00042:  InitProp "y"                    # OBJ
> 00047:  InitLexical 1                   # OBJ
> ```

Yes, thx.

[18:41:56.0869] <18f>
But I don't think the biggest mistake I had made.

[18:42:03.0923] <18f>
I forgot something.

[18:42:14.0416] <18f>
with my js test file.

[18:42:32.0993] <18f>
1. o will been optimized 2. sum will saved.

[18:43:07.0402] <18f>
That's means If I could know how to recover o and sum I will know everything which I want to know.

[18:43:21.0428] <18f>
To understand this question is not too hard. 

[18:43:42.0705] <18f>
If I set "IONFLAGS="bl-balils""

[18:43:52.0140] <18f>
It wil dump the recover frame.

[18:44:17.0592] <18f>
use this message, search it in the JS file, I will know which code will implement recover.

[18:44:34.0781] <18f>
just debug this, everything will be ok.

[18:44:43.0176] <18f>
Thanks, I am so stupid.

[19:51:28.0213] <mavneet>
Hi everyone! I am an Outreachy applicant. I was following the instructions here https://firefox-source-docs.mozilla.org/setup/windows_build.html and while cloning the firefox source code the process runs for like 2 hours before a transaction abort error. I have tried multiple times. Could really use some help here. 

[19:53:50.0593] <arai>
try downloading bundle file with browser or other downloader  https://firefox-source-docs.mozilla.org/contributing/vcs/mercurial_bundles.html

[19:54:25.0604] <arai>
the error happens depending on the network connection stability

[19:54:56.0418] <arai>
and using browser or other downloader might help

[19:55:39.0790] <arai>
also, if you're using wireless connection and you can use wired connection, try wired connection.  it would be more stable

[19:56:34.0912] <mavneet>
Thanks, I'll try this. 

[23:25:58.0805] <18f>
Hey, what means "stack frame is introspected"?

[23:26:00.0486] <18f>
Thx.

[23:37:39.0940] <jandem>
18f: when C++ code is looking at JS frames on the stack. You're looking at recover instructions I assume? For certain cases it has to support this by creating the object at that point and doing an invalidation

[23:48:03.0636] <18f>
> <@jandem:mozilla.org> 18f: when C++ code is looking at JS frames on the stack. You're looking at recover instructions I assume? For certain cases it has to support this by creating the object at that point and doing an invalidation

Yes, I read SMODOC.

[23:48:16.0029] <18f>
Could u give me a example?

[23:48:18.0873] <18f>
Thanks.

[00:02:43.0848] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: CallIRGenerator inherits from IRGenerator. You can make `isFirstStub_` a protected member of IRGenerator, or add an accessor function (`bool isFirstStub() const { return isFirstStub_; }`) and call that function from `emitCallGuard`

oh yes, CallR is a subclass... thank you for the tip

[00:08:20.0330] <jandem>
18f: like [this](https://searchfox.org/mozilla-central/rev/fa48ebee58d59fa846919c3e2c3122b08db57c9c/js/src/vm/FrameIter.cpp#880-882) for example

[00:15:18.0878] <18f>
> <@jandem:mozilla.org> 18f: like [this](https://searchfox.org/mozilla-central/rev/fa48ebee58d59fa846919c3e2c3122b08db57c9c/js/src/vm/FrameIter.cpp#880-882) for example

Thx

[01:20:06.0250] <wingo>
can we do `if (int err = foo(...)) { ... }` in SM code ?

[01:28:50.0093] <jandem>
wingo: yeah we use that syntax in a number of places

[05:19:45.0763] <yulia>
I am running rr for the first time on linux

[05:19:52.0133] <yulia>
but it isn't picking up the debugging symbols

[05:20:07.0045] <yulia>
do we have a readme somewhere of how to set it up?

[05:22:26.0886] <yulia>
it seems to load symbols from the wrong location 🤔

[05:34:27.0188] <padenot>
it's supposed to "just work", do you have a unusual setup maybe ? Did you add debug info in your mozconfig ?

[05:34:51.0872] <padenot>
 * yulia: it's supposed to "just work", do you have an unusual setup maybe ? Did you add debug info in your mozconfig ?

[05:35:29.0658] <padenot>
`--enable-debug --enable-optimize=-Og` gives me good results

[05:35:38.0597] <yulia>
my moz config is pretty sparse right now, just `ac_add_options --enable-debug` and js application

[05:36:18.0247] <yulia>
it is looking for the symbols in .local/share/rr, which my gdb is looking elsewhere (and finding them)

[05:36:25.0779] <yulia>
i haven't changed the env variables yet..

[05:36:30.0296] <yulia>
don't know if i should?

[05:37:14.0142] <padenot>
I don't think I've ever needed to do anything 

[05:37:27.0710] <yulia>
i added 0g... though i would be surprised if that was it... hm

[05:37:42.0951] <yulia>
it is a new machine, i might have forgotten something while setting it up

[05:37:45.0297] <padenot>
`~/.local/share/rr` usually contains hard links to the version of `libxul.so` etc. that have been used for a particular recording

[05:38:04.0061] <padenot>
so it's not unsurprising that you see `rr` attempting to load symbols from there

[05:38:09.0619] <padenot>
 * so it's not surprising that you see `rr` attempting to load symbols from there

[05:38:44.0864] <yulia>
ok

[05:40:02.0207] <padenot>
the `Og` thing is not needed for sure, but I find that it's a nice quality of life improvement, to iterate quickly

[05:42:08.0666] <padenot>
it looks like this on my machine: https://paste.mozilla.org/wnMNxrZy, do you see anything different ?

[05:42:58.0977] <padenot>
if you do `b mozilla::some::symbol`, it's going to say that it doesn't find the symbol, asking if you're ok with inserting the breakpoint lazily when the `.so` is loaded, do you see something else ?

[05:44:12.0843] <padenot>
then you do `c` and it's going to replay the execution, and when needed, "activate" this breakpoint (when a symbol matches). you can verify by doing ctlc+c after a few seconds of replay and then `info b` to list breakpoints, and it should be resolved with the line number etc.

[05:46:45.0173] <padenot>
gdb might or might not be set up to do lazy loading, I can't remember

[05:48:17.0290] <yulia>
mine does step 20 but not 21

[05:48:25.0730] <yulia>
im also using it from jit-test

[05:48:58.0688] <padenot>
something along the lines of line 17, maybe mentioning `jit-test` instead of `firefox` ?

[05:49:55.0554] <yulia>
this is what i am seeing: https://paste.mozilla.org/UJKduz0P

[05:50:48.0147] <padenot>
that looks about right, `b main` `c` does something ?

[05:50:56.0078] <padenot>
(in two commands)

[05:51:42.0978] <yulia>
oh, yeah

[05:51:44.0104] <yulia>
thats fine

[05:51:54.0728] <yulia>
weird

[05:52:17.0674] <padenot>
I think it's complaining that it can't find symbols for `ld-linux` which is the dynamic linker

[05:52:34.0269] <padenot>
but it does find what it needs for the spidermonkey bits

[05:52:41.0194] <yulia>
ah, ok, i see

[05:58:16.0379] <padenot>
if you need to use pernosco after that there's a couple things to adjust (nothing really, just another flag), but otherwise you should be all set

[06:00:53.0100] <nbp>
yulia: if you have not installed debug symbols for system libraries, this will happen. However you should still have the JS shell/Firefox symbols for builds that you made your-self.

[06:02:54.0974] <yulia>
it seems to have crashed for me... 

[06:02:57.0548] <yulia>
oh well

[06:04:00.0201] <padenot>
that doesn't happen very often these days for me, but I've seen it happen. frequently, restarting the replay just another time work

[06:07:22.0346] <nbp>
padenot: Do you recall if there is any specific to use rr on AMD threadripper? ^

[06:09:37.0277] <padenot>
glandium would know, my machines are all intel for now so I haven't investigated

[06:23:04.0910] <jandem>
Bukola: (continuing the conversation here). What's the problem you're running into with the mozconfig file?

[06:32:48.0119] <arai>
> <@arai:mozilla.org> where is the source of https://firefox-source-docs.mozilla.org/js/build.html stored?  I'd like to propose a change to MOZCONFIG file for debug build, to explicitly specify MOZ_OBJDIR, so that it doesn't conflict with Firefox build

anyone have answer for this?  looks like some people bumps into the conflict between Firefox build and SpiderMonkey build, due to sharing single objdir

[06:33:52.0355] <jandem>
https://searchfox.org/mozilla-central/source/js/src/doc/build.rst

[06:34:05.0314] <arai>
oh

[06:34:08.0567] <arai>
thanks!

[06:34:18.0028] <arai>
I was thinking it's in different repository :P

[06:35:04.0115] <jandem>
if you push a patch to phabricator, the bot will post a link to a rendered version.. pretty nice

[06:35:51.0252] <sfink>
yulia: I have heard of lingering problems when running on AMD, because it's sloppy with the needed perf counter. I think some people have been bumping up a compiled-in skid allowance, which makes it slower but gets it working again.

[06:36:11.0711] <sfink>
oh, you're already over in #rr, never mind

[06:36:26.0530] <yulia>
i switched to gdb for now

[06:36:40.0702] <yulia>
rerunning it ended up always running to completion without the segmentation fault

[06:39:54.0475] <sfink>
that's weird

[06:42:06.0746] <Bukola>
> <@jandem:mozilla.org> Bukola: (continuing the conversation here). What's the problem you're running into with the mozconfig file?

after setting up `$HOME/mozconfigs/debug`

[06:43:44.0597] <Bukola>
> <@jandem:mozilla.org> Bukola: (continuing the conversation here). What's the problem you're running into with the mozconfig file?

 * after setting up `$HOME/mozconfigs/debug` i'm trying to run ./mach build but its returning error

[06:45:16.0633] <jandem>
Bukola: can you post a screenshot? (or copy/paste the error message)

[06:52:13.0885] <arai>
jandem: I was also talking in DM with Bukola , and it was due to using different terminal than MozillaBuild

[06:52:53.0988] <arai>
now we're moving discussion here as well :)

[06:53:06.0897] <mehaboob_shariff>
In the last part where it is asked to change the code in tryAttachArray but when I click "this code" part it is pointing me to a different part of the code

[06:53:09.0518] <jandem>
arai: ah makes sense

[06:59:28.0636] <Bukola>
so i ran `./mach build` command in `start-shell.bat`

so  it returned https://paste.mozilla.org/JU0oXDho

[07:03:28.0343] <arai>
sounds like you've missed `export MOZCONFIG=...`

[07:03:41.0103] <arai>
and it's picking another `mozconfig` file

[07:04:09.0154] <arai>
the `export` command has effect only to the current terminal

[07:04:19.0085] <arai>
so, if you close it and reopen it, you need to run it again

[07:07:08.0840] <yulia>
hm, i have been staring at this for a while, but i just don't know enough about how the debugger does stuff: https://bugzilla.mozilla.org/show_bug.cgi?id=1704480

[07:08:02.0516] <yulia>
I am not sure what is going on here. I know that we are changing...something... with onExceptionUnwind. That somethiing results in -- when we run the resume, the generator still running (as opposed to being closed)

[07:08:16.0743] <yulia>
this doesn't happen with async functions, only with async modules

[07:13:05.0423] <yulia>
the state is faulty after this point: https://searchfox.org/mozilla-central/source/js/src/vm/AsyncFunction.cpp#129-130

[07:13:30.0763] <yulia>
the generator is running, and generatorOrValue is set to undefined

[07:16:20.0975] <tcampbell>
yulia: the `f` in onExceptionUnwind is the "frame" which has a callee that I presume is your top-level module

[07:16:33.0780] <yulia>
thats right

[07:19:13.0249] <tcampbell>
In these situations, I'd try using rr and setting a watch on the state value and then finding who switched it

[07:19:39.0392] <yulia>
the problem can be simplified than what they have in the example

[07:20:06.0812] <yulia>
there is no issue if we do `return {throw: ""}` or `return null` -- only if we have `return {return: "something"}`

[07:20:24.0608] <yulia>
i just used rr for the first time, and it most def. crashed out on me

[07:20:40.0738] <yulia>
ill try to reset it... reruning it isn't working... maybe a reboot or reinstall will work

[07:21:20.0975] <tcampbell>
there might be some extra steps to get it running on the Ryzen machines

[07:21:55.0068] <tcampbell>
yulia: https://github.com/rr-debugger/rr/wiki/Zen might apply? I haven't read the details

[07:22:09.0729] <yulia>
yep, i did that when i was setting up

[07:22:14.0217] <yulia>
maybe rerunning that will help somehow

[07:22:38.0157] <yulia>
ill give it a shot

[07:25:49.0332] <Bukola>
> <@bukola_akinnadeju:matrix.org> so i ran `./mach build` command in `start-shell.bat`
> 
> so  it returned https://paste.mozilla.org/JU0oXDho

after running ` export MOZCONFIG=$HOME/mozconfigs/debug` it returned this same error

[07:26:57.0302] <arai>
what's the exact output now?

[07:27:06.0984] <arai>
can you pastebin again?

[07:27:23.0637] <arai>
at lease it should show different lines for mozconfig part

[07:29:51.0983] <tcampbell>
Bukola arai that pastebin has artifact builds enabled which will not work for jsshell

[07:30:41.0210] <arai>
yes, it's wrong configuration (that I think should be removed anyway) and we should have another file that has correct configuration

[07:30:41.0408] <tcampbell>
Can I ask where you got the tip for "--enable-artifact-builds"? A few people have run into this now and we should probably improve instructions somewhere

[07:35:08.0145] <tcampbell>
I tried my windows build and it does seem like `export MOZCONFIG=...` works as expected and throws errors if I have typos in path.

[07:35:36.0961] <tcampbell>
It might be good to avoid using $HOME on windows builds since it can be a little confusing if it is the Windows home or the mozilla-build/msys home

[07:36:00.0582] <tcampbell>
```
$ echo $HOME
/c/Users/tcampbell
```

[07:36:11.0697] <mehaboob_shariff>
> <@tcampbell:mozilla.org> Can I ask where you got the tip for "--enable-artifact-builds"? A few people have run into this now and we should probably improve instructions somewhere

I think in the during selection of options it showing that artifact is the default mode that's why some people including me have selected that option 

[07:36:33.0202] <tcampbell>
Ah! thanks! that is good to know

[07:37:52.0878] <mehaboob_shariff>
and for the export MOZCONFIG= <..> we have to check which path the $HOME is and create the mozcfings

[07:39:51.0960] <mgaudet|away-until-monday>
yulia: (If you want a pernosco recording of that bug while you wait for the `rr` mechanics to figure things out, just let me know; it doesn't take long for me to record a quick bug and upload a recording.

[07:39:53.0719] <mgaudet|away-until-monday>
 * yulia: (If you want a pernosco recording of that bug while you wait for the `rr` mechanics to figure things out, just let me know; it doesn't take long for me to record a quick bug and upload a recording.) 

[07:40:31.0252] <yulia>
I should probably learn how to do that..

[07:40:38.0686] <yulia>
haven't worked with it yet at all

[07:41:20.0961] <mgaudet|away-until-monday>
It's different... nice... but different

[07:41:35.0920] <mgaudet|away-until-monday>
If you want to screen-share drive one day, I can give a remote tutorial for what I've figured out

[07:41:42.0501] <yulia>
sure, would be good to take a look

[07:42:04.0511] <mgaudet|away-until-monday>
Did you want to do now-ish? or another day?

[07:42:09.0610] <sfink>
perhaps we should change the instructions to say `./mach bootstrap --app='Firefox for Desktop'` to sidestep the problem?

[07:42:38.0414] <yulia>
whenever works for you mgaudet|away-until-monday -- i am making 0 progress right now but i can keep banging away

[07:43:04.0664] <mgaudet>
If you're blocked, then me recording and giving you a walk through seems best 

[07:43:26.0627] <mgaudet>
Give me ~15 min to record, upload, get it processed, and also make coffee? 

[07:43:32.0251] <yulia>
cool, lemme make some tea and i am ready whenever

[07:43:33.0400] <mgaudet>
this bug right? https://bugzilla.mozilla.org/show_bug.cgi?id=1704480 

[07:43:35.0979] <yulia>
yeah sounds great

[07:43:37.0586] <yulia>
yah

[07:43:51.0780] <mgaudet>
Ok. Working on it :) 

[07:43:55.0694] <sfink>
Pernosco makes coffee too?! What doesn't it do?

[07:48:19.0148] <Bukola>
i removed the `--enable-artifact-builds` and re-ran the process 

[07:48:52.0040] <Bukola>
 * i removed the `--enable-artifact-builds` and re-ran the process

this is the new error i'm getting https://paste.mozilla.org/OSPEdoKA#L16,22

[07:50:20.0535] <Bukola>
and what does it mean by `Config object not found by mach`

[07:57:55.0178] <Bukola>
for the record: i ran `./mach build` before and it was successful until i added mozconfig file setup, and it crashed 

[07:59:07.0277] <arai>
try running `./mach bootstrap`

[07:59:13.0859] <arai>
it will download required tools

[07:59:16.0600] <arai>
including compiler

[07:59:38.0822] <arai>
it failed because of "ERROR: Cannot find the target C compiler"

[08:00:04.0648] <arai>
then, you can ignore "Config object not found by mach" part.  it just means there was no previous build

[08:00:42.0265] <Bukola>
> <@arai:mozilla.org> try running `./mach bootstrap`

ok, i will do that now

[08:15:23.0531] <sfink>
tcampbell: I don't remember where the directions are that people are following, but I recommend making the bootstrap procedure add `--app=browser` to avoid the confusing menu.

[08:15:57.0673] <sfink>
I seem to have added the ability to use the internal name last year, then never used nor documented it anywhere that people could find it. ;-)

[08:16:20.0354] <tcampbell>
/me redirects to mgaudet 

[08:18:16.0552] <mehaboob_shariff>
I have made a submission to a bug earlier. Now I made some changes for another bug and Im trying to submit but getting this error

[08:18:43.0981] <mehaboob_shariff>
It is trying to submit to a closed bug which I submitted earlier

[08:18:51.0039] <sfink>
you need to make a new commit for the new bug

[08:19:11.0878] <sfink>
you can have multiple commits on one bug, but not multiple bugs on one commit

[08:19:55.0380] <mehaboob_shariff>
yes I have made a new commit

[08:20:24.0123] <sfink>
oh! Maybe it's trying to submit the full stack.

[08:20:36.0527] <tcampbell>
(looks like extra wip commits need to be stripped off now that they merge.. anyone have hg tips here?)

[08:20:54.0422] <sfink>
you can rebase your new commit on top of central

[08:21:06.0815] <tcampbell>
otherwise I do `moz-phab submit HEAD^`, but it would be best to rebase so history is clean

[08:21:32.0885] <sfink>
if there's just one new commit here, `hg rebase -d central -r .`

[08:22:54.0015] <mehaboob_shariff>
what argument should I supply with -r

[08:23:08.0050] <sfink>
a period (`.`)

[08:23:27.0211] <sfink>
that means the commit that you're working off of

[08:23:50.0104] <sfink>
(in the docs, it's called "the working directory parent".)

[08:24:03.0783] <sfink>
`hg help revset` for the full details, but that's quite a long page

[08:25:47.0136] <sfink>
uh... what's the output of `hg show stack`? 

[08:26:05.0138] <sfink>
or `hg wip` if that only outputs a few lines for you (it's a mess for me)

[08:26:16.0471] <mehaboob_shariff>
> <@sfink:mozilla.org> uh... what's the output of `hg show stack`?

not showing any output

[08:26:56.0396] <mehaboob_shariff>
> <@sfink:mozilla.org> or `hg wip` if that only outputs a few lines for you (it's a mess for me)

unkown command 'wip'

[08:27:03.0768] <arai>
what does `hg parent` say?

[08:27:59.0867] <sfink>
it seems like you must have updated back to 641731

[08:28:01.0321] <mehaboob_shariff>
> <@arai:mozilla.org> what does `hg parent` say?

it is showing the details of the previous bug submit

[08:28:27.0510] <sfink>
if `hg diff` is empty, then I'd do `hg up -r 641732`

[08:29:25.0516] <mehaboob_shariff>
> <@sfink:mozilla.org> if `hg diff` is empty, then I'd do `hg up -r 641732`

what does this command do 

[08:29:34.0062] <mehaboob_shariff>
hg diff is empty

[08:30:05.0279] <sfink>
right now, based on the output of `hg parent`, your working directory (your checkout) has the contents of tree as of your previous commit (641731 for bug 16999273)

[08:30:20.0024] <mehaboob_shariff>
yes

[08:30:45.0178] <sfink>
you want to have it at the point after you've made the changes for bug 1695396

[08:30:46.0460] <botzilla>
https://bugzil.la/1695396 — NEW (nobody) — Move isFirstStub from CallIRGenerator into IRGenerator

[08:30:58.0325] <sfink>
which is in your (local) commit 641732

[08:31:27.0635] <sfink>
so `hg update -r 641732` will move you to that point -- as in, it will update your working tree to that revision

[08:31:55.0288] <sfink>
then if you do `hg parent`, it should should you that you are working off of 641732

[08:33:13.0537] <sfink>
and that commit hasn't been pushed anywhere, so will be in `draft` mode, and you will be able to modify it, or rebase it onto somewhere else in the commit graph

[08:33:49.0009] <mehaboob_shariff>
OK now it is pointing towards the new commit I made

[08:34:00.0410] <sfink>
now you can do the `hg rebase -d cedntral -r .`

[08:34:07.0871] <sfink>
oops, updating

[08:34:20.0165] <sfink>
 * now you can do the `hg rebase -d central -r .`

[08:35:03.0581] <sfink>
that will take the changes you made in that commit (641732) and re-apply them to the current `central` tip. (`central` is an alias for the head of the mozilla-central tree.)

[08:36:26.0008] <mehaboob_shariff>
> <@sfink:mozilla.org> now you can do the `hg rebase -d central -r .`

abort: source and destination form a cycle getting this error

[08:39:09.0526] <sfink>
I may not have been right about the current state of things. What's the output of `hg log --graph -r '.+641732+641731+central'` ?

[08:39:19.0982] <sfink>
(I'm just trying to understand your current state now)

[08:39:52.0793] <mehaboob_shariff>
sure but im learning a lot too :)

[08:41:16.0239] <sfink>
hm. Somehow you have a bookmark named `central` on 641732

[08:41:33.0915] <sfink>
how about `hg log -r . -T '{phase}\n'` ?

[08:41:51.0837] <mehaboob_shariff>
draft

[08:42:06.0858] <sfink>
ok, that bookmark is going to cause problems

[08:42:23.0860] <sfink>
do `hg bookmark -d central`

[08:42:49.0966] <sfink>
do you happen to know how it might have been created?

[08:43:18.0677] <sfink>
then repeat that earlier `hg log...` command to see if it can see the "real" central

[08:45:18.0335] <Redfire>
*trying to write macro boilerplate to make writing native functions easier is very very annoying*

[08:46:51.0238] <sfink>
well, you could be [doing it with C++ templates instead](https://engineering.mongodb.com/post/code-generating-away-the-boilerplate-in-our-migration-back-to-spidermonkey) :-)

[08:47:00.0829] <Redfire>
this is my theoretical syntax right now
```rs
#[macro_rules_attribute(js_fn!)]
fn log(cx: IonContext, #[varargs] values: Vec<Value>) -> IonResult<()> {
    print_indent(false);
    print_args(cx, values, false);
    println!();

    Ok(())
}
```
which feels very weird

[08:47:26.0079] <Redfire>
(theoretical, as in, i've implemented and it works, but the function never seems to return lol)

[08:47:26.0270] <sfink>
why is there "Ion" in those names? That doesn't look right.

[08:47:39.0921] <Redfire>
its a `*mut JSContext`

[08:48:20.0183] <Redfire>
`IonResult<T>` is a `Result<T, Some(String)>`

[08:48:22.0247] <sfink>
right, it's just that Ion is the optimized JIT tier, and you're working at the JSAPI level

[08:48:30.0975] <Redfire>
 * `IonContext` is a `*mut JSContext`

[08:48:32.0092] <sfink>
I'm not saying the code is wrong, just the names

[08:48:52.0847] <Redfire>
I named my jsapi_utils crate `ion` because I could 🙃

[08:49:18.0287] <sfink>
mehaboob_shariff: heh, sorry. I mean repeating the previous `hg log` command: `hg log --graph -r '.+641732+641731+central'`

[08:49:34.0776] <sfink>
I guess I shouldn't use ellipses when `.` and `..` *are* meaningful names to hg!

[08:50:34.0212] <sfink>
mehaboob_shariff: but it looks good. Now try `hg rebase -d central -r .` again.

[08:50:34.0858] <mehaboob_shariff>
abort: unknown revision 'central'!

[08:51:11.0475] <sfink>
ugh, maybe you don't have fxtree installed, or it got mad at you for having the bookmark. (Though it's possible that it *created* that bookmark because it thought.... oh, never mind.)

[08:51:37.0856] <sfink>
actually, can you try doing `hg pull`? It may fix that name up for you.

[08:52:36.0242] <mehaboob_shariff>
> <@sfink:mozilla.org> ugh, maybe you don't have fxtree installed, or it got mad at you for having the bookmark. (Though it's possible that it *created* that bookmark because it thought.... oh, never mind.)

mad at me 🤭

[08:52:44.0419] <mehaboob_shariff>
> <@sfink:mozilla.org> actually, can you try doing `hg pull`? It may fix that name up for you.

yeah ill try

[08:54:02.0281] <sfink>
revision control systems are temperamental and quick to anger

[08:54:19.0818] <sfink>
git and hg both. I've gotten them very, very upset with me on many occasions.

[08:55:11.0961] <mehaboob_shariff>
> <@sfink:mozilla.org> mehaboob_shariff: but it looks good. Now try `hg rebase -d central -r .` again.

I did this after hg pull and it is working

[08:55:40.0576] <sfink>
ok, cool. That means your `central` tag is repaired now as well.

[08:55:43.0352] <mehaboob_shariff>
rebase completed...

[08:56:06.0118] <sfink>
`moz-phab` should now work

[08:59:07.0652] <mehaboob_shariff>
thank you a lot sfink  and arai , @tcampbell too

[09:19:49.0125] <iain>
> <@mehaboob_shariff:mozilla.org> In the last part where it is asked to change the code in tryAttachArray but when I click "this code" part it is pointing me to a different part of the code

Sorry, I forgot to use a permalink for that link when I wrote the bug. I updated the bug description; the code you're looking for is [here](https://searchfox.org/mozilla-central/rev/fa48ebee58d59fa846919c3e2c3122b08db57c9c/js/src/jit/CacheIR.cpp#4967-4969)

[09:21:23.0060] <mehaboob_shariff>
oh can I make changes and resubmit the bug

[09:22:39.0538] <mehaboob_shariff>
or can you review the changes made do far

[09:24:51.0639] <iain>
mehaboob_shariff: Go ahead and make changes and resubmit

[09:25:33.0870] <wraitii>
Hello everyone, quick question: we sometimes run into infinite recursive calls in JS (A calls B calls A..). This ends up segfaulting - not entirely sure if it's the stack or OOM. Is there a way to detect such stack overruns conveniently? 

[09:25:41.0552] <mehaboob_shariff>
ok

[09:30:39.0869] <iain>
wraitii: We have machinery to set a smaller stack limit than the OS-imposed limit, and throw an exception instead of segfaulting. See [here](https://searchfox.org/mozilla-central/source/js/src/jsapi.cpp#1525)

[09:33:54.0196] <iain>
pavelp: Are you actively working on bug 1695386?

[09:33:55.0682] <botzilla>
https://bugzil.la/1695386 — NEW (nobody) — Clean up BailoutKind::TooManyArgs

[09:34:13.0319] <wraitii>
iain: thanks I'll try that

[10:38:26.0715] <Bukola>
> <@arai:mozilla.org> try running `./mach bootstrap`

thanks arai this worked , the build took a while though but it was successful
tcampbell jandem thanks

[10:39:45.0494] <arai>
congrats!

[14:08:32.0363] <tcampbell>
I'm trying to figure out this UBI memory reporting stuff. I'm trying add memory reporting for `Set` / `Map` but testcase is failing because the size I compute in nursery vs tenured is different. I'm not entirely clear how non-gcthing data that is sometimes allocated in nursery is supposed to be handled..

[14:20:58.0226] <tcampbell>
Actually, I might have just missed part of my implementation... 

[14:21:10.0212] <tcampbell>
/me looks up NurseryKeysSlot ..

[15:24:56.0655] <dana>
mccr8: re the leaks we were talking about last week, the debug builds don't seem to be failing: https://treeherder.mozilla.org/jobs?repo=try&revision=2696021f2337cef9c496f72ac2d74dc2dbee3e70

[15:29:05.0310] <mccr8>
dana: hmm that's peculiar. I'm not sure what could cause LSan leaks but not leakcheck debug leaks.

[15:30:52.0591] <dana>
well, I guess I'll try to find a minimal patch that reproduces the leaks...

[15:31:28.0427] <mccr8>
The JS engine does drop JS stuff in some circumstances. Maybe that's only in debug and not LSan? 


2021-04-13
[00:33:14.0552] <18f>
https://searchfox.org/mozilla-central/source/js/src/jit/MIR.h#10976

[00:34:00.0328] <18f>
Hey , If we could inject a instruction between effectful instruction and resume point.

[00:34:07.0555] <18f>
What's wrong with this?

[01:54:33.0970] <smaug>
When storing properties on a object, how do we increase the internal storage size?

[01:55:32.0550] <smaug>
bug 1704520 hints that there is some boundary where adding just a couple of more properties ends up using significantly more memory

[01:55:34.0092] <botzilla>
https://bugzil.la/1704520 — NEW (nobody) — 0.34 - 0.34% Base Content JS / Base Content JS (OSX) regression on Fri April 9 2021

[02:11:09.0864] <jonco>
smaug: The number of dynamic slots is rounded up to a power of 2, maybe that could do it?  Dynamic slots are used where there are more properties than will fit inline in the object itself.

[02:11:53.0655] <smaug>
jonco: aha. Yeah, I was expecting something like that

[02:24:20.0581] <krosylight>
Hmm, so should we adjust that boundary or are we okay with it? 🤔

[02:45:17.0126] <smaug>
krosylight: yeah, I think we just need to accept the regression

[02:45:31.0088] <smaug>
we will add more an more properties to the Window object

[03:25:18.0368] <yulia>
rr is freaking amazing

[03:39:19.0823] <nbp>
(when it works)

[07:42:52.0938] <yulia>
so, about crash reports... what is the best way to make sure you fixed them?

[07:43:14.0578] <evilpie>
tcampbell: didn't we stop using ftp.mozilla: https://ftp.mozilla.org/pub/spidermonkey/releases/README.txt

[07:43:14.0901] <yulia>
I have a reproduction case that looks a lot like one i am investigating right now

[07:43:32.0823] <yulia>
and I have a fix for that (its based off my best guess for the code) but do we have a better way?

[07:43:42.0921] <tcampbell>
evilpie: I think sfink did that in the last month or so?

[07:44:27.0835] <tcampbell>
yulia: that is basically the way

[07:45:14.0562] <tcampbell>
yulia: certainly double check the signature next week after the merge-to-beta

[07:45:54.0551] <yulia>
ok

[07:57:18.0759] <mehaboob_shariff>
iain: I think I'm moving in the wrong direction for fixing the bug. Need some guidance ;(

[07:57:56.0882] <tcampbell>
evilpie: oh, I misread that. We stopped using it for pkg bundles. Using full firefox source downloads is recommended for ESR since it tracks security bugs and is signed.

[07:58:46.0880] <evilpie>
having to download the whole firefox tree is probably not super appealing

[08:04:01.0779] <sfink>
I don't know if people agree with it, but the instructions I put in that README tell you to download just the JS source package even for ESR. You pull it from the latest esr job, so it'll be up to date at least.

[08:06:08.0137] <sfink>
I probably should have added something to the description to tell people to look for a green job, not a gray one, so they don't get frustrated trying to get the package from unfinished jobs.

[08:20:50.0313] <decoder>
sfink: you are telling people to download jobs from TC manually? ^.^

[08:21:04.0661] <decoder>
we do have some python code to fetch builds from TC, maybe you can adapt this for source downloading

[08:21:29.0866] <sfink>
yeah, it's not great

[08:22:03.0479] <sfink>
the question is how far we want to go right now, when the real solution would require signing the packages and going through a real release process

[08:22:45.0839] <tcampbell>
If you care enough to have a numbered ESR version, I'm not sure downloading the whole firefox tree is really that much of a problem.

[08:23:04.0211] <yulia>
fudge... do we have a way to do an oomTest on the browser?

[08:23:20.0900] <yulia>
i guess reftest

[08:23:36.0512] <sfink>
tcampbell: I'm not sure about that. Distributions, I'm guessing, would probably much prefer a smaller source package.

[08:23:39.0225] <tcampbell>
the problem with the TC versions is you probably are not getting a predictable version

[08:24:13.0316] <sfink>
I guess they could always get the whole tree and then run `make-source-package.py` themselves

[08:26:25.0073] <tcampbell>
I'm not sure why a distro would prefer a random tc version over a numbered release though

[08:27:24.0142] <tcampbell>
certainly having the automated pkg build generated and signed would help, but it doesn't seem like a blocker as much as an inconvenience

[08:28:11.0218] <sfink>
you're assuming they would run m-s-p.py?

[08:33:37.0465] <tcampbell>
I'm looking at the debian stuff and it looks like they run m-s-p.py

[08:35:46.0117] <tcampbell>
https://tracker.debian.org/pkg/mozjs78 flags updates available on the fx source tarball on ftp.mozilla.org

[08:37:05.0762] <tcampbell>
https://salsa.debian.org/gnome-team/mozjs/-/blob/debian/78/master/debian/README.source

[08:40:02.0916] <tcampbell>
(They also check signing of the fx source tarball)

[08:44:14.0170] <sfink>
well, that's good to know! I guess I should update the README to recommend that path for esr, then.

[08:47:45.0581] <tcampbell>
People could in theory track https://salsa.debian.org/gnome-team/mozjs/-/tree/debian/78/master if they wanted too. Part of the problem is since we don't consume pkg builds directly, we would inevitably let this stuff bitrot if we had our own version of the repo =\

[09:01:17.0625] <iain>
> <@18f:mozilla.org> Hey , If we could inject a instruction between effectful instruction and resume point.

Each instruction uses the most recent resume point. If we put a new instruction between an effectful instruction and a resume point, it would use the previous resume point, and we could repeat the effect after bailing out

[09:33:28.0899] <iain>
mehaboob_shariff: I replied to your questions in the bug. Let me know if anything else is unclear!

[09:37:50.0115] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: I replied to your questions in the bug. Let me know if anything else is unclear!

sure i'll check it out thank you :)

[11:03:04.0776] <Bukola>
i'm trying to submit a patch using `moz-phab submit`, it keeps taking me back to my previous patch https://paste.mozilla.org/mqNB3fnm

is there something i'm doing wrong? 

[11:09:29.0574] <arai>
`moz-phab submit` submits all your changesets between your current changeset and public one

[11:09:38.0607] <arai>
if you have multiple changesets between them, it will submit all of them

[11:10:07.0452] <arai>
try checking the output of `hg log -f -l3` that shows topmost 3 changesets from your current one

[11:13:02.0470] <Bukola>
`hg log -f -l3` this is showing changesets from some other people with my own last patch that has been reviewed

[11:13:42.0972] <arai>
how many of them are yours?

[11:13:49.0540] <arai>
and in which order are they?

[11:14:17.0836] <Bukola>
one - the topmost

[11:14:54.0910] <arai>
and what's that?

[11:17:49.0701] <arai>
what is "last patch" ?

[11:18:54.0829] <Bukola>
the last commit that i made

[11:21:00.0342] <iain>
Bukola: To assign a reviewer in the commit message, you want "r=mgaudet", not just "mgaudet"

[11:22:06.0802] <Bukola>
> <@iain:mozilla.org> Bukola: To assign a reviewer in the commit message, you want "r=mgaudet", not just "mgaudet"

i noticed that and i just made  `hg commit --amend`

[11:23:54.0055] <iain>
Do you have `hg wip` configured? Can you post the output of `hg wip`? (If you don't, you should be able to enable it using `mach bootstrap`)

[11:26:14.0273] <Bukola>
https://paste.mozilla.org/AHsb8PoY 

here is the output for `hg wip`

[11:33:27.0698] <arai>
it shows your 2 changesets. that's why `moz-phab submit` try to submit them

[11:36:28.0569] <iain>
`moz-phab submit` lets you specify which commits you want to submit. `moz-phab submit <start>` will submit everything from `<start>` to the current patch. `moz-phab submit <start> <end>` will submit patches from `<start>` up to and including `<end>`. 

[11:38:25.0802] <iain>
`<start>` and `<end>` here can be revision ids (like 14d69fdffa45) or names (like tip). `moz-phab submit --help` can tell you more about submitting patches. `hg help revisions` can tell you more about specifying revisions.

[11:38:58.0273] <iain>
In this case, I think `moz-phab submit tip` will do what you want

[11:40:30.0295] <iain>
You could also do `hg rebase -s tip -d central` first, to rebase your current patch on central instead of on your previous patch, and then `moz-phab submit` would work

[11:54:54.0010] <Bukola>
https://paste.mozilla.org/vEZ7WK9z
is it possible the untrscked files is the reason why its running into an error?

[11:55:15.0153] <Bukola>
 * https://paste.mozilla.org/vEZ7WK9z
is it possible the untracked files is the reason why its running into an error?

[11:58:19.0120] <iain>
No. Untracked files are only ever a warning. This looks like a network problem of some sort.

[11:58:29.0568] <iain>
 * Bukola: No, untracked files are only ever a warning. This looks like a network problem of some sort.

[11:59:56.0848] <Bukola>
ok, i will keep trying the submit

[12:07:45.0164] <Bukola>
> <@iain:mozilla.org> Bukola: No, untracked files are only ever a warning. This looks like a network problem of some sort.

it was actually a network problem, i got it submitted.
thanks iain and  arai 

[12:53:34.0011] <iain>
 * `<start>` and `<end>` here can be revision ids (like 14d69fdffa45) or special names (like `.`, the current checked out revision). `moz-phab submit --help` can tell you more about submitting patches. `hg help revisions` can tell you more about specifying revisions.

[12:53:43.0111] <iain>
 * In this case, I think `moz-phab submit .` will do what you want

[12:53:51.0238] <iain>
 * You could also do `hg rebase -s . -d central` first, to rebase your current patch on central instead of on your previous patch, and then `moz-phab submit` would work

[13:02:40.0469] <mehaboob_shariff>
In BaselineIC.cpp there is already a member isFirstStub but I have added isFirstStub_ in the baseclass. Is this a different member?

[13:03:06.0058] <mehaboob_shariff>
or there is a naming error

[13:06:57.0782] <iain>
mehaboob_shariff: CallIRGenerator already had `isFirstStub_`. The goal of the bug is to do the same thing for all IRGenerators. So you will probably have to add similar code everywhere in `BaselineIC.cpp` where we create an IRGenerator.

[13:08:26.0370] <mehaboob_shariff>
I understood but im asking about the naming

[13:09:15.0232] <mehaboob_shariff>
> <@mehaboob_shariff:mozilla.org> sent an image.

In this part it is declared without underscope

[13:09:22.0823] <mehaboob_shariff>
isFirstStub

[13:09:47.0390] <mehaboob_shariff>
where as I added isFirstStub_ in the rest of the subclass

[13:09:52.0078] <iain>
`bool isFirstStub` in your screenshot is a local variable in `DoCallFallback`. It's just a temporary variable that we use to hold the value before passing it into the constructor on the next line.

[13:10:09.0303] <mehaboob_shariff>
ok ok 😅

[13:10:11.0720] <mehaboob_shariff>
thank you

[13:12:47.0807] <iain>
In general, SM code uses trailing underscores (`isFirstStub_`, etc) to indicate that something is a member variable

[13:13:55.0055] <mehaboob_shariff>
ooh...I see

[13:15:21.0125] <iain>
Once you're used to it, it helps to tell at a glance whether a variable is defined in the current scope or elsewhere

[13:18:33.0793] <mehaboob_shariff>
And now when I build im getting clobber file updated so should run mach clobber or ignore it with the given command

[13:21:16.0553] <iain>
Just go ahead and run `mach clobber`

[13:21:46.0906] <mehaboob_shariff>
okay

[13:23:17.0974] <iain>
You're probably fine either way, but SpiderMonkey is small (relative to Firefox) and often makes changes in header files that are included everywhere, so the time you would save from not doing a full clobber is not worth it


2021-04-14
[18:11:45.0773] <18f>
> <@iain:mozilla.org> Each instruction uses the most recent resume point. If we put a new instruction between an effectful instruction and a resume point, it would use the previous resume point, and we could repeat the effect after bailing out

uh, I understand this. thanks!

[03:06:57.0121] <mehaboob_shariff>
I have changed the files to the original ones by using hg revert <path to file> but when I mach build it is showing errors related to the previous changes

[03:14:25.0610] <arai>
which file, and what's the change, and what's the error?

[03:15:19.0282] <mehaboob_shariff>
the CacheIR.h , CacheIR.cpp

[03:15:21.0479] <mehaboob_shariff>
files

[03:15:50.0382] <mehaboob_shariff>
made some changes to use the isFirstStub member

[03:18:29.0727] <arai>
and what's the current content?

[03:18:34.0710] <arai>
 * and what's the current file content?

[03:19:04.0215] <arai>
how is it different from the error?

[03:19:39.0128] <mehaboob_shariff>
after reverting the files there is original content

[03:20:00.0946] <mehaboob_shariff>
it is suppose to build normally without errors

[03:20:47.0885] <arai>
do you have any other change to any file, compared to clean mozilla-central tip ?

[03:21:50.0923] <mehaboob_shariff>
I made a change in other file for Js_is atom bug

[03:22:01.0923] <mehaboob_shariff>
but it was built successfully earlier

[03:22:40.0966] <arai>
how do you confirm that those files are reverted?

[03:23:28.0051] <mehaboob_shariff>
I checked it

[03:23:55.0748] <mehaboob_shariff>
and compared it with the files in the bug page

[03:24:53.0787] <mehaboob_shariff>
by bug page I mean that the links provides to the code in bugzilla page

[03:24:54.0158] <arai>
what's the actual error you've hit?  the above screenshot doesn't contain that part

[03:25:54.0761] <mehaboob_shariff>
errors related to the subclass of IRgenerator

[03:26:39.0503] <mehaboob_shariff>
I got these errors when I modified and built but even after reverting the files back it is showing the same error

[03:28:38.0917] <arai>
what's the current signature of the file, in CacheIR ?

[03:28:41.0799] <arai>
 * what's the current signature of the file, in CacheIR.h ?

[03:28:57.0128] <arai>
 * what's the current signature of the function, in CacheIR.h ?

[03:29:10.0724] <mehaboob_shariff>
how do I check that

[03:30:00.0963] <arai>
look for `SetPropIRGenerator(` in the file

[03:30:48.0666] <arai>
what's written there?

[03:31:39.0490] <mehaboob_shariff>
the subclass of irgenerator

[03:31:47.0646] <mehaboob_shariff>
its members

[03:32:22.0865] <mehaboob_shariff>
just a min

[03:32:34.0532] <mehaboob_shariff>
there are still some parts unchanged

[03:34:05.0307] <mehaboob_shariff>
but I reverted the files 🤔

[03:34:38.0246] <arai>
what command did you use?

[03:34:48.0856] <mehaboob_shariff>
hg revert <path to file>

[03:34:58.0421] <arai>
what does `hg parent` say?

[03:35:07.0629] <mehaboob_shariff>
im getting this error

[03:35:09.0276] <mehaboob_shariff>
now

[03:35:34.0240] <arai>
you shouldn't put the leading `/`

[03:36:21.0090] <arai>
also, the command reverts the file to the "current" changeset's content

[03:36:25.0103] <mehaboob_shariff>
$ hg revert js/src/jit/CacheIR.h
no changes needed to js/src/jit/CacheIR.h

[03:37:18.0351] <mehaboob_shariff>
> <@arai:mozilla.org> also, the command reverts the file to the "current" changeset's content

ohh

[03:37:50.0812] <arai>
if you want to revert it to some other changeset, you need to specify it by `-r REV` parameter. like `hg revert -r .^ PATH_TO_FILE`

[03:37:52.0431] <mehaboob_shariff>
then is there any other way to change it back to its original 

[03:38:12.0255] <arai>
`.^` means the parent of current changeset

[03:38:13.0575] <mehaboob_shariff>
> <@arai:mozilla.org> if you want to revert it to some other changeset, you need to specify it by `-r REV` parameter. like `hg revert -r .^ PATH_TO_FILE`

ok

[03:38:34.0685] <arai>
if you've modified the file only in the current changeset, the parent of current changeset should contain the original content

[03:39:40.0629] <mehaboob_shariff>
> <@arai:mozilla.org> if you've modified the file only in the current changeset, the parent of current changeset should contain the original content

got it

[03:40:12.0487] <nbp>
mehaboob_shariff: Meta question … Why not using triple-backticks to paste text content instead of taking screenshots?

[03:43:10.0640] <mehaboob_shariff>
I dont know about this feaute🤔 can you tell me about it

[03:43:20.0180] <mehaboob_shariff>
feauture*

[03:46:26.0077] <nbp>
```
` ` `<new line>
Your verbatim text
even on multiple lines
` ` `
```
This is coming from Markdown. You can also use it inline.

[03:49:40.0175] <mehaboob_shariff>
😅

[03:51:03.0792] <mehaboob_shariff>
thank you arai  everything is back to normal

[03:51:48.0153] <arai>
for more information about code block  https://docs.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks

[03:52:32.0551] <mehaboob_shariff>
oh so you saw the deleted message 😅

[03:53:06.0547] <mehaboob_shariff>
I was trying it out

[03:53:57.0284] <nbp>
backticks are under the escape key on american keyboards

[03:54:30.0965] <nbp>
` <-- this? 🤞

[03:55:04.0651] <nbp>
and without spaces between them

[03:56:46.0930] <mehaboob_shariff>
` ` ` hello ` ` `

[03:57:04.0227] <nbp>
if you add 2, the text in between appear as `code`.

[03:57:11.0334] <mehaboob_shariff>
got it 😊

[07:31:02.0065] <evilpie>
jonco: I am probably just missing some C++ knowledge again, but why doesn't this work: https://paste.mozilla.org/Wk84yuNa

[07:37:45.0615] <jonco>
evilpie: WrappedPtrOperations<mozilla::Maybe<>>'s operator-> returns a const T*

[07:38:31.0009] <jonco>
no, MutableWrapperPtrOperations exists and returns T* for this

[07:38:37.0872] <evilpie>
yeah

[07:38:48.0628] <evilpie>
I don't understand why * works, but -> doesn't

[07:40:11.0744] <jonco>
oh, MutableHandle overrides operator-> with one that returns const T& by using DECLARE_POINTER_CONSTREF_OPS

[07:43:10.0550] <jonco>
evilpie: I think it would be OK to add an overload returning a non-const pointer

[08:43:27.0215] <jon4t4n>
mgaudet: Did you see the comment on patch D106902? That I broke the patch when I rebased it. How do I resolve this now? Submit an update on the closed patch?

[08:45:43.0985] <mgaudet>
jon4t4n: Whoops :) It should have been re-opened when it got backed out

[08:45:56.0583] <mgaudet>
jon4t4n: so it should be updatable now

[08:46:36.0631] <mgaudet>
Sorry about that! 

[09:13:00.0842] <evilpie>
jonco: is it problematic that PropertyDescriptor::object returns a Handle? i.e because PropertyDescriptor couldn't be unrooted

[09:27:56.0811] <jonco>
evilpie: yeah, this isn't great

[09:28:09.0146] <jonco>
ideally it would just return JSObject* and callers would have to root it

[09:29:57.0262] <jonco>
I wonder how hard that would be to change

[09:38:09.0078] <evilpie>
jonco: before we change this we should come up with some way of returning a handle  when using `Handle<Maybe<PropertyDescriptor>>`

[09:41:54.0265] <evilpie>
ah I guess this is the same problem again

[09:43:31.0519] <jonco>
maybe it's OK to allow you to get a handle from Handle<Maybe<>> if the maybe isSome

[09:44:18.0332] <jonco>
I just worry about adding footguns that will make it easy to create rooting hazards

[09:44:56.0633] <evilpie>
yeah me too. Let me think

[09:46:56.0735] <evilpie>
I think making them functions return unrooted values would still be feasible. We don't actually have that many uses yet

[09:47:40.0638] <evilpie>
It is however extremely annoying how unergonomic this is starting to get.

[10:18:40.0433] <yulia>
I am feeling very sick today, and a bit yesterday -- if you are getting weird prs from me, this is why

[10:18:47.0666] <yulia>
 * I am feeling sick today, and a bit yesterday -- if you are getting weird prs from me, this is why

[10:19:06.0775] <yulia>
i will hopefully be in better shape tomorrow!

[10:19:14.0333] <nbp>
Do bugs carry Covid viruses?

[10:19:19.0967] <yulia>
(and i probably shouldn't have worked today, don't know if i did any good)

[10:19:34.0516] <yulia>
nah, but they will make a bad headache worse, i can tell you that

[10:19:59.0319] <yulia>
so, if its from me, and it is weird -- tell me that, ill take a look tomorrow

[10:20:06.0101] <mgaudet>
feel better! 

[10:20:58.0762] <iain>
yulia: Feel better soon! Is there anything that the rest of us can do to prepare for the TC39 meeting tomorrow to take things off your plate?

[10:21:12.0380] <yulia>
if you all can review the agenda --that would be great

[10:21:26.0965] <yulia>
I will still make the summary for tomorrow but I just couldn't focus enough to do it today

[10:21:58.0552] <yulia>
the main one to look at is shared array buffer, as it goes to stage 3

[10:22:06.0480] <yulia>
and that will be a big task

[10:22:21.0580] <yulia>
 * the main one to look at is resizable/growableshared array buffer, as it goes to stage 3

[10:23:02.0481] <yulia>
for the most part it is pretty chill though: https://github.com/tc39/agendas/blob/master/2021/04.md

[10:23:11.0521] <yulia>
we have a few nice stage 0s to think about

[10:36:32.0769] <smaug>
evilpie: so Handle and Rooted work with Maybe?

[10:45:12.0510] <nbp>
smaug: yes. Bug 1631114

[10:45:14.0358] <botzilla>
https://bugzil.la/1631114 — RESOLVED (jonco) — Make Handle<Maybe<>> more convenient

[10:46:10.0067] <smaug>
ok, that explains one part of this patch I was looking

[10:46:19.0206] <smaug>
(the other parts are still unclear 🙂 )

[14:09:33.0844] <evilpie>
smaug: thanks!

[14:47:06.0871] <mgaudet>
confession: `mach try fuzzy <path to test>` is super cool and I am happy that I know about it (hence me sharing) 

[14:47:09.0273] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire


2021-04-15
[18:28:11.0422] <janey>
Hey guys! Is anyone here who could give a hand in building spidermonkey? I have compiled Desktop Firefox but than it all sort of stops 

[18:35:30.0624] <janey>
when I run mach jit test it gives me this

[18:36:34.0291] <janey>
I think I have an error with mozconfig file but cannot figure out how to even set it up

[18:45:14.0515] <arai>
janey: have you created configuration file (mozconfig, or file pointed by MOZCONFIG environment variable) ?  

[18:45:40.0710] <arai>
if you haven't created any, `./mach build` builds only Firefox

[18:45:54.0869] <arai>
that doesn't contain SpiderMonkey JS shell.  and jit-test uses the JS shell

[18:46:03.0912] <arai>
https://firefox-source-docs.mozilla.org/js/build.html here's the documentation for building SpiderMonkey

[04:26:55.0785] <gma-amg>
Hi guys, I'm Garima, an Outreachy participant, and I'm just setting up SpiderMonkey

[04:27:22.0496] <gma-amg>
While running ./mach jit-test I get this error

[04:27:28.0647] <gma-amg>
Have I done something wrong?

[04:28:00.0587] <arai>
have you created mozconfig file and run `./mach build` ?

[04:28:07.0080] <arai>
https://firefox-source-docs.mozilla.org/js/build.html

[04:28:11.0915] <gma-amg>
Yes I have

[04:28:17.0643] <arai>
the error message says JS shell isn't found

[04:28:41.0919] <arai>
which step did you follow in the document?

[04:29:03.0266] <gma-amg>
i did this

[04:29:24.0801] <gma-amg>
so i'm assuming i had to create a folder named mozconfigs, and inside that debug?

[04:29:31.0526] <gma-amg>
and in that i have the mozconfig file?

[04:29:44.0887] <arai>
yes

[04:29:48.0538] <arai>
have you run `export ...` just before `./mach build`, in the same terminal?

[04:29:55.0948] <gma-amg>
and then the code in the mozconfig file is the optimized build one

[04:30:01.0453] <gma-amg>
> <@arai:mozilla.org> have you run `export ...` just before `./mach build`, in the same terminal?

no

[04:30:21.0401] <gma-amg>
I closed the terminal and then did ./mach build

[04:30:58.0253] <arai>
`export` command affects only the current session, and if you close the terminal, you need to run it again

[04:31:08.0301] <gma-amg>
Ohhh alright

[04:31:21.0519] <gma-amg>
So I'll run the export command

[04:31:25.0191] <gma-amg>
and do mach build

[04:31:29.0023] <arai>
if you missed that step, `./mach build` will build with default configuration.  that builds browser (Nightly), not JS shell

[04:31:37.0916] <arai>
yes

[04:31:42.0617] <gma-amg>
Alright got, it, thank you so much!

[04:32:14.0827] <arai>
also, you need MOZCONFIG exported also for the terminal that you run `./mach jit-test`

[04:32:24.0461] <arai>
so, keep using single terminal

[04:35:39.0257] <gma-amg>
I just got this error trying to run ./mach build

[04:36:39.0049] <arai>
it says the file you've specified by MOZCONFIG isn't found

[04:36:51.0615] <arai>
can you check the path?

[04:37:37.0118] <gma-amg>
um the path is correct

[04:37:53.0182] <arai>
what do you mean by "correct" ?

[04:38:35.0604] <gma-amg>
The path where the file is is c:/Users/Garima/mozconfigs/debug

[04:38:46.0631] <arai>
does it exist?

[04:39:22.0082] <gma-amg>
it's right there

[04:39:24.0642] <gma-amg>
:/

[04:39:57.0840] <arai>
`debug` shouldn't be directory

[04:40:10.0379] <gma-amg>
ohhh

[04:40:12.0161] <arai>
`debug` is the file that contains the configuration

[04:40:20.0223] <gma-amg>
That's the doubt I had

[04:40:27.0001] <gma-amg>
So the name of the file is debug?

[04:40:33.0152] <gma-amg>
I'm a little confused

[04:40:34.0314] <arai>
yes

[04:41:01.0514] <gma-amg>
Okay, so I'll just rename the file then?

[04:41:16.0848] <arai>
rename, and move

[04:41:19.0821] <arai>
the file pointed by `MOZCONFIG` environment variable can have any filename

[04:41:32.0031] <gma-amg>
Okay cool

[04:41:42.0812] <arai>
so, in the document, it uses `debug` as filename

[05:14:03.0289] <gma-amg>
cool, got it, it worked now tysm :D

[05:14:23.0654] <gma-amg>
also btw is this normal?

[05:15:24.0162] <lth>
i just ran into some code that cannot possibly work if the nopFill_ testing functionality in the assembler buffer is used.  it appears not to be used, ever.  would it be ok to rip it out to ensure that this doesn't become a problem?  @nbp @decoder @jandem

[05:15:51.0232] <evilpie>
gma-amg: yes look good. If you don't have enough memory "out of memory" errors can happen

[05:16:08.0068] <evilpie>
We really should fix this, seems like a lot of contributors on Windows keep running into this.

[05:16:21.0455] <nbp>
lth: the nopFill should be used for OSIPoints.

[05:16:59.0332] <lth>
orly?

[05:17:38.0017] <lth>
it can only be set from the constructor, and no constructor calls for the assembler appear to pass a nonzero value

[05:17:43.0023] <nbp>
https://searchfox.org/mozilla-central/source/js/src/jit/shared/CodeGenerator-shared.cpp#842 (or it was supposed to be a nop-fill)

[05:18:45.0728] <lth>
nbp: we may be talking about different things, this is functionality that inserts a set number of nops between *every* instruction emitted

[05:20:25.0579] <nbp>
I recall this is disabled when we request a specific non-splittable chunk of instructions.

[05:21:41.0332] <lth>
from my reading of the code it is not disabled well enough, eg, AutoForbidPoolsAndNops may decide to emit some nops before the protected regions just for grins

[05:22:15.0817] <nbp>
I do not recall seeing anyone testing with it, and maintaining it has always been a burden.

[05:22:31.0874] <nbp>
I would be ok, to get rid of it.

[05:22:51.0101] <jandem>
evilpie: hm I did [mark](https://searchfox.org/mozilla-central/source/js/src/jit-test/tests/large-arraybuffers/directives.txt)ethem as allow-oom a while ago 

[05:23:05.0685] <jandem>
 * evilpie: hm I did [mark](https://searchfox.org/mozilla-central/source/js/src/jit-test/tests/large-arraybuffers/directives.txt) them as allow-oom a while ago

[05:23:27.0551] <lth>
nbp: ok, i'll give other people a chance to weigh in, but i may put up a patch for this

[05:23:43.0723] <jandem>
oh it's probably an older revision, it still uses the `--large-arraybuffers` flag too

[06:18:17.0119] <nbp>
lth: Sounds familliar: https://twitter.com/tweagio/status/1382634765027786757/photo/1

[07:49:54.0697] <lth>
nbp++

[08:03:57.0345] <tcampbell>
```toml
# Some CacheIROps as TOML

[op.LoadFrameArgumentResult]
shared = false
transpile = true
cost_estimate = 1
args = [
        ["index", "Int32Id"],
]

[op.FrameIsConstructingResult]
shared = false
transpile = true
cost_estimate = 1

[op.LoadEnvironmentFixedSlotResult]
shared = false
transpile = true
cost_estimate = 1
args = [
        ["obj", "ObjId"],
        ["offset", "RawInt32Field"],
]
```

[08:04:17.0074] <tcampbell>
(I don't know where feeling lie with TOML)

[08:06:14.0356] <tcampbell>
 * (I don't know where feelings lie with TOML)

[10:38:07.0055] <daneshwarik>
Hello all! I was building SpiderMonkey on Windows 10 but was stuck at last step. While running ./mach build,  I was asked about creating a virtual environment.  What is the solution to this. The message while building is as below: ?

[10:38:17.0340] <daneshwarik>
 * Hello all! I was building SpiderMonkey on Windows 10 but was stuck at last step. While running ./mach build,  I was asked about creating a virtual environment.  What is the solution to this. The message while building is as above: ?

[10:38:34.0009] <daneshwarik>
 * Hello all! I was building SpiderMonkey on Windows 10 but was stuck at last step. While running ./mach build,  I was asked about creating a virtual environment.  What is the solution to this? The message while building is as above: 

[10:42:18.0368] <iain>
daneshwarik: Your system doesn't have python installed. Try running `mach bootstrap` first.

[10:43:14.0290] <daneshwarik>
I cross checked about python installation, running python --version and it shows python 3.7.1 on the system

[10:44:52.0370] <iain>
Okay, try `export MACH_USE_SYSTEM_PYTHON=1` and then build again?

[10:45:38.0607] <iain>
 * daneshwarik: Okay, try `export MACH_USE_SYSTEM_PYTHON=1` and then build again?

[10:46:07.0130] <iain>
(I would still recommend running `mach bootstrap`, if only to make sure that your mercurial configuration is set up correctly)

[10:49:33.0735] <daneshwarik>
I executed mach bootstrap and this error occured

[10:50:04.0076] <daneshwarik>
Also I wanted to confirm that debug file is a normal or a text file ?

[10:53:59.0656] <iain>
daneshwarik: If you look under the line "The details of the failure are as follows", it says that your mozconfig doesn't exist. 

[10:54:50.0143] <iain>
Can you verify that there's a file named `debug` in the specified directory?

[10:55:28.0335] <iain>
It should be a regular text file.

[10:56:30.0611] <tcampbell>
I believe the `C:` in `MOZCONFIG` variable is the problem here

[10:56:52.0053] <tcampbell>
change that to `/c/` or use `export MOZCONFIG=$HOME/mozconfigs/debug`

[10:57:04.0268] <iain>
Oh, good catch

[10:58:23.0173] <tcampbell>
(although using C: works for me locally.. I hope this isn't an issue with spaces in paths..)

[11:00:39.0692] <daneshwarik>
> Can you verify that there's a file named `debug` in the specified directory?
Yes the file is created.


[11:00:50.0030] <tcampbell>
oh, that has a ".txt" extension

[11:01:05.0733] <tcampbell>
either remove it, or change your MOZCONFIG variable to have .txt also

[11:01:09.0323] <tcampbell>
(either is fine)

[11:01:47.0907] <daneshwarik>
> I believe the `C:` in `MOZCONFIG` variable is the problem here

Earlier I had executed this command -  export MOZCONFIG="$HOME/mozconfigs/debug" where $HOME = /c/Users/DANESHWARI KANKANWAD

[11:02:16.0807] <tcampbell>
Then I think the only problem is the .txt

[11:02:22.0755] <daneshwarik>
I'll once try giving path as "/c/Users/DANESHWARI KANKANWAD/mozconfigs/debug" for MOZCONFIG

[11:02:59.0910] <tcampbell>
`export MOZCONFIG="$HOME/mozconfigs/debug.txt` should work

[11:16:47.0731] <daneshwarik>
I tried again from starting from export and then ran mach bootstrap for the message. So, I have to choose a build type.

[11:16:55.0564] <tcampbell>
2.

[11:17:01.0400] <tcampbell>
"Firefox for Desktop"

[11:17:06.0125] <daneshwarik>
> I tried again from starting from export and then ran mach bootstrap for the message. So, I have to choose a build type.

Is it required to choose Artifact build type, since I followed cloning using mercurial bundles documentation where it said that we can build directly.

[11:17:19.0940] <tcampbell>
you must _not_ use artifact mode for spidermonkey

[11:18:20.0787] <denispal>
Is this being hosted elsewhere now?   https://developers.mozilla.org/docs/SpiderMonkey/Running_Automated_JavaScript_Tests

[11:19:01.0478] <tcampbell>
denispal: nope. We'll be rewriting that stuff in two weeks

[11:19:23.0708] <tcampbell>
 * denispal: nope. We'll be rewriting that stuff in two weeks. (I didn't realize it was already deleted though..)

[11:20:27.0126] <daneshwarik>
> "Firefox for Desktop"

So should I continue with the same directory?

[11:20:35.0468] <tcampbell>
denispal: actually, I still see it here: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Running_Automated_JavaScript_Tests

[11:20:44.0544] <daneshwarik>
> you must _not_ use artifact mode for spidermonkey

[11:20:56.0142] <tcampbell>
daneshwarik: yep, the default is fine

[11:21:31.0441] <tcampbell>
 * daneshwarik: yep, the default is fine. That will download the special compiler tools (with correct version) to that directory. The build process knows how to find it

[11:21:43.0591] <denispal>
tcampbell: great, thanks

[11:22:11.0921] <tcampbell>
denispal: where did you find the broken link? Someone else told me the same errro

[11:22:26.0718] <denispal>
first hit on google

[11:22:31.0023] <tcampbell>
derp

[11:23:19.0363] <daneshwarik>
> daneshwarik: yep, the default is fine. That will download the special compiler tools (with correct version) to that directory. The build process knows how to find it

All right. Done! 👍️

[11:23:44.0605] <tcampbell>
great. Try to build again and hopefully it works

[11:23:56.0564] <gma-amg>
Hi guysm I've been working on this bug

[11:24:17.0647] <gma-amg>
And before submitting a patch I wanted to run the tests to check if everything is alright

[11:24:32.0035] <gma-amg>
So I tried running ./mach test js/src/vm

[11:24:32.0094] <tcampbell>
(Also, I've been enjoying the new "Windows Terminal" app which is a bit prettier https://docs.microsoft.com/en-us/windows/terminal/get-started )

[11:24:51.0137] <tcampbell>
gma-amg: you'll want `./mach jit-test`

[11:25:11.0825] <tcampbell>
(spidermonkey doesn't currently use the `./mach test` magic, unfortunately)

[11:25:15.0859] <gma-amg>
> <@tcampbell:mozilla.org> gma-amg: you'll want `./mach jit-test`

So just running this should suffice?

[11:25:21.0893] <gma-amg>
> <@tcampbell:mozilla.org> (spidermonkey doesn't currently use the `./mach test` magic, unfortunately)

Ohhh alright I see

[11:26:07.0639] <tcampbell>
gma-amg: I recommend building with `--enable-debug` AND `--enable-optimize` to get good coverage but have it be faster

[11:26:34.0199] <gma-amg>
Yeah those are already enabled for me

[11:26:50.0683] <gma-amg>
However it still takes quite some time

[11:26:58.0377] <gma-amg>
Nevertheless I'll try building and check if it's succesful!

[11:27:01.0284] <gma-amg>
Thank you :)

[11:27:43.0147] <tcampbell>
great!

[11:28:29.0393] <gma-amg>
Oh no, I'd closed my terminal window after making the changes and committing

[11:28:39.0634] <gma-amg>
So should I set the environment variable again?

[11:28:45.0933] <gma-amg>
And then try running the test?

[11:28:50.0214] <tcampbell>
yep

[11:29:04.0154] <gma-amg>
A'ight cool

[11:29:47.0948] <tcampbell>
(the stupid trick I do is make a `mozconfig` file in your mozilla-unified that just has `YOU_FORGOT_TO_SET_MOZCONIG`. Then it throws an error to remind me..)

[11:33:53.0386] <tcampbell>
maybe I should ask build if we can remove the default build and always require a mozconfig or environment variable..


2021-04-16
[21:12:38.0797] <janey>
Hey guys - when we talking about "checkout commit" to merge conflict, do we do:
moz-phab patch <patch-number>
hg pull --rebase central
(and here somehow it doesn't show me any merge conflict)
hg commit --amend
moz-phab submit
?

[21:48:03.0006] <janey>
 * Hey guys, could anyone help me with hg rebase or hg pull? thanks

[21:55:05.0205] <arai>
what's the problem?

[22:07:17.0474] <janey>
😰 I pushed the patch and it failed to land due to difference between mine code and original I assume.. So I need to to hg rebase, I been told to:
``` to check out this commit, then do hg pull --rebase central; then you'll have to fix a merge conflict, then once that's done, you'll need to re-submit.
```
So I tried to do so, however my code still different from original version. 
I tried hg pull --rebase, and it added some changes but not to the file I am changing

[22:07:30.0591] <janey>
 * 😰 I pushed the patch and it failed to land due to difference between mine code and original I assume.. So I need to to hg rebase, I been told to:
 to check out this commit, then do hg pull --rebase central; then you'll have to fix a merge conflict, then once that's done, you'll need to re-submit.

So I tried to do so, however my code still different from original version.
I tried hg pull --rebase, and it added some changes but not to the file I am changing

[22:11:29.0700] <janey>
Like in original code its extra one line which is missing in mine. However when I run hg pull --rebase central , it does not give me any merge conflicts

[22:11:46.0374] <janey>
 * Like in original code its extra one line which is missing in mine. However when I run hg pull --rebase central , it does not give me any merge conflicts. As well, it doesn't add this line up

[22:23:33.0592] <arai>
which bug, and which file?

[22:24:08.0552] <arai>
I wonder if the change that conflicts with your patch isn't yet merged to central

[22:24:18.0651] <janey>
https://phabricator.services.mozilla.com/D112150
file - js/src/jit/VMFunctions.cpp


[22:24:46.0780] <janey>
so when you in Object finder look for JSID_TO_ATOM it gives you that:
https://searchfox.org/mozilla-central/search?q=JSID_TO_ATOM&path=js%2Fsrc%2Fjit%2F&case=false&regexp=false

[22:25:36.0451] <arai>
patches are first landed to autoland repository, and then merged to central periodically.  so, the conflict happens when landing to autoland, and it can contain extra changes than central

[22:26:06.0188] <janey>
but in mine js/src/jit/VMFunctions.cpp - JSID_TO_ATOM is on line 1794

[22:26:25.0597] <janey>
and in Object.finder its line 1795

[22:26:44.0324] <janey>
so when I tried to pull nothing was updated.

[22:27:15.0519] <janey>
> <@arai:mozilla.org> patches are first landed to autoland repository, and then merged to central periodically.  so, the conflict happens when landing to autoland, and it can contain extra changes than central

okay that makes sense cause I thought I was going mental

[22:27:22.0899] <arai>
okay, then sounds like your patch conflicts with patch that's not yet merged

[22:27:48.0973] <arai>
if you're using mozilla-unified, you can rebase onto autoland there

[22:27:50.0431] <janey>
what should I do then? wait till its merged?

[22:28:06.0039] <janey>
yeah I am using Mozilla-unified

[22:28:07.0926] <arai>
use autoland instead of central

[22:28:24.0647] <arai>
as rebase target

[22:28:35.0063] <janey>
hg pull --rebase autoland

[22:28:39.0247] <janey>
okay will try now

[22:29:29.0508] <janey>
yeah gives me same - no changes found

[22:30:21.0617] <janey>
Is it an option to do smth like git --hard reset? so just delete all my changes and re-write them again?

[22:31:04.0354] <arai>
maybe pull for autoland as well?

[22:32:11.0498] <janey>
gives same no changes found.. 

[22:34:26.0216] <janey>
thats mine line 
```1793 - if (MOZ_LIKELY(JSID_IS_ATOM(id))) {```
and thats one in search fox 
```1794   if (MOZ_LIKELY(id.isAtom())) {```

[22:35:16.0093] <janey>
and that change has been made yesterday - if I move course on the line

[22:36:55.0525] <arai>
I'll check details within 20min, once I get home

[22:37:02.0448] <janey>
oh thanks heaps

[22:37:26.0265] <janey>
I basically can copy paste whole file but then in hg commit all file would be green which I don't want

[22:53:44.0304] <arai>
janey: what's the parent changeset's hash of your rebased changeset?

[22:54:25.0693] <arai>
also, after rebase, what's the whole content of `MaybeTypedArrayIndexString` function?

[22:56:15.0021] <arai>
also, it's possible that rebase operation automatically resolves minor conflict

[23:00:21.0970] <janey>
> <@arai:mozilla.org> janey: what's the parent changeset's hash of your rebased changeset?

How do I check it? hg head? 

[23:00:49.0652] <arai>
hg log --follow -l2

[23:01:08.0833] <arai>
that will show recent 2 changesets

[23:01:08.0965] <janey>
```static bool MaybeTypedArrayIndexString(jsid id) {
  MOZ_ASSERT(JSID_IS_ATOM(id) || JSID_IS_SYMBOL(id));

  if (MOZ_LIKELY(JSID_IS_ATOM(id))) {
    JSAtom* str = id.toAtom();
    if (str->length() > 0) {
      // Only check the first character because we want this function to be
      // fast.
      return CanStartTypedArrayIndex(str->latin1OrTwoByteChar(0));
    }
  }
  return false;
}
```

[23:01:26.0665] <arai>
from current changeset

[23:02:09.0666] <janey>
> <@arai:mozilla.org> that will show recent 2 changesets

Yeah shows only mine

[23:02:18.0672] <arai>
oh

[23:02:20.0143] <janey>
feels like it hasn't been pulled or rebased

[23:02:32.0526] <arai>
you have multiple changesets?

[23:02:50.0029] <arai>
if so, increase the numbers

[23:02:54.0249] <arai>
from 2

[23:03:48.0744] <janey>
I did wrote at the start moz-phab and number of that issue, because I have been working on other after that .. 

[23:04:12.0619] <janey>
is that the issue? can I just stack it altogether like hg --clean or smth?

[23:05:18.0805] <arai>
can you pastebin the output of log, with 10?

[23:06:26.0887] <arai>
can you use pastebin?

[23:07:02.0833] <arai>
https://paste.mozilla.org

[23:07:21.0668] <arai>
screenshot is hard to read and copy

[23:09:42.0083] <janey>
https://paste.mozilla.org/j8LfBAV7

[23:10:58.0871] <arai>
okay, so, your oatches are based on changeset from April 10

[23:11:08.0660] <arai>
see 4th changeset there

[23:11:29.0031] <janey>
yep

[23:11:47.0824] <arai>
what's the exact input and output for rebase command?

[23:12:29.0591] <janey>
```
$ hg pull --rebase
pulling from https://hg.mozilla.org/mozilla-unified
searching for changes
no changes found
```

[23:13:17.0127] <janey>
```$ hg pull --rebase central
pulling from central
searching for changes
no changes found
```


[23:14:07.0740] <janey>
```
$ hg pull --rebase autoland
pulling from autoland
searching for changes
no changes found
```

[23:16:15.0111] <arai>
can you pastebin the output of `hg heads` ?

[23:17:29.0011] <janey>
https://paste.mozilla.org/UaCRGQZv

[23:18:00.0892] <arai>
okay, so your local repository already contains new changes for autoland

[23:18:17.0597] <arai>
then, I think you just need to directly perform rebase, instead of using --rebase option

[23:18:34.0782] <arai>
(I don't know how `pull --rebase` works

[23:18:35.0463] <arai>
https://www.mercurial-scm.org/wiki/RebaseExtension

[23:18:53.0193] <arai>
with `hg rebase` command, you can specify source and destination of the rebase

[23:18:57.0061] <janey>
> <@arai:mozilla.org> then, I think you just need to directly perform rebase, instead of using --rebase option

hg rebase 

[23:18:58.0832] <janey>
ohhh

[23:19:13.0892] <arai>
so, specify the first changeset of yours as source, and autoland as destination

[23:19:24.0105] <arai>
that way it should perform the expected rebase

[23:19:33.0480] <arai>
and it can hit the "expected" conflict

[23:23:53.0518] <janey>
> <@arai:mozilla.org> and it can hit the "expected" conflict

hg rebase  s 643268:a6c3678b2497 d 644264:a00cdb29df1f

[23:24:16.0367] <arai>
`-s` and `-d`

[23:24:26.0504] <arai>
also, you don't need to specify both the sequential number and hash

[23:24:42.0529] <arai>
usually, hash is better

[23:24:55.0005] <arai>
especially when you're modifying the history

[23:25:21.0175] <janey>
> <@arai:mozilla.org> usually, hash is better

```hg rebase -s a6c3678b2497 -d a00cdb29df1f```


[23:25:26.0266] <janey>
> <@arai:mozilla.org> usually, hash is better

 * `hg rebase -s a6c3678b2497 -d a00cdb29df1f`
?

[23:25:43.0239] <arai>
oh, wait

[23:25:50.0864] <arai>
which patch do you want to rebase?

[23:26:00.0837] <arai>
with the command, it rebases only bug 1705198 patch

[23:26:02.0185] <botzilla>
https://bugzil.la/1705198 — ASSIGNED (jenyabrentnall) — Remove uses of JSID_TO_ATOM in js/src/jit directory

[23:26:09.0761] <arai>
you don't need other 2?

[23:26:30.0663] <arai>
if you don't, then the command is correct

[23:27:04.0043] <janey>
yeah I am rebasing one patch - with 2 files changed

[23:27:14.0907] <janey>
the other patch already landed and closed

[23:27:21.0294] <arai>
then that's fine

[23:28:08.0922] <janey>
just to be sure. - how could I rebase whole directory? or you don't do it?
I though that hg pull would work like git pull origin 
when it pulls all changes to you files

[23:28:29.0996] <arai>
directory?

[23:28:46.0676] <janey>
I mean update all mozilla-unified

[23:29:09.0700] <arai>
hg pull is almost same as git fetch

[23:29:09.0907] <janey>
so my code same as one in SourceCode

[23:29:44.0030] <arai>
I don't use git pull, so I don't know

[23:31:45.0860] <arai>
so, on mercurial, "hg pull" to download history into .hg, and use "hg update ..." to update working tree to downloaded tip

[23:32:08.0496] <arai>
or use "hg rebase ..." for rebase onto it

[23:33:06.0321] <janey>
oh okay..
So in this crazy thing I am choosing everything from left ( Functions~other) to my right which is (Functions~local)

[23:36:48.0160] <daneshwarik>
> daneshwarik: yep, the default is fine. That will download the special compiler tools (with correct version) to that directory. The build process knows how to find it
I completed all the steps, build type= build mozilla on desktop, and then again executed export command and then ./mach build, but again faced this error. Please help me regarding this. 

[23:37:10.0430] <daneshwarik>
 * > daneshwarik: yep, the default is fine. That will download the special compiler tools (with correct version) to that directory. The build process knows how to find it
I completed all the steps, build type= build mozilla on desktop, and then again executed export command and then ./mach build, but again faced this error. Please help me regarding this.


[23:37:28.0946] <daneshwarik>
 * I completed all the steps, build type= build mozilla on desktop, and then again executed export command and then ./mach build, but again faced this error. Please help me regarding this.


[23:40:13.0452] <arai>
daneshwarik: files and directories on windows file system can have short name, that does not contain spaces

[23:40:34.0215] <arai>
and looks like your home directory does not have short name

[23:41:05.0159] <arai>
so, follow the error message to set short name for it

[23:42:40.0680] <daneshwarik>
> daneshwarik: files and directories on windows file system can have short name, that does not contain spaces

So will this change username for only such paths required by mozilla-unified or for whole windows system ?

[23:43:07.0575] <arai>
it does not change user name

[23:43:26.0943] <arai>
just adds short name for the directory

[23:43:42.0279] <arai>
the original name does mot change 

[23:43:46.0583] <daneshwarik>
> it does not change user name

Ok I'll follow the steps for that. Thanks

[23:43:52.0289] <arai>
* the original name does not change 

[23:49:20.0505] <daneshwarik>
I tried this -  fsutil file setshortname "c:/Users/DANESHWARI KANKANWAD/.mozbuild/clang/bin/clang-cl.exe" clang-cl
, but error is 

[23:49:28.0136] <daneshwarik>
> I tried this -  fsutil file setshortname "c:/Users/DANESHWARI KANKANWAD/.mozbuild/clang/bin/clang-cl.exe" clang-cl
> , but error is 

Error:  Not all privileges or groups referenced are assigned to the caller.

[23:50:04.0682] <arai>
you need to set short name for the directory

[23:50:11.0252] <arai>
not file inside it

[23:50:42.0439] <arai>
also, you need to run the command in command prompt with admin privileges 

[23:50:57.0980] <daneshwarik>
> you need to set short name for the directory

"c:/Users/DANESHWARI KANKANWAD/.mozbuild/clang/bin/" 

[23:51:01.0897] <arai>
 no

[23:51:15.0418] <daneshwarik>
 * > you need to set short name for the directory

"c:/Users/DANESHWARI KANKANWAD/.mozbuild/clang/bin/" so would this work?

[23:51:18.0948] <arai>
the directory tha contains whitespace

[23:51:40.0974] <daneshwarik>
> you need to set short name for the directory

"c:/Users/DANESHWARI KANKANWAD/.mozbuild/clang/bin/" so would this work?

or I have to set it for .mozbuild ?

[23:52:06.0356] <arai>
the whitespace is the problem, and using short name can workaround it

[23:52:07.0603] <daneshwarik>
> the directory tha contains whitespace

Ok so "c:/Users/DANESHWARI KANKANWAD" this will do that ?

[23:52:17.0880] <arai>
yes, the directory 

[23:54:59.0415] <daneshwarik>
I tried this  fsutil file setshortname "c:/Users/DANESHWARI KANKANWAD/" DK_user but again face the same error message.

[23:55:10.0541] <daneshwarik>
 * I tried this  - fsutil file setshortname "c:/Users/DANESHWARI KANKANWAD/" DK_user but again face the same error message.

[23:55:10.0859] <arai>
what error?

[23:55:35.0244] <daneshwarik>
> what error?

Error: Not all privileges or groups referenced are assigned to the caller.

[23:55:57.0187] <arai>
are you using command prompt with admin privileges?

[23:56:36.0539] <daneshwarik>
> are you using command prompt with admin privileges?

maybe not. So how can I check it and activate it?

[23:57:28.0495] <arai>
open context menu on the shortcut for command prompt, and choose "run as administrator " or something 

[23:58:27.0646] <daneshwarik>
> open context menu on the shortcut for command prompt, and choose "run as administrator " or something

Ok I'll do that

[00:00:10.0177] <janey>
Hey guys does anyone know how to work with FileMerge thing? How do I mean to resolve conflict ( I have selected right one but it doesn't let me do so and still says "unresolved conflict"
And how I start the merging itself?

[00:16:52.0634] <daneshwarik>
> are you using command prompt with admin privileges?

I did this but Access Denied error is encountered- C:\WINDOWS\system32>fsutil file setshortname "C:\Users\DANESHWARI KANKANWAD" DK_user
Error:  Access is denied.


[00:17:03.0381] <daneshwarik>
> are you using command prompt with admin privileges?

I did this but Access Denied error is encountered- C:\WINDOWS\system32>fsutil file setshortname "C:\Users\DANESHWARI KANKANWAD" DK_user
Error:  Access is denied.

Also tried this C:\WINDOWS\system32>cd ../..

C:\>fsutil file setshortname "C:\Users\DANESHWARI KANKANWAD" DK_user
Error:  Access is denied.

[00:17:35.0226] <daneshwarik>
And I'm using cmd with Administrative priveleges

[00:25:12.0976] <yulia>
> <@janey:mozilla.org> Hey guys does anyone know how to work with FileMerge thing? How do I mean to resolve conflict ( I have selected right one but it doesn't let me do so and still says "unresolved conflict"
> And how I start the merging itself?

By default, it's selected the most likely conflict resolution for you (in the middle, you have arrows pointing towards the chosen change). If it is wrong, you want to select either left or right (the actions drop down on the bottom right). Then save the "merge" and quite. I usually do i think cmd w and cmd q. 

[00:25:46.0362] <yulia>
 * By default, it's selected the most likely conflict resolution for you (in the middle, you have arrows pointing towards the chosen change). If it is wrong, you want to select either left or right (the actions drop down on the bottom right). Then save the "merge" and quit. I thiink you can do this from the menus. I usually do cmd w and cmd q (if i am recalling my muscle memory right).

[00:27:24.0781] <yulia>
> <@daneshwarik:mozilla.org> > are you using command prompt with admin privileges?
> 
> I did this but Access Denied error is encountered- C:\WINDOWS\system32>fsutil file setshortname "C:\Users\DANESHWARI KANKANWAD" DK_user
> Error:  Access is denied.
> 
> Also tried this C:\WINDOWS\system32>cd ../..
> 
> C:\>fsutil file setshortname "C:\Users\DANESHWARI KANKANWAD" DK_user
> Error:  Access is denied.

can you screenshot what you are seeing? also rather than cmd, powershell might be nicer to use

[00:34:35.0788] <daneshwarik>
> can you screenshot what you are seeing? also rather than cmd, powershell might be nicer to use

I recently closed and opened a new cmd, can't attach a SS

[00:45:58.0986] <yulia>
what is "ss" in this context?

[00:52:03.0282] <daneshwarik>
> what is "ss" in this context?
Screenshot in short

[00:52:56.0607] <daneshwarik>
This is what I tried recently.

[00:53:32.0296] <leveryd>
what's difference between ParseGoal::Script and ParseGoal::Module? code snippet "console.log(1+1)" , it should be parsed as "ParseGoal::Script"?

[00:54:12.0292] <yulia>
script and module goals have slightly different rules per the spec

[00:54:33.0999] <yulia>
one example is, modules can have static `import` statements

[00:54:50.0481] <yulia>
usually, you will probably use script -- it is more permissive

[01:04:54.0056] <daneshwarik>
I closed every process except shells and Acess Denied meassage is there after trying this

[01:07:24.0083] <yulia>
here is what i find online: https://www.sevenforums.com/general-discussion/296656-receiving-error-access-denied-when-using-fsutil-setshortname.html apparently setting windows to safe mode did the tricck

[01:08:06.0569] <yulia>
here is more info about why you might see that on windows: https://www.eassos.com/how-to/how-to-fix-access-denied-error-in-windows.php

[01:09:27.0641] <yulia>
might be worth searching around and seeing if any of the solutions describe your situation

[01:12:59.0567] <yulia>
another thought -- if you don't care where specifically you are building, you can try wsl -- wsl allows you to run ubuntu/linux pretty much natively on windows

[01:13:32.0618] <yulia>
the info is found here: https://docs.microsoft.com/en-us/windows/wsl/install-win10

[01:14:25.0184] <yulia>
the simplified install unfortunately requires a windows developer account, if you don't mind setting one up

[01:14:35.0993] <yulia>
for my windows build, i went through the manual steps

[01:14:56.0555] <yulia>
Otherwise, if you keep having trouble ill boot my windows install and go through the steps with you

[01:15:39.0978] <yulia>
 * Otherwise, if you keep having trouble, and want to specifically build on windows, ill boot my windows install and go through the steps with you

[01:15:50.0665] <yulia>
 * Otherwise, if you keep having trouble, and want to specifically build on windows, ill boot my windows install and go through the steps with you. might help

[01:16:01.0245] <yulia>
 * Otherwise, if you keep having trouble, and want to specifically build on windows, ill boot my windows install and go through the steps with you. might help. just let me know

[01:16:59.0254] <yulia>
 * another thought -- if you don't care where specifically you are building, you can try wsl -- wsl allows you to run ubuntu/linux pretty much natively on windows. Since most of us are building on linux, problem solving might be a bit faster and less frustrating.

[05:51:03.0444] <yulia>
Is anyone using ssh xForwarding to work on their mac?

[05:51:12.0381] <yulia>
I am having a bit of a bad time with it, its very slow

[05:52:11.0815] <yulia>
I tried setting up VNC, but the graphics card we have is nvidia, and it's open gl drivers are out of date, so they won't do "hardware acceleration" necessary for gnome to work

[05:52:22.0530] <yulia>
I haven't used vnc before, so I don't know if it will be better

[05:53:25.0962] <yulia>
also, ssh disabled more permissive ciphers -- which was another bottle neck that might have been addressed for xforwarding. I am a bit stuck on the best approach

[05:53:31.0271] <jandem>
I use xrdp on ubuntu with the MS rdp client on mac to connect

[05:54:32.0014] <yulia>
oh interesting

[06:08:48.0458] <yulia>
I am not having much luck yet -- it is running for me locally

[06:08:53.0748] <yulia>
on the build machine that is

[06:08:58.0567] <yulia>
but I can't log into it

[06:11:01.0366] <yulia>
hm, might not be connecting to the right thing..

[06:14:40.0896] <yulia>
ok, it works kinda

[08:08:09.0219] <sfink>
on Windows, I gave up and put my checkout at c:/mozilla

[08:14:55.0122] <mgaudet>
Blanket thanks to everyone for helping out with the outreachy contributors, but thanks especially to arai :) 

[08:21:24.0052] <tcampbell>
I actually put my windows checkout at d:/mozilla . Apparently the registered as "system" has a few extra filesystem filters and so is not as fast as extra drives. 

[08:21:33.0818] <tcampbell>
 * I actually put my windows checkout at d:/mozilla . Apparently the partition registered as "system" has a few extra filesystem filters and so is not as fast as extra drives. 

[10:37:42.0795] <daneshwarik>
> Otherwise, if you keep having trouble, and want to specifically build on windows, ill boot my windows install and go through the steps with you. might help. just let me know

I'll for one last time try with windows because setup is almost complete. If problem still persists I'll then switch to WSL as you mentioned. Thank you so much for your help. 

[10:37:51.0745] <daneshwarik>
Also to @arai thank you.

[10:39:58.0935] <daneshwarik>
> another thought -- if you don't care where specifically you are building, you can try wsl -- wsl allows you to run ubuntu/linux pretty much natively on windows. Since most of us are building on linux, problem solving might be a bit faster and less frustrating.

So WSL will setup a Linux environment for me. Can I use the mercurial bundle that I downloaded in windows 10 directly in Ubuntu-WSL ?

[10:40:28.0375] <daneshwarik>
Like without the use of transfering such heavy file.

[10:40:39.0260] <sfink>
I would expect that to work.

[10:41:41.0659] <daneshwarik>
Sounds good then :)

[10:46:07.0871] <sfink>
I run Windows in a VM on my Linux desktop, and most of my recent difficulties building all traced back to where my source directory was. Either it was in my home dir, which has a space in it, or it was a link to a network mount, or was just a mount point to the actual location in my home dir. None of those work. When I gave up and copied to C:\mozilla, everything just worked. (Finally!)

[11:03:11.0446] <arai>
(maybe it's too old tho, looks like you cannot modify short name of "currently logged in" user. so, to modify it, you need to have another admin user on your system, and logout from current user, and perform fsutil on the another admin user

[11:03:16.0520] <arai>
 * (maybe it's too late tho, looks like you cannot modify short name of "currently logged in" user. so, to modify it, you need to have another admin user on your system, and logout from current user, and perform fsutil on the another admin user

[11:03:28.0588] <arai>
 * (maybe it's too late tho, looks like you cannot modify short name of "currently logged in" user's home. so, to modify it, you need to have another admin user on your system, and logout from current user, and perform fsutil on the another admin user

[14:08:30.0655] <mgaudet>
confession: Successfully attached with Android Studio's debugger to my stencil failure. Learned a -lot-. Thanks Agi! 

[14:08:33.0059] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[15:05:42.0298] <mgaudet>
confession: Post-hoc debugging is so much harder than record and replay. Definitely a script preloader bug, no idea what yet. Will have to wait alas; End of day here! 


2021-04-17
[06:09:46.0560] <daneshwarik>
> another thought -- if you don't care where specifically you are building, you can try wsl -- wsl allows you to run ubuntu/linux pretty much natively on windows. Since most of us are building on linux, problem solving might be a bit faster and less frustrating.

So since I'm facing so much problems with Windows, I'll shift to WSL-ubuntu 20.04. 

[06:10:50.0643] <daneshwarik>
Only thing how to remove or revert back the setup done till now on Windows so that does interfere with further installations and also I can get some memory?

[07:04:46.0699] <Redfire>
I have a point of warning for WSL builds, make sure that you're running the compile in an ex4-formatted section, if you try compiling in a NTFS-formatted section, it'll break due to case sensitivity

[10:50:17.0481] <borane>
I have a lot of nursery-is-full GC passes, but there's nowhere in my code that I'm aware that I'm allocating.

[10:50:44.0991] <borane>
The allocations tab doesn't help

[10:52:28.0839] <borane>
Any ideas how I might determine what part of my code is filling up the nursery?

[10:57:33.0862] <borane>
Presently I'm bisecting my code with comments, but I'm curious if there is another way to profile allocations

[11:00:16.0878] <borane>
Huh, I think this is out-of-scope for spidermonkey, it looks like the webgl API allocates intermediate objects when you call it, and for some reason that's not showing up in the allocation profiler.

[12:26:20.0414] <gma-amg>
Hi guys, so my patch couldn't land due to conflicts and I was told to " pull central, rebase the patch, and re-upload"

[12:26:26.0835] <gma-amg>
So I've pulled central

[12:26:30.0736] <gma-amg>
But how do i rebase?

[12:27:07.0174] <gma-amg>
Is it hg rebase -s source -d destination?

[12:27:17.0819] <gma-amg>
But I'm unsure of s and d here

[12:27:24.0709] <arai>
yes

[12:27:35.0240] <arai>
https://www.mercurial-scm.org/wiki/RebaseExtension

[12:28:34.0562] <arai>
so, in the graph in "Basic usage", your previous central is "C", and your patch is "X", "Y", and "Z" (if you have only one patch, then ignore "Y" and "Z")

[12:28:54.0409] <arai>
then, after you pulled, the latest central is "E"

[12:29:28.0892] <arai>
so, you specify the first changeset of your patch "X" as source, and the latest central "E" as destination

[12:30:03.0129] <gma-amg>
Okay, I think I got it

[12:30:06.0899] <gma-amg>
Thank you so much !

[12:30:18.0965] <arai>
my pleasure

[12:33:08.0982] <gma-amg>
Also what's the difference between doing hg rebase and hg commit --amend?

[12:33:29.0028] <arai>
they're completely different operation

[12:34:22.0682] <arai>
`rebase` changes the parent of given changeset.  `commit --amend` stores uncommitted changes into current changeset, and optionally modify commit message

[12:35:09.0403] <gma-amg>
Hmm alright


2021-04-18
[22:36:45.0369] <daneshwarik>
> I have a point of warning for WSL builds, make sure that you're running the compile in an ex4-formatted section, if you try compiling in a NTFS-formatted section, it'll break due to case sensitivity

So how can I find that I'm compiling WSL builds in NTFS or ex4-formatted section? And also how to fix this? 

[22:37:12.0360] <daneshwarik>
And this is a problem of WSL only not of mozilla-builds, right?

[22:49:27.0193] <arai>
your main partition uses NTFS, and WSL creates its own disk image, that I think uses ext4 by default.  then, your main partition is visible from WSL via `/mnt/c/`.  then, you should put `mozilla-unified` clone in WSL's disk image, usually under `/home/USER_NAME_HERE/`, not under `/mnt/c/`

[22:49:48.0986] <arai>
 * your main partition uses NTFS, and WSL creates its own disk image, that I think uses ext4 by default.  then, your main partition (C drive) is visible from WSL via `/mnt/c/`.  then, you should put `mozilla-unified` clone in WSL's disk image, usually under `/home/USER_NAME_HERE/`, not under `/mnt/c/`

[23:04:44.0735] <arai>
then, the mercurial bundle file that you've downloaded on windows is visible under `/mnt/c/`.  so, create `mozilla-unified` under your home directory, and unbundle from the downloaded bundle file

[23:06:11.0887] <arai>
`mozilla-builds` (MozillaBuild) is a tool for building on native Windows, and it's not used when building on WSL

[23:06:16.0135] <arai>
 * `mozilla-build` (MozillaBuild) is a tool for building on native Windows, and it's not used when building on WSL

[15:23:34.0355] <borane>
Hey will `object["name"]` lookups allocate the string key as an object? Like as opposed to `object.name`?

[15:24:32.0287] <borane>
Or are literals allocated as soon as the interpreter sees the function?

[15:24:43.0245] <borane>
 * Hey will `object["name"]` lookups allocate the string key as an object every time the line runs? Like as opposed to `object.name`?

[15:38:08.0160] <arai>
for that specific case, `object["name"]` is converted to `object.name` during bytecode compilation

[15:38:39.0873] <arai>
 * for that specific case, `object["name"]` is converted to `object.name` during parse and bytecode compilation

[15:39:36.0530] <arai>
anyway, string literal is allocated at the end of bytecode compilation, and no extra allocation happens when executing the code

[15:46:38.0869] <arai>
if the string literal is inside function, the function may be compiled into [lazy function](https://searchfox.org/mozilla-central/rev/2f49e1c389c970d1b97120a928ff1c59c62b2caa/js/src/vm/JSScript.h#1364-1368), and bytecode compilation for the function happens when the function is called at first time, and the string literal isn't allocated until that point

[15:49:06.0764] <borane>
Cool, thanks.  Is it also converted to the same thing as `object.name` when the key contains characters that aren't legal in a symbol?

[15:49:46.0441] <arai>
for example?  what do you mean by "symbol" here?

[15:50:13.0084] <borane>
`object['5name[0]']`

[15:51:12.0177] <arai>
the optimization is applied for it as well.  that also uses same opcode as normal property access

[15:51:27.0333] <arai>
if you have debug build of JS shell, try `dis` function

[15:51:32.0552] <arai>
`dis(() => object['5name[0]'])`

[15:51:39.0959] <arai>
that shows compiled bytecode for the function

[15:52:41.0324] <borane>
Cool, I tried it and I see now

[15:53:17.0153] <arai>
documentation for opcode is in this file https://searchfox.org/mozilla-central/source/js/src/vm/Opcodes.h


2021-04-19
[23:23:07.0840] <leveryd>
is there document about "BinAST.webidl_" and "BinAST.yaml"? i want to learn how spidermonkey implement the javascript parser , but i never learn anything about "web idl" before.

[23:25:28.0977] <arai>
leveryd: are you looking into BinAST parser, or JavaScript parser?

[23:25:54.0980] <arai>
those 2 files are for Binary AST Proposal, and mostly unrelated to JavaScript parser itself

[23:26:53.0843] <arai>
if you're looking into BinAST, here's proposal https://tc39.es/proposal-binary-ast/.  and the WebIDL is imported from it

[23:27:31.0344] <arai>
and the yaml file defines the parser for the file, for each node

[23:28:07.0665] <arai>
if you're going to learn JavaScript parser, see https://searchfox.org/mozilla-central/rev/a8b75e4ba3f8ddf0e76b42681d0a7b7e78e67730/js/src/frontend/Parser.h#13

[23:30:49.0168] <arai>
also https://searchfox.org/mozilla-central/rev/a8b75e4ba3f8ddf0e76b42681d0a7b7e78e67730/js/src/frontend/TokenStream.h#19 for tokenizer (lexer)

[23:31:03.0157] <arai>
and https://searchfox.org/mozilla-central/rev/a8b75e4ba3f8ddf0e76b42681d0a7b7e78e67730/js/src/frontend/ParseNode.h#30 for parse node (AST)

[23:52:03.0349] <leveryd>
the relationship between "binast" and "Javascript parser" is "binast can represent the ast what Javascript parser output"?

[23:53:35.0082] <arai>
Binary AST file stores the AST of JavaScript file in binary format, to improve the time taken by parse and bytecode compile, and also to reduce the file size

[23:54:07.0113] <leveryd>
got it

[08:59:26.0619] <jonco>
jandem: for transpiling cache IR stubs to warp, is there a good example I could look at?

[09:01:43.0214] <jonco>
I had a go at this (setting transpile to true for the cache IR op) but the current problem is that getOpSnapshot<WarpCacheIR> fails when called in WarpBuilder::build_NewObject

[09:06:12.0235] <iain>
jonco: We don't currently transpile NewObject, so WarpOracle doesn't create a snapshot

[09:08:25.0033] <iain>
I'm trying to find a patch where we start transpiling a new op

[09:08:26.0033] <jonco>
iain: NewObject is handled in WarpScriptOracle::createScriptSnapshot.  I tried adding a call to maybeInlineIC to this case, but it didn't help.

[09:09:21.0338] <iain>
Sorry, I mean we don't create a CacheIR snapshot

[09:11:33.0285] <iain>
Ideally, we would remove [this code](https://searchfox.org/mozilla-central/source/js/src/jit/WarpOracle.cpp#524-535) and add `NewObject` [here](https://searchfox.org/mozilla-central/source/js/src/jit/WarpOracle.cpp#614)

[09:14:28.0492] <iain>
It's a little trickier than normal because we don't use an IC for NewObject in Warp

[09:14:32.0847] <iain>
But that's also true for Call

[09:15:44.0804] <jonco>
iain: that's essentially what I did by calling maybeInlineIC

[09:15:59.0577] <jonco>
I'll look at the code for Call and see if that sheds any light...

[09:17:08.0550] <iain>
Maybe you created two snapshots?

[09:17:22.0417] <iain>
IIRC we read them in order

[09:19:39.0307] <jonco>
good point, I'll have a look

[09:30:39.0583] <jonco>
iain: this is working better now, although getOpSnapshot still fails about half of the time

[09:31:41.0784] <iain>
Is it failing because we never hit that code in baseline and don't have an IC?

[09:32:20.0953] <jonco>
maybe, how can I tell?

[09:32:50.0665] <iain>
IONFLAGS=warp-snapshots will tell you what we transpiled

[09:33:12.0957] <iain>
Oh, now that I think about it you might have to have special handling for the WarpBailout case

[09:36:15.0081] <iain>
We [attach a WarpBailout snapshot](https://searchfox.org/mozilla-central/source/js/src/jit/WarpOracle.cpp#838-841) if we've never hit an IC

[09:37:02.0116] <jonco>
nice, spew indicates that is indeed what is happening

[09:38:40.0601] <iain>
I don't think we have to bail out here, but you probably have to consume the bailout snapshot (or prevent it from being created)

[09:42:18.0789] <iain>
Tangentially related: I should mention before I forget that jandem figured out on Friday why our NewObject IC patches were crashing. The `guardNoAllocationMetadataBuilder` was baking in the realm pointer. I have a patch to fix it, which will probably collide with your patch to transpile that op.

[09:44:59.0261] <jonco>
ah great!

[09:45:31.0966] <iain>
I just put it up here: https://phabricator.services.mozilla.com/D112623

[09:45:37.0429] <jonco>
so the IC could outlive the realm? 

[09:46:01.0125] <iain>
No, the problem was that ICs from different realms would all share the same code

[09:46:20.0227] <iain>
Not previously a problem, because we generated new code for every single NewObject IC

[09:47:25.0335] <iain>
Er, yeah, I guess eventually the code does outlive the realm, though

[09:50:14.0047] <iain>
So an IC from realm A would check whether realm B had a metadata builder, but B had been freed

[09:51:14.0650] <jonco>
ok, makes sense

[09:53:56.0047] <jonco>
iain: thanks for your help

[09:54:35.0237] <jonco>
this stuff is complicated and I've mostly being trying guess what to do based of the existing code

[09:58:12.0842] <iain>
Yeah, the workflow is really smooth if you're just adding a new CacheIR opcode, but once you have to touch the underlying mechanisms there are some fiddly moving pieces

[10:44:00.0426] <mgaudet>
So, while debugging and Android bug, I'm stuck with MOZ_LOG being the only thing actually working (`stderr` doesn't show up in logcat)... I think this is because under the covers `MOZ_LOG` ends up using `__android_log_write`. Does anyone have any experience trying to get some of _our_ logging to dump via `__android_log_write`? I was hoping to modify `Fprinter`, but I'm not sure where that traces back to. 



[10:46:23.0987] <sfink>
does printf_stderr or whatever it's called go somewhere

[10:46:30.0189] <sfink>
 * does printf_stderr or whatever it's called go somewhere?

[10:46:57.0401] <sfink>
no, that looks like a Windows hack

[10:48:16.0820] <mgaudet>
Yeah, alas, no. (I am thinking ultimately this is a bigger bug to open). 

[10:48:32.0151] <sfink>
`__android_log_print` exists (that's all I know about it)

[10:49:25.0523] <sfink>
I guess that doesn't really change anything

[10:49:58.0912] <sfink>
but then, I'm just poking at things because I'm in a 5 minute break in math homeschooling ;-)

[10:51:50.0713] <mgaudet>
I'll open a bug eventually -- this is definitely a huge paper cut for working on Android 

[14:41:55.0704] <mgaudet>
confession: Think I found my Android bug; gently surprised it didn't show up in more desktop tests. 

Also, waiting for Private Method storage patches to traverse the Autoland queue :) Looks like they'll likely land past EOD today. 

[14:41:58.0023] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire


2021-04-20
[22:25:50.0771] <pavelp>
hi.
"Logging in as pavel <paklovpavel@ya.ru> requires verification.
Please enter your verification code from your TOTP application. If your device has been lost or stolen, you may use one of your pre-generated recovery codes."

what can i do if dont have recovery codes?

[22:56:21.0483] <iain>
pavelp: Where are you seeing this message? Did you lose a 2FA device?

[23:07:03.0585] <pavelp>
> <@iain:mozilla.org> pavelp: Where are you seeing this message? Did you lose a 2FA device?

on log in page on bugzilla. device was reset, ootp app was deleted.

[23:11:47.0939] <iain>
pavelp: You may be able to get help in #bmo:mozilla.org 

[02:29:17.0813] <leveryd>
is there any suggestion to speed up "reflect_parse" function? i call "reflect_parse" many times with the same "cx" argument and "global" argument, and i want the "reflect_parse" consume less cpu time as possible.  demo code is on "https://gist.github.com/leveryd/f4af9aaa9b9719023a2215b99e017322"

[02:30:22.0357] <leveryd>
 * is there any suggestion to speed up "reflect_parse" function? i call "reflect_parse" many times with the same "cx" argument and "global" argument, and i want the "reflect_parse" consume less cpu time as possible.  demo code is on "https://gist.github.com/leveryd/f4af9aaa9b9719023a2215b99e01732"

[02:30:26.0199] <leveryd>
 * is there any suggestion to speed up "reflect_parse" function? i call "reflect_parse" many times with the same "cx" argument and "global" argument, and i want the "reflect_parse" consume less cpu time as possible.  demo code is on "https://gist.github.com/leveryd/f4af9aaa9b9719023a2215b99e017322"

[02:31:01.0739] <arai>
leveryd: is it the exact function you're calling?

[02:31:26.0910] <arai>
you don't need to call `JS_InitReflectParse` every time.  it should be performed only once for given global

[02:32:22.0170] <leveryd>
> <@arai:mozilla.org> you don't need to call `JS_InitReflectParse` every time.  it should be performed only once for given global

i use "std::call_once" to ensure "JS_InitReflectParse" is  called just once.

[02:32:46.0048] <arai>
oh, sorry, I overlooked the block

[02:33:07.0813] <leveryd>
my bad code style.

[02:33:27.0061] <arai>
`JS_NewStringCopyZ` copies the string, as the method name says.  if the source is large and you call the function with different string every time, you might want to use external string

[02:34:40.0261] <leveryd>
i use "perf" tool to get the fire flame

[02:35:29.0713] <leveryd>
i wonder if i can make "CompilationInfo::init" called just once?

[02:36:12.0308] <arai>
it's necessary for each call, as long as you're passing different source for each call

[02:36:32.0791] <arai>
btw, does the graph reflect the time taken by each call?

[02:38:26.0971] <leveryd>
> <@arai:mozilla.org> btw, does the graph reflect the time taken by each call?

i think the width is the total cpu time what is the total time of every call, not time taken by each call.

[02:39:27.0709] <arai>
does your profile provide showing how many samples each function hit?

[02:39:49.0709] <arai>
 * does your profiler provide showing how many samples each function hit?

[02:40:24.0574] <arai>
so that it's clear which part is taking much time

[02:54:22.0225] <arai>
(given the graph uses same width for top-most parts, I doubt it indicates reliable time

[02:54:52.0212] <arai>
or perhaps the number of samples is too small

[02:57:11.0967] <leveryd>
the svg is "http://106.13.236.30:65533/process.svg"

[02:58:37.0861] <leveryd>
you can hit those locations to see "RunREPL" function

[03:02:00.0617] <arai>
I mean, something like the bottom half of https://docs-assets.developer.apple.com/published/dfb79125da/09a5d013-63b7-4cbe-86eb-08dbc48d08ed.png

[03:02:18.0095] <arai>
so, list of functions with numbers

[03:06:44.0957] <leveryd>
the numbers like "1.00ms 2.00ms" means cpu time what each call? 

[03:07:13.0073] <arai>
roughly

[03:08:15.0482] <arai>
flame graph would also be using the same data as source

[03:08:39.0604] <arai>
so, directly checking those numbers would be better

[03:08:41.0658] <leveryd>
> <@arai:mozilla.org> does your profiler provide showing how many samples each function hit?

my flame svg has below information.

[03:09:04.0349] <arai>
wait

[03:09:09.0101] <arai>
only 10 samples?

[03:09:14.0767] <arai>
that's too small

[03:09:27.0959] <arai>
what frequency are you using?

[03:10:03.0271] <leveryd>
i run command "perf record -p 104757 -g -- sleep 60"

[03:10:07.0515] <arai>
 * what frequency/interval are you using?

[03:10:43.0458] <arai>
I don't remember the default setting of it

[03:11:17.0819] <arai>
also, I guess, that flame graph shows them in the timeline.  so it's not good to think about performance

[03:11:19.0012] <leveryd>
99 per second maybe. i am not family with perf, let me dive into it.

[03:12:00.0280] <arai>
I'd suggest calling the function many times (at least for 1 second), and profile it

[03:12:08.0342] <arai>
and check time taken by each function

[03:12:11.0425] <arai>
not flame graph

[03:13:46.0866] <arai>
 * also, I guess, that flame graph shows them in the timeline.  so it's not good to think about performance of certain function

[03:14:14.0926] <leveryd>
 * 99 per second maybe. i am not familar with perf, let me dive into it.

[03:21:08.0522] <leveryd>
> <@arai:mozilla.org> also, I guess, that flame graph shows them in the timeline.  so it's not good to think about performance of certain function

why that flame graph is not good to think about performance of certain function?  the more width the function has in the flame graph, the more total cpu time it consume, is it not? then i should reduce  "the long width function" call times or improve "the long width function"?

[03:21:34.0644] <arai>
only when the single function call takes so long time

[03:21:56.0254] <arai>
and it has many samples

[03:23:57.0784] <arai>
in your case, that call has only 10 samples in total, so, calls inside it has fewer, and you cannot reliably compare those numbers

[03:25:26.0561] <arai>
things you can try in this case are:  1. increase the frequency to get more samples in that time frame,  or, 2. call the function many times and aggregate times for all calls into one and compare them

[03:26:25.0612] <leveryd>
i will try the "1" option.

[03:26:52.0596] <leveryd>
 * i will try the first "1" option.

[06:21:09.0135] <daneshwarik>
> your main partition uses NTFS, and WSL creates its own disk image, that I think uses ext4 by default.  then, your main partition (C drive) is visible from WSL via `/mnt/c/`.  then, you should put `mozilla-unified` clone in WSL's disk image, usually under `/home/USER_NAME_HERE/`, not under `/mnt/c/`

So is this the correct way? cp "/mnt/c/Users/User_name/Downloads/bundle.hg" $HOME


[06:21:20.0767] <daneshwarik>
> your main partition uses NTFS, and WSL creates its own disk image, that I think uses ext4 by default.  then, your main partition (C drive) is visible from WSL via `/mnt/c/`.  then, you should put `mozilla-unified` clone in WSL's disk image, usually under `/home/USER_NAME_HERE/`, not under `/mnt/c/`

So is this the correct way? cp "/mnt/c/Users/User_name/Downloads/bundle.hg" $HOME

then unbundle it in $HOME/mozilla-source/then unbundle it in $HOME/mozilla-source/

[06:21:30.0242] <daneshwarik>
 * > your main partition uses NTFS, and WSL creates its own disk image, that I think uses ext4 by default.  then, your main partition (C drive) is visible from WSL via `/mnt/c/`.  then, you should put `mozilla-unified` clone in WSL's disk image, usually under `/home/USER_NAME_HERE/`, not under `/mnt/c/`

So is this the correct way? cp "/mnt/c/Users/User_name/Downloads/bundle.hg" $HOME

then unbundle it in $HOME/mozilla-source/

[06:25:46.0139] <mehaboob_shariff>
iain: Can I use the link to the bugzilla page as a Contribution Url ?

[06:31:30.0154] <arai>
daneshwarik: I guess, you don't need to copy `bundle.hg` file there, but that would also work

[08:03:09.0089] <iain>
mehaboob_shariff: Either bugzilla or the phabricator revision would be fine

[08:10:58.0325] <mehaboob_shariff>
Okay 

[14:11:26.0535] <evilpie>
mgaudet: what is left for enabling private fields?

[14:51:21.0501] <mgaudet>
evilpie: Intent to ship, and flipping switch as far as I am concenred

[14:51:23.0889] <mgaudet>
 * evilpie: Intent to ship, and flipping switch as far as I am concerned

[14:51:34.0154] <mgaudet>
Aim to send Intent this week, plan to flip pref next

[14:51:42.0200] <evilpie>
very cool


2021-04-21
[23:25:43.0348] <yulia>
awesome

[02:09:49.0129] <ashcode>
can someone tell where did i go wrong,Im working on this bug-https://bugzilla.mozilla.org/show_bug.cgi?id=1696085

[02:10:06.0558] <ashcode>
https://pastebin.com/F6WtVMTf- this is the error

[02:11:01.0914] <ashcode>
```enum class ObjLiteralFlag : uint16_t {
  // If set, this object is an array.
  Array = 1 << 1 ,

  // If set, this is an object literal in a singleton context and property
  // values are included. See also JSOp::Object.
  Singleton = 1 << 2,

  // If set, this object contains index property, or duplicate non-index
  // property.
  // This flag is valid only if Array flag isn't set.
  HasIndexOrDuplicatePropName = 1 << 3,
};

using ObjLiteralFlags = EnumFlags<ObjLiteralFlag>;

[02:11:39.0023] <ashcode>
> <@ashcode:mozilla.org> ```enum class ObjLiteralFlag : uint16_t {
>   // If set, this object is an array.
>   Array = 1 << 1 ,
> 
>   // If set, this is an object literal in a singleton context and property
>   // values are included. See also JSOp::Object.
>   Singleton = 1 << 2,
> 
>   // If set, this object contains index property, or duplicate non-index
>   // property.
>   // This flag is valid only if Array flag isn't set.
>   HasIndexOrDuplicatePropName = 1 << 3,
> };
> 
> using ObjLiteralFlags = EnumFlags<ObjLiteralFlag>;

dis the edit i did in the code

[02:12:47.0496] <ashcode>
 * ```                                                                                                                                          enum class ObjLiteralFlag : uint16_t {
    // If set, this object is an array.
  Array = 1 << 1 ,

  // If set, this is an object literal in a singleton context and property
  // values are included. See also JSOp::Object.
  Singleton = 1 << 2,

  // If set, this object contains index property, or duplicate non-index
  // property.
  // This flag is valid only if Array flag isn't set.
  HasIndexOrDuplicatePropName = 1 << 3,
};

using ObjLiteralFlags = EnumFlags<ObjLiteralFlag>;
```

[02:13:10.0198] <ashcode>
 *     // If set, this object is an array.
  Array = 1 << 1 ,

  // If set, this is an object literal in a singleton context and property
  // values are included. See also JSOp::Object.
  Singleton = 1 << 2,

  // If set, this object contains index property, or duplicate non-index
  // property.
  // This flag is valid only if Array flag isn't set.
  HasIndexOrDuplicatePropName = 1 << 3,
};

using ObjLiteralFlags = EnumFlags<ObjLiteralFlag>;
```

[02:13:32.0229] <ashcode>
 * ```
// If set, this object is an array.

Array = 1 << 1 ,

// If set, this is an object literal in a singleton context and property
// values are included. See also JSOp::Object.
Singleton = 1 << 2,

// If set, this object contains index property, or duplicate non-index
// property.
// This flag is valid only if Array flag isn't set.
HasIndexOrDuplicatePropName = 1 << 3,
};

using ObjLiteralFlags = EnumFlags<ObjLiteralFlag>;
```

[02:14:03.0366] <arai>
ashcode: do you locate each error in the output?

[02:15:08.0226] <ashcode>
yh error is in assert file, and one two errors are due to contains method which was defined in enumset but not in enumflags

[02:15:31.0737] <arai>
which error are you trying to solve now?

[02:15:45.0697] <ashcode>
 * ```
enum class ObjLiteralFlag : uint16_t {// If set, this object is an array.

Array = 1 << 1 ,

// If set, this is an object literal in a singleton context and property
// values are included. See also JSOp::Object.
Singleton = 1 << 2,

// If set, this object contains index property, or duplicate non-index
// property.
// This flag is valid only if Array flag isn't set.
HasIndexOrDuplicatePropName = 1 << 3,
};

using ObjLiteralFlags = EnumFlags<ObjLiteralFlag>;
```

[02:16:32.0072] <ashcode>
i wanted to know can i remove some assert functions? and add a contains method in enumflags?

[02:16:52.0116] <arai>
why do you want to remove assertions?

[02:17:20.0802] <arai>
assertion is important, to detect bugs in future change

[02:19:51.0630] <arai>
also, try looking into existing methods before adding a new method, to see if it already provides the feature you want

[02:20:00.0811] <ashcode>
since some assertions are checking macros which are not defined in enumflags

[02:21:16.0691] <arai>
then, what you need to do is modify the code inside assertion to check the equivalent thing

[02:21:20.0084] <arai>
instead of removing the assertion

[03:14:08.0007] <leveryd>
can spidermonkey compiled to close "multithread support"? because my app which runs spidermonkey is single thread,i want to close "multithread support" to speed up spidermonkey.

[03:39:06.0179] <dbezhetskov>
> <@leveryd:mozilla.org> can spidermonkey compiled to close "multithread support"? because my app which runs spidermonkey is single thread,i want to close "multithread support" to speed up spidermonkey.

you can try to see at constant `gCanUseExtraThreads` (https://searchfox.org/mozilla-central/source/js/src/vm/Runtime.cpp#75) and at `--no-threads` cmd flag

[04:52:54.0641] <mehaboob_shariff>
> <@sfink:mozilla.org> right now, based on the output of `hg parent`, your working directory (your checkout) has the contents of tree as of your previous commit (641731 for bug 16999273)

There is another bug that I'm submitting and my checkout has the contents of the new commit, yet it is trying to submit to a closed revision

[04:53:21.0259] <mehaboob_shariff>
```sms@LAPTOP-GE3VTNSS /c/mozilla-source/mozilla-unified
$ moz-phab submit
Starting up..
Checking connection to Phabricator.
Looking for commits..
Loading commits..
Submitting 2 commits for review
Loading existing revisions...
Loading diffs...
(    New) 643349:c65ce598c7ad Bug 1706190: Simplified the arguments to IRGenerator constructor r=iain
Figuring out who you are...
(D111649) 643348:c45bfba51c9e Bug 1695396: Moved isFirstStub_ into IRGenerator in CacheIR.h r=iain
!! This revision is closed!
   It will be reopened if submission proceeds.
   You can stop now and refine the stack range.
Checking commits..
Warning: found 12 untracked files (will not be submitted):
Submit to https://phabricator.services.mozilla.com (YES/No/Always)? no

sms@LAPTOP-GE3VTNSS /c/mozilla-source/mozilla-unified
$ hg parent
changeset:   643349:c65ce598c7ad
user:        mr.robot
date:        Wed Apr 21 16:49:55 2021 +0530
files:       js/src/jit/BaselineIC.cpp js/src/jit/BaselineIC.h js/src/jit/CacheIR.cpp js/src/jit/CacheIR.h js/src/jit/CacheIRSpewer.cpp js/src/jit/ICState.h js/src/jit/IonIC.cpp
description:
Bug 1706190: Simplified the arguments to IRGenerator constructor r=iain
```

[04:53:22.0781] <botzilla>
https://bugzil.la/1706190 — NEW (nobody) — Simplify arguments to IRGenerator constructor

[04:53:23.0389] <botzilla>
https://bugzil.la/1695396 — RESOLVED (mehaboob097) — Move isFirstStub from CallIRGenerator into IRGenerator

[07:20:37.0214] <sfink>
mehaboob_shariff: I don't use `moz-phab` and my installation of it seems to be broken (the frequency of this happening is a large part of why I don't use it.) But I'm guessing the problem is that it's trying to submit 2 commits instead of just 1. I don't know what logic it uses for that. But I think you could either (1) restrict it to just the commit you want to submit with `moz-phab submit -r .` (I'm guessing the syntax; maybe the `-r` isn't needed?), or (2) rebase your new commit so it's not based on the closed revision: `hg rebase -d central -r .` and then run `moz-phab submit`.

[07:24:53.0881] <mehaboob_shariff>
I tried running ```hg rebase -d central -r ``` but I was getting a few errors. ```merging js/src/jit/BaselineIC.cpp
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
merging js/src/jit/CacheIR.cpp
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
merging js/src/jit/CacheIR.h
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
merging js/src/jit/IonIC.cpp
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
running merge tool kdiff3 for file js/src/jit/CacheIR.cpp
merging js/src/jit/CacheIR.cpp failed!```

[07:25:15.0140] <mehaboob_shariff>
 * I tried running `hg rebase -d central -r ` but I was getting a few errors. ```merging js/src/jit/BaselineIC.cpp couldn't find merge tool ecmerge couldn't find merge tool editmerge couldn't find merge tool filemerge couldn't find merge tool filemergexcode couldn't find merge tool gpyfm merging js/src/jit/CacheIR.cpp couldn't find merge tool ecmerge couldn't find merge tool editmerge couldn't find merge tool filemerge couldn't find merge tool filemergexcode couldn't find merge tool gpyfm merging js/src/jit/CacheIR.h couldn't find merge tool ecmerge couldn't find merge tool editmerge couldn't find merge tool filemerge couldn't find merge tool filemergexcode couldn't find merge tool gpyfm merging js/src/jit/IonIC.cpp couldn't find merge tool ecmerge couldn't find merge tool editmerge couldn't find merge tool filemerge couldn't find merge tool filemergexcode couldn't find merge tool gpyfm running merge tool kdiff3 for file js/src/jit/CacheIR.cpp merging js/src/jit/CacheIR.cpp failed!```

[07:25:44.0182] <mehaboob_shariff>
 * I tried running `hg rebase -d central -r ` but I was getting a few errors. 

[07:25:52.0407] <mehaboob_shariff>
```merging js/src/jit/BaselineIC.cpp
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
merging js/src/jit/CacheIR.cpp
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
merging js/src/jit/CacheIR.h
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
merging js/src/jit/IonIC.cpp
couldn't find merge tool ecmerge
couldn't find merge tool editmerge
couldn't find merge tool filemerge
couldn't find merge tool filemergexcode
couldn't find merge tool gpyfm
running merge tool kdiff3 for file js/src/jit/CacheIR.cpp
merging js/src/jit/CacheIR.cpp failed!```

[07:27:49.0852] <mehaboob_shariff>
this page opens up even though my build is successful and all the test cases are passed

[07:40:46.0823] <sfink>
is this patch editing the same file that you had changed in the earlier (closed) patch?

[07:41:15.0504] <sfink>
it looks like it is

[07:42:33.0627] <mehaboob_shariff>
> <@sfink:mozilla.org> is this patch editing the same file that you had changed in the earlier (closed) patch?

yes some of the files are same 

[07:42:55.0161] <sfink>
I'm guessing what's going on is that you made the changes for bug 1695396, you landed those, you made followup changes for bug 1706190. But you haven't pulled central since the other patch landed, so it's now trying to rebase your followup changes onto a tree that is lacking your earlier changes.

[07:42:56.0592] <botzilla>
https://bugzil.la/1695396 — RESOLVED (mehaboob097) — Move isFirstStub from CallIRGenerator into IRGenerator

[07:42:57.0369] <botzilla>
https://bugzil.la/1706190 — NEW (nobody) — Simplify arguments to IRGenerator constructor

[07:43:28.0659] <sfink>
so I think you want to abort this rebase: exit out of the merge tool you're using without resolving the conflicts (or kill it directly), then do `hg rebase --abort`

[07:43:57.0020] <sfink>
then `hg pull` to update `central` to a version that contains your landed changes

[07:44:32.0209] <sfink>
assuming I am correct in what's going on, then I apologize for not mentioning the need to pull the newer central first

[07:46:08.0075] <mehaboob_shariff>
> <@sfink:mozilla.org> then `hg pull` to update `central` to a version that contains your landed changes

its showing there are no changes found ```$ hg pull
pulling from https://hg.mozilla.org/mozilla-unified
searching for changes
no changes found```

[07:47:19.0358] <mehaboob_shariff>
> <@sfink:mozilla.org> assuming I am correct in what's going on, then I apologize for not mentioning the need to pull the newer central first

sir please don't apologize :)

[07:47:34.0779] <sfink>
hm. What's the output of `hg log --graph -r "central + not public()"`?

[07:49:41.0716] <sfink>
or maybe make that `hg log --graph -r "central + not public() + 4f89eb149d04"` to include the landed revision

[07:49:58.0924] <mehaboob_shariff>
> <@sfink:mozilla.org> hm. What's the output of `hg log --graph -r "central + not public()"`?

its taking time

[07:50:46.0824] <sfink>
uh oh. I wonder if you got a bunch of non-public revisions somehow? It shouldn't take very long.

[07:50:47.0678] <mehaboob_shariff>
```

[07:50:56.0060] <mehaboob_shariff>
 * ```$ hg log --graph -r "central + not public() + 4f89eb149d04"
o  changeset:   644866:6531d095b2a7
:  bookmark:    central
:  parent:      644825:e99e7e2c43c8
:  user:        imoraru <imoraru@mozilla.com>
:  date:        Wed Apr 21 14:16:08 2021 +0300
:  files:       build/common_virtualenv_packages.txt third_party/python/Jinja2/CHANGES.rst third_party/pyth:  description:
:  Backed out changeset b413fce77522 (bug 1698616) for breaking mach commands (bug 1706456). a=backout
:
:
o  changeset:   644567:4f89eb149d04
|  user:        mr.robot <mr.robot>
~  date:        Mon Apr 19 21:35:28 2021 +0000
   files:       js/src/jit/BaselineIC.cpp js/src/jit/CacheIR.cpp js/src/jit/CacheIR.h js/src/jit/IonIC.cpp
   description:
   Bug 1695396: Moved isFirstStub_ into IRGenerator in CacheIR.h r=iain

   Differential Revision: https://phabricator.services.mozilla.com/D111649


@  changeset:   643349:c65ce598c7ad
|  user:        mr.robot
|  date:        Wed Apr 21 16:49:55 2021 +0530
|  files:       js/src/jit/BaselineIC.cpp js/src/jit/BaselineIC.h js/src/jit/CacheIR.cpp js/src/jit/CacheIR|  description:
|  Bug 1706190: Simplified the arguments to IRGenerator constructor r=iain
|
|
o  changeset:   643348:c45bfba51c9e
|  parent:      643285:3e349af4587a
~  user:        mr.robot
   date:        Mon Apr 12 20:43:42 2021 +0530
   files:       js/src/jit/BaselineIC.cpp js/src/jit/CacheIR.cpp js/src/jit/CacheIR.h js/src/jit/IonIC.cpp
   description:
   Bug 1695396: Moved isFirstStub_ into IRGenerator in CacheIR.h r=iain

   Differential Revision: https://phabricator.services.mozilla.com/D111649


o  changeset:   641731:a09253a3fe8c
|  parent:      641720:5c46535ee223
~  user:        mr.robot
   date:        Fri Apr 02 23:51:46 2021 +0530
   files:       js/src/builtin/Array.cpp
   description:
   Bug 1699273 : Remove usage of JSID_IS_ATOM in Array.cpp r=mgaudet

   Differential Revision: https://phabricator.services.mozilla.com/D110698
```

[07:51:01.0513] <botzilla>
https://bugzil.la/1698616

[07:51:02.0265] <botzilla>
https://bugzil.la/1706456 — RESOLVED (nobody) — Mach command returns ImportError: bad magic number in 'requests.packages': b'\x03\xf3\r\n'

[07:51:03.0022] <botzilla>
https://bugzil.la/1695396 — RESOLVED (mehaboob097) — Move isFirstStub from CallIRGenerator into IRGenerator

[07:51:03.0642] <botzilla>
https://bugzil.la/1706190 — NEW (nobody) — Simplify arguments to IRGenerator constructor

[07:51:04.0399] <botzilla>
https://bugzil.la/1699273 — RESOLVED (mehaboob097) — Remove JSID_IS_ATOM from js/src/builtin/Array.cpp

[07:53:57.0824] <sfink>
Ugh, I'm confused. That all looks like what I'd expect: your central inherits from the landed 644567:4f89eb149d04, and you have a local 643349:c65ce598c7ad based on the pre-landing 643348:c45bfba51c9e. But then I don't know why you would get merge conflicts!

[07:55:12.0693] <mehaboob_shariff>
yeah

[07:55:53.0739] <mehaboob_shariff>
``` $ moz-phab submit
Starting up..
Checking connection to Phabricator.
Looking for commits..
Loading commits..
Submitting 2 commits for review
Loading existing revisions...
Loading diffs...
(    New) 643349:c65ce598c7ad Bug 1706190: Simplified the arguments to IRGenerator constructor r=iain
Figuring out who you are...
(D111649) 643348:c45bfba51c9e Bug 1695396: Moved isFirstStub_ into IRGenerator in CacheIR.h r=iain
!! This revision is closed!
   It will be reopened if submission proceeds.
   You can stop now and refine the stack range.
Checking commits..
Warning: found 10 untracked files (will not be submitted):
Submit to https://phabricator.services.mozilla.com (YES/No/Always)?```

[07:56:39.0895] <sfink>
It is possible that someone else made changes that conflict with your latest patch.

[07:57:30.0204] <mehaboob_shariff>
ohh

[07:57:41.0786] <mehaboob_shariff>
but no one has mentioned they are working on it

[07:57:56.0600] <sfink>
it might not be someone working on the same change

[07:58:04.0529] <mgaudet>
mehaboob_shariff: Merge conficts can happen in a bunch of ways

[07:58:10.0098] <mgaudet>
 * mehaboob_shariff: Merge conflicts can happen in a bunch of ways

[07:58:21.0166] <sfink>
there are sometimes wide-ranging changes that affect many files, including places you're changing

[07:58:48.0753] <sfink>
at this point, you can either: (1) try to use the merge tool to do an actual merge, or (2) re-do your changes on top of the current `central`

[07:59:06.0078] <mehaboob_shariff>
> <@sfink:mozilla.org> it might not be someone working on the same change

ok

[07:59:08.0829] <mehaboob_shariff>
> <@mgaudet:mozilla.org> mehaboob_shariff: Merge conflicts can happen in a bunch of ways

ok

[07:59:52.0234] <sfink>
it might be worth *trying* to do the manual merge through the tool, just to get experience with it. If it turns out to be easy and it works, great! If not, you can always fall back to throwing away the attempted merge and redoing your changes manually.

[08:00:38.0681] <sfink>
(side note: I'll be starting in on a few hours of meetings now, so won't be paying much attention for a while)

[08:01:13.0350] <mgaudet>
Learning to merge is certainly a worthwhile skill to acquire :) 

[08:01:46.0169] <mehaboob_shariff>
> <@sfink:mozilla.org> it might be worth *trying* to do the manual merge through the tool, just to get experience with it. If it turns out to be easy and it works, great! If not, you can always fall back to throwing away the attempted merge and redoing your changes manually.

ill try this can you enlighten me about this tool a little , maybe after the meeting

[08:04:21.0395] <sfink>
in brief, the left and right sides are showing you the version you're rebasing (what was in your local tree) and the version you're rebasing onto (central, here). Which is which is something I'm never sure of. The middle is the result of the merge. Your task is to make the middle into the final version you want.

[08:04:51.0943] <sfink>
often it's a matter of grabbing a chunk from either the left or right. Sometimes it requires editing the code.

[08:05:35.0954] <mehaboob_shariff>
> <@mehaboob_shariff:mozilla.org> sent an image.

okay you talking about this ?

[08:05:43.0902] <sfink>
yes

[08:06:25.0977] <mehaboob_shariff>
I can edit it directly from that page?

[08:08:23.0501] <sfink>
I think so. My merge tool lets me.

[08:09:39.0389] <sfink>
(I'm using `meld`, it looks like. But I don't have any particular preferences. They're all great, and they're all awful.)

[08:10:20.0651] <mehaboob_shariff>
okay I'll have a go at it

[08:11:54.0941] <mgaudet>
Anyone willing to take a peek at an Intent-to-Ship draft for private-fields/method, give me a ping :) 

[09:22:31.0306] <mehaboob_shariff>
> <@mgaudet:mozilla.org> Anyone willing to take a peek at an Intent-to-Ship draft for private-fields/method, give me a ping :)

I'd like to :)

[12:47:50.0888] <tcampbell>
sfink: I really don't understand our data model very well, but here is an attempt at a query of hazard failures.. https://sql.telemetry.mozilla.org/queries/79548

[12:48:40.0567] <tcampbell>
I don't know why it isn't finding anything more than a few months old

[13:18:44.0200] <mgaudet>
Q: Is anyone else seeing `./mach jstests --run-skipped` not actually... run the skipped tests? 

```
$ ./mach jstests --run-skipped  test262/intl402/DisplayNames/locales-length-poison-throws.js
[0|0|0|1] 100% ==========================================================>|   0.3s
PASS
```

[13:21:30.0657] <tcampbell>
I think that option might be a lie that only exists for compatability with another harness

[13:23:22.0402] <tcampbell>
mgaudet: try `--run-only-skipped`

[13:23:36.0800] <tcampbell>
(and try not to stare directly at the darkness)

[13:23:57.0983] <mgaudet>
also doesn't seem to work here

[13:37:52.0967] <tcampbell>
I think this stuff is just a bit broken. There is some inconsistency between the "skipped" and "enabled" flags

[13:40:51.0235] <tcampbell>
 * <del>I think this stuff is just a bit broken. There is some inconsistency between the "skipped" and "enabled" flags</del>

[13:41:07.0271] <tcampbell>
mgaudet: can you use `-o` and see if the test actually runs?

[13:41:19.0008] <tcampbell>
I think just the status bar is wrong..

[13:43:10.0548] <mgaudet>
oh interesting; it does run, and fail, but reports success regardless

[13:43:24.0557] <tcampbell>
😬

[13:44:10.0350] <mgaudet>
Anyhoo. I'll open a bug 

[13:49:32.0693] <sfink>
tcampbell: ooh, I've never played with redash before

[13:49:48.0770] <mgaudet>
https://bugzilla.mozilla.org/show_bug.cgi?id=1706773

[13:50:44.0539] <sfink>
but when I look at the `repositories` table, it doesn't list autoland. You have id `77` for it, but I see nothing with that id.

[13:50:48.0026] <sfink>
https://sql.telemetry.mozilla.org/queries/79548/source

[13:52:38.0792] <tcampbell>
sfink: the ActiveData project I was mentioning now seems to be defunct, but it's objective was to have a bit more standardize processing of the raw logs. This other database does seem to have enough of what we wanted.

[13:52:46.0840] <tcampbell>
sfink: `SELECT * from repository WHERE name = 'autoland';`

[13:53:25.0043] <sfink>
wtf, is it truncating the response?

[13:53:31.0082] <tcampbell>
 * sfink: `SELECT * from repository WHERE name = 'autoland';` (With the "treeherder" table selected)

[13:53:50.0696] <sfink>
yeah, I see it when I select just that row.

[13:54:06.0893] <tcampbell>
it is tabbed data, some controls at the bottom

[13:54:34.0677] <sfink>
oh, right. I used the tabs earlier, but somehow failed to notice them for my own query.

[13:56:38.0591] <tcampbell>
(my query took an embarassing amount of time to construct. I manage to immediately forget all SQL syntax each time)

[14:01:51.0446] <sfink>
ack, is all my fiddling around overwriting your query?

[14:02:09.0966] <sfink>
I erased the ID from the url, but it seems to have sent me back to the same one

[14:03:13.0394] <sfink>
it seems like I need multiple playspaces in order to explore tables while writing a query

[14:23:18.0198] <sfink>
well, when I do just `SELECT start_time from job where start_time > '1971-01-01 00:00' order by start_time asc limit 1;` I see the old record is from December 2020.

[14:24:48.0564] <sfink>
I added in `try` at https://sql.telemetry.mozilla.org/queries/79557/source but still only see 54 results.

[14:25:27.0346] <sfink>
 * well, when I do just `SELECT start_time from job where start_time > '1971-01-01 00:00' order by start_time asc limit 1;` I see the oldest record is from December 2020.

[14:30:46.0333] <tcampbell>
sfink: nope, you didn't save (and probably cant?) so no issues

[14:32:05.0406] <tcampbell>
It seems to ignore all queries by the last, so I was just adding a semicolon and then doing the dumb `SELECT * FROM table LIMIT 10;` to find the schema...

[14:32:31.0923] <tcampbell>
I don't know if the error table doesn't have as much history or something strange?


2021-04-22
[19:29:32.0221] <leveryd>
> <@dbezhetskov:igalia.com> you can try to see at constant `gCanUseExtraThreads` (https://searchfox.org/mozilla-central/source/js/src/vm/Runtime.cpp#75) and at `--no-threads` cmd flag

"--no-threads" is "g++" compile flag ?

[19:33:34.0935] <arai>
what do you mean by "multi-thread" ?  run JS code in multiple threads, or utilize multiple threads for background task (parse, JIT, GC)?

[19:35:08.0191] <arai>
I suppose `--no-threads` is about the command line argument of JS shell https://searchfox.org/mozilla-central/rev/08013752b4638f01d41d2a38ca7bd741bc572c86/js/src/shell/js.cpp#12294-12296

[19:37:24.0563] <arai>
by default, SpiderMonkey will use multiple threads, for performing JIT compilation and GC.  compilation can also be performed off main thread

[19:37:40.0688] <arai>
and flipping `gCanUseExtraThreads` to `false` disables them

[19:37:55.0991] <arai>
(not sure there's public API for it tho

[19:39:08.0629] <mgaudet>
confession: New test262 tests just imported found a few bugs in private-methods (semantics disagreement on spec I think) and ergonomic brand checks (haven't investigated yet). Thought i had quick fix for first, but haven't quite figured it out yet, so tomorrow problem. Landed and enabled other tests tho! 

[19:39:10.0485] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[19:40:10.0324] <arai>
then, apart from that, if you want to run JS code in multiple threads, you need to have JSRuntime (and JSContext) per each thread, and use it locally for each thread

[20:09:15.0117] <leveryd>
> <@arai:mozilla.org> what do you mean by "multi-thread" ?  run JS code in multiple threads, or utilize multiple threads for background task (parse, JIT, GC)?

i do not need to run JS code in multiple threads. i do not need JIT (because i will not run JS code).

[20:09:26.0305] <leveryd>
i only call reflect_parse many times, code is on "https://gist.github.com/leveryd/f4af9aaa9b9719023a2215b99e017322", i have asked some question about "parse js code" and thanks for your anwser.

i have two question.

if i flipping gCanUseExtraThreads to false, will it close GC and then result to memory leak? will it can speed up "spidermonkey"?


[20:09:48.0723] <leveryd>
 * i only call reflect_parse many times, code is on "https://gist.github.com/leveryd/f4af9aaa9b9719023a2215b99e017322", i have asked some question about "parse js code" and thanks for your anwser.

i have two question.

if i flipping gCanUseExtraThreads to false, will it close GC and then result to memory leak? will it speed up "spidermonkey"?


[20:13:07.0551] <sfink>
No, it will instead make GC (and various other things) happen on the main thread instead. It will just slow things down (assuming you have multiple cores). It will not cause any memory to leak.

[21:44:28.0898] <leveryd>
> <@arai:mozilla.org> it's necessary for each call, as long as you're passing different source for each call

if i call reflect_parse reusing the same cx, why it is necessary? the js source code information should not been stored in "chars"? 

[21:44:31.0189] <leveryd>
Parser<FullParseHandler, char16_t> parser(
      cx, options, chars.begin().get(), chars.length(),
      /* foldConstants = */ false, compilationInfo, nullptr, nullptr);

[22:24:34.0645] <arai>
leveryd: it's about `CompilationInfo::init` ?

[22:24:53.0124] <arai>
it initializes the internal state of current compilation

[22:25:01.0956] <arai>
that's not reusable for different compilation unit

[22:25:42.0672] <arai>
btw, if you've confirmed that it unnecessarily takes long time, ping me.  I should fix that

[22:52:06.0702] <leveryd>
arai: it seems  "CompilationInfo::init" consume a lot of cpu time in this flame graph.


[22:53:38.0115] <arai>
does your profiler provide tree view or something that shows more detailed info?

[22:55:55.0876] <leveryd>
i use "perf" and "https://github.com/brendangregg/FlameGraph" to make this flame graph.   what detailed info do you need? if you have recommend tool, please tell me.

[22:56:20.0737] <leveryd>
 * i use "perf" and "https://github.com/brendangregg/FlameGraph" to make this flame graph.   what detailed info do you need? if you have recommended tool, please tell me.

[22:56:46.0557] <arai>
at least absolute time, and call graph under the call

[23:00:41.0675] <arai>
`perf report` would show tree

[23:01:15.0413] <arai>
I don't remember if it shows time tho

[23:04:04.0164] <leveryd>
arai: perf report seems to show percent, not absolute time.  can you run perf report use "perf.data"?

[23:05:43.0143] <leveryd>
 * arai: perf report seems to show percent, not absolute time.  can you run "perf report" on "perf.data"?

[23:05:51.0044] <leveryd>
 * arai: perf report seems to show percent, not absolute time.  can you run "perf report" on "perf.data" file?

[23:09:16.0431] <arai>
I don't have `perf` installed on this machine.  I can check later

[23:28:34.0410] <arai>
leveryd:  I guess, the above file doesn't contain symbol info?

[23:32:32.0181] <arai>
so, running perf on my env shows only hex address

[23:32:54.0230] <leveryd>
i am trying to solve this.

[23:43:34.0039] <arai>
I think, instead of solving the symbol issue, it would be better checking the details on your own device

[23:43:52.0031] <arai>
then, if you know the total time, you can calculate the absolute time from the percentage

[23:44:52.0315] <arai>
 * I think, instead of solving the symbol issue, it would be better checking the details on your own device that has all necessary files

[23:54:58.0985] <leveryd>
the record time is 30 second, and `CompilationInfo::init` percent is  13.30%, so `CompilationInfo::init` consume 3.99 second？ i can not understand why we must need the absolute time, can not we conclude that `CompilationInfo::init` consume a lot of cpu time and it should be improved just by flame graph and his percent data?

[23:58:03.0640] <arai>
okay, if it's really 3.99 seconds, it sounds long

[23:58:28.0688] <arai>
what's the size of source code?

[23:58:42.0325] <arai>
I mean, the JS code that's passed to `Reflect.parse`

[00:01:35.0764] <arai>
(to be clear, the total time or absolute time is really necessary, because, if the total time was 1ms, 13.30% of 1ms doesn't sound something needs attention

[00:03:09.0098] <arai>
also, what function takes long under the `CompilationInfo::init` call?

[00:05:18.0489] <arai>
then, if it's the same data, `js::DefineDataProperty` takes longer than 4 seconds sounds really strange

[00:10:00.0463] <arai>
oh, just realized the SVG is interactive :P

[00:11:46.0609] <leveryd>
> <@arai:mozilla.org> I mean, the JS code that's passed to `Reflect.parse`

it always is "true".

[00:11:55.0760] <leveryd>
i put the code on "https://github.com/leveryd/demo_sm/blob/main/examples/xss.cpp"

[00:13:25.0603] <arai>
oh

[00:13:30.0720] <arai>
so it's not single call?

[00:13:47.0474] <arai>
maybe I'm misunderstanding what the graph shows. my apologies

[00:14:38.0691] <arai>
if it uses aggregate time for multiple calls, then the situation is different

[00:15:42.0068] <arai>
leveryd: is it correct that you're parsing `true` string many times?

[00:16:19.0257] <arai>
(I was thinking it's single call with large source, sorry!

[00:17:57.0831] <leveryd>
> <@arai:mozilla.org> leveryd: is it correct that you're parsing `true` string many times?

yes. i pass "true" string to reflect_parse function

[00:19:37.0831] <arai>
okay.  so, it's taking much time in creating `ScriptSourceObject`

[00:19:39.0669] <leveryd>
> <@arai:mozilla.org> leveryd: is it correct that you're parsing `true` string many times?

 * yes. i pass "true" string to reflect_parse function many times

[00:21:01.0826] <arai>
basically, `Reflect.parse` reuses the parsing part of normal compilation (parse, constant folding, bytecode emission, GC things instantiation)

[00:21:22.0207] <arai>
then, script source object is necessary at least for the latter steps

[00:21:44.0186] <arai>
maybe it can be skipped for `Reflect.parse`

[00:23:49.0384] <arai>
err, wait

[00:23:59.0164] <arai>
what version of SpiderMonkey are you using?

[00:24:46.0246] <leveryd>
> <@arai:mozilla.org> what version of SpiderMonkey are you using?

firefox-78.1.0

[00:24:47.0598] <arai>
ScriptSourceObject allocation is moved to later step in latest mozilla-central

[00:25:12.0552] <arai>
so that part should already be fixed

[00:25:43.0042] <leveryd>
ok, i will try to use latest version later.

[00:26:46.0060] <arai>
fixed by bug 1652472, so should be available from version 80 or later

[00:26:48.0924] <botzilla>
https://bugzil.la/1652472 — RESOLVED (tcampbell) — Defer ScriptSourceObject allocation for Stencil

[04:39:51.0685] <leveryd>
arai: i use firefox-88.0 to remake flame graph.  can js::DefineDataProperty be called less times? or can  js::DefineDataProperty can be improved to reduce cost cpu times?  what things can be done to reduce cost cpu time in reflect_parse?

[04:40:04.0715] <leveryd>
 * arai: i use firefox-88.0 to remake flame graph.  can js::DefineDataProperty be called less times? or can  js::DefineDataProperty can be improved to reduce cost cpu times?  what things can i do to reduce cost cpu time in reflect_parse?

[04:53:33.0663] <jandem>
leveryd: is that a `--disable-debug` build? I'd expect some of these frames to be inlined

[04:54:12.0921] <jandem>
`Reflect.parse` isn't really optimized though

[05:00:57.0953] <leveryd>
> <@jandem:mozilla.org> leveryd: is that a `--disable-debug` build? I'd expect some of these frames to be inlined

no. i use "--enable-debug --enable-optimize".  can "--disable-debug" can speed up? why?  it will skip some cpu instruction?

[05:04:23.0117] <jandem>
leveryd: yeah there are a lot more debug checks in `--enable-debug` builds that slow things down. We also don't inline as much

[05:05:26.0771] <leveryd>
ok. i will try "--disable-debug" later.

[07:06:24.0570] <sfink>
ouch, nice catch by jandem! Any timings with an `--enable-debug` build are useless. Not only will they be typically be much, much slower, they'll also be very unevenly slower so you can't infer anything about non-debug performance.

[07:51:24.0463] <mgaudet>
should add an if-debug wrapper around something like `js::Call`, or another function that shows up in profiles most of the time that is `js::YouAreRunningDebug__IfYouAreSeeingThisInAProfile_YourNumbersWillBeUninterpretable()` 

[07:54:38.0862] <sfink>
I like it

[07:54:54.0757] <sfink>
the Firefox profiler has a warning, if you happen to be using it

[10:34:21.0082] <mgaudet>
I have a fuzz bug which hints at the potential for something more gross. I'm looking for help constructing, if possible, the more gross outcome. 

Essentially, what I am looking for is a way (if possible! I'd be happy to find out this isn't really possible) to successfully reference a class's private method while defining the class; akin to the following

```
class A { 
  // define #x
  static #x() { } 
  [A.#x] = 1;
};
```
Now the above currently doesn't work; we get TDZ checked on A (_phew_). Is there potentially something that might work? (`this` also doesn't work, which is also good) 

[10:41:00.0275] <sfink>
dumb idea related to the getgname thing we were talking about during the JS/perf meeting, that I want someone to tell me is dumb: if getgname has to guard on the global's shape, could we store the shape up to the 23rd property of the global (in addition to its overall shape) and update it if the prefix of the shape changes?

[10:41:18.0711] <sfink>
"23rd" just means some part of the expected to be immutable prefix of the property list

[10:41:53.0485] <sfink>
if you do `global.newprop = 1`, then the index of `global.Map` doesn't change

[10:42:45.0977] <sfink>
so getgname would then guard on the prefixShape instead of the realShape

[10:43:06.0897] <sfink>
for globals only

[10:43:23.0952] <iain>
Not dumb

[10:43:52.0954] <iain>
The more generic version is noticing that the same argument about indices not changing also holds for user-defined properties, so long as nothing gets deleted

[10:44:35.0708] <iain>
So we can guard on a fuse that is broken when somebody deletes a global property

[10:44:43.0359] <sfink>
yeah, restricting it to globals was because it seemed like we could guarantee that globals would always have a prefixShape slot, and we could test that quickly with a flag

[10:45:02.0529] <iain>
Right, yeah, I meant user-defined properties on the global

[10:45:03.0105] <sfink>
(when updating shapes)

[10:45:06.0421] <sfink>
ah!

[10:45:08.0127] <sfink>
sorry, yes

[10:46:13.0405] <sfink>
hm, that's true. That would be independent of the length of the prefix, which is good. On the other hand, it would then fall back to previous behavior when deleting user-defined properties, which isn't strictly necessary if all you really care about is the prefix properties

[10:47:23.0710] <sfink>
but maybe people don't do that? People know deleting properties is bad, right?

[10:47:31.0934] <sfink>
(he says hopefully)

[10:54:25.0160] <iain>
I think we can probably do something with a generation counter where we guard that nothing has been deleted since the IC was created

[10:57:11.0799] <iain>
The other cool thing about fuses is that we can in theory omit the guard in warp scripts and instead register the script with the fuse itself, and invalidate the script if the fuse is broken

[10:58:16.0069] <sfink>
we used to have this thing called TI, you might have heard of it ;-)

[10:59:00.0131] <iain>
Yeah, fuses are basically "what if we had only the nice parts of TI"?

[12:06:14.0777] <iain>
liacds: Are you still working on bug 1697077? If you are, and you've run into any problems, please feel free to ask questions here or as a comment on the bug. If you're no longer working on it, please unassign yourself so that somebody else can work on it.

[12:06:16.0649] <botzilla>
https://bugzil.la/1697077 — NEW (itisaliya) — Add testing function for interrupting RegExp execution

[12:38:26.0116] <mehaboob_shariff>
iain: I received a review on the bugzilla page should I make any changes ?

[12:38:47.0863] <mehaboob_shariff>
> <@mehaboob_shariff:mozilla.org> iain: I received a review on the bugzilla page should I make any changes ?

for bug 1706190

[12:38:49.0245] <botzilla>
https://bugzil.la/1706190 — ASSIGNED (mehaboob097) — Simplify arguments to IRGenerator constructor

[12:41:58.0295] <iain>
mehaboob_shariff: Oh, it looks like you collided with bug 1705113, where we added a new kind of IRGenerator. Pull mozilla-central, rebase your patch on top of central (`hg rebase -s <patch id> -d central`), fix the constructor for NewArrayIRGenerator, and resubmit

[12:42:00.0080] <botzilla>
https://bugzil.la/1705113 — RESOLVED (jonco) — Add an optimized stub for NewArray operations and compile it in baseline

[12:44:07.0401] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: Oh, it looks like you collided with bug 1705113, where we added a new kind of IRGenerator. Pull mozilla-central, rebase your patch on top of central (`hg rebase -s <patch id> -d central`), fix the constructor for NewArrayIRGenerator, and resubmit

or I just found out there is line of code missing I could add that and resubmit?

[12:44:25.0680] <mehaboob_shariff>
a line of code*

[12:46:12.0177] <iain>
If your local copy already has `NewArrayIRGenerator`, you don't have to pull in new changes

[12:48:25.0854] <mehaboob_shariff>
Okay

[12:57:52.0801] <mehaboob_shariff>
> <@iain:mozilla.org> mehaboob_shariff: Oh, it looks like you collided with bug 1705113, where we added a new kind of IRGenerator. Pull mozilla-central, rebase your patch on top of central (`hg rebase -s <patch id> -d central`), fix the constructor for NewArrayIRGenerator, and resubmit

No need to commit again right?

[12:58:26.0892] <iain>
You don't need a separate commit; you can just amend the existing one

[12:58:53.0022] <iain>
(But you do need to commit those changes before submitting)

[12:59:22.0028] <iain>
So technically I should have said "fix the constructor, amend your changeset to include the changes, and resubmit"

[13:00:07.0742] <mehaboob_shariff>
> <@iain:mozilla.org> You don't need a separate commit; you can just amend the existing one

okay

[13:11:39.0472] <mehaboob_shariff>
done !


2021-04-23
[02:38:26.0493] <dbezhetskov>
it is interesting, when I run `jit_test.py --jitflags interp`, tests for asm.js runs too but with `--no-asmjs` cmd flag

[02:38:47.0678] <dbezhetskov>
is there any reason to do this?

[02:40:09.0905] <dbezhetskov>
afaik asm.js translates to into wasm and wasm in turn uses baseline and ion, so for interpreter only mode we shouldn't run asm.js tests, right?

[02:52:30.0339] <dbezhetskov>
 * afaik asm.js translates into wasm and wasm in turn uses baseline and ion, so for interpreter only mode we shouldn't run asm.js tests, right?

[02:55:01.0796] <arai>
that would at least add coverage for no-jit configuration/architecture case.  not sure how much beneficial it is tho

[02:56:20.0910] <arai>
 * that would at least add coverage for no-jit configuration/architecture case.  not sure how much beneficial it is, compared to the number of tests, tho

[09:08:50.0504] <iain>
By design, all asm.js is also valid JS. I have occasionally caught bugs in my JS code running the asm.js tests with `--no-asm-js`.

[09:09:33.0158] <iain>
(In particular, `testZOOB` has been valuable.)


2021-04-24
[05:12:27.0821] <liacds>
> <@iain:mozilla.org> liacds: Are you still working on bug 1697077? If you are, and you've run into any problems, please feel free to ask questions here or as a comment on the bug. If you're no longer working on it, please unassign yourself so that somebody else can work on it.

Hi, yes, sorry I am still working on it. The end of the semester got really busy :(

[06:47:59.0642] <mshariff>
liacds: I can try to help if you need any help

[06:48:19.0290] <mshariff>
 * liacds: I can try  if you need any help

[11:01:12.0132] <iain>
liacds: Okay, sounds good. Don't forget that the deadline to record your final application is coming up soon


2021-04-25
[12:18:15.0847] <ashcode>
Can someone suggest me, next good bug??My last bug was  [Bug 1696085](https://bugzilla.mozilla.org/show_bug.cgi?id=1696085) 
PS: I am outreachy applicant for the project Modernize internationalization in SpiderMonkey's regular expression engine

[12:18:17.0862] <botzilla>
https://bugzil.la/1696085 — ASSIGNED (cOde.A4sh) — Use js::EnumFlags for js::ObjLiteralFlags

[12:48:54.0183] <iain>
mshariff ashcode: You're both looking for new bugs. There are still some bugs in codetribute, but the pickings are getting slim. Bug 1688188 and bug 1434539 look most accessible, but they're both a step up from what you've done so far. Maybe take a look at those for now, and ask questions if you get lost/stuck.

[12:48:55.0878] <botzilla>
https://bugzil.la/1688188 — NEW (nobody) — Replace changes to GC parameters and zeal mode with auto classes in jsapi-tests

[12:48:56.0455] <botzilla>
https://bugzil.la/1434539 — NEW (nobody) — Register() should not create a garbage register, but an invalid register

[12:49:11.0860] <iain>
Everybody else: If you have any more good first bugs, we're on the market for them.

[13:00:31.0492] <mshariff>
> <@iain:mozilla.org> mshariff ashcode: You're both looking for new bugs. There are still some bugs in codetribute, but the pickings are getting slim. Bug 1688188 and bug 1434539 look most accessible, but they're both a step up from what you've done so far. Maybe take a look at those for now, and ask questions if you get lost/stuck.

Sure iain will have a look at it. Thank you for pointing towards it

[13:02:11.0079] <arai>
(reposting) https://bugzilla.mozilla.org/showdependencytree.cgi?id=622261&hide_resolved=1 has several good first/second bugs

[13:03:21.0943] <arai>
looks like the page requires login. https://bugzilla.mozilla.org/show_bug.cgi?id=622261 is the bug itself


2021-04-26
[22:20:03.0670] <arai>
gma-amg: the latest comment in bug 1434539 is you, right?  what's your question in particular?

[22:20:05.0638] <botzilla>
https://bugzil.la/1434539 — NEW (nobody) — Register() should not create a garbage register, but an invalid register

[22:24:13.0448] <gma-amg>
I'm confused about the code for 32-bit systems

[22:24:46.0546] <gma-amg>
And to start do I search up Register() in SearchFox ?

[22:29:07.0506] <arai>
what's your confusion?

[22:29:32.0555] <arai>
and yes, look for the definition of the `Register`, and verify the issue is still there

[22:29:50.0510] <arai>
that's the first step when start working on a bit old bug

[03:24:21.0299] <flx1101>
Hey, quick question:
I've noticed that different byte code is emitted for code in the global space vs code inside of `newGlobal().evaluate()`. For example for `Math.sin` it emits `CallIgnoresRv 1` in global space and `Call 1` if it's called like this: `newGlobal().evaluate("Math.sin(...)")`.

Does this mean that function calls inside of evaluate can't be eliminated by the JIT because it doesn't set `ignoresReturnValue`?

[03:29:29.0283] <arai>
to my understanding, "whether the return value is used or not" and "whether the call can be eliminated or not" are different concept.  

[03:30:17.0471] <arai>
`CallIgnoresRv` is for letting the callee function that some calculation inside the callee function can be optimized out

[03:31:35.0944] <arai>
the original purpose of `CallIgnoreRv` was to optimize away Promise object allocation in promise functions

[03:33:07.0633] <flx1101>
Thanks for your response!
Oh, I thought not using the return value was a requirement for elimination of the function call as a whole. I'm aware that it does require a bit more than just not using the return value (like not being effectful). 

[03:37:37.0575] <arai>
I think I misunderstood the question

[03:38:20.0219] <arai>
in the context of `evaluate` (or usual `eval`), each statement's result is set to the return value

[03:38:54.0051] <arai>
so, `SetRval` follows each statement's bytecode, instead of `Pop`

[03:40:08.0890] <arai>
so, I think it depends on how JIT handles `SetRval`

[03:40:16.0870] <arai>
in the top level code

[03:41:23.0060] <arai>
to be clear, that behavior applies only to the top-level code of evaluate/eval

[03:41:48.0413] <arai>
excluding functions inside it

[03:45:09.0794] <flx1101>
> <@arai:mozilla.org> to be clear, that behavior applies only to the top-level code of evaluate/eval

That does actually already answer my question since I'm actually not interested in the top-level of evaluate but rather code inside a function

[03:45:43.0407] <flx1101>
Are there any other differences between top-level code and top-level code within evaluate?

[03:45:53.0949] <flx1101>
 * Are there any other significant differences between top-level code and top-level code within evaluate?

[03:50:48.0330] <arai>
I'm not aware of any other significant differences in default configuration

[03:51:24.0144] <flx1101>
Okay, good to know, thanks for your help!

[03:51:39.0007] <arai>
you can pass compile options to `evaluate`, and that can control how the script is compiled

[03:52:11.0788] <arai>
see the output of `help(evaluate)`

[05:11:56.0133] <gma-amg>
> <@arai:mozilla.org> what's your confusion?

Hi, sorry for the late reply

[05:12:25.0576] <gma-amg>
So this part for the 32-bit system I'm still confused about

[05:12:41.0998] <gma-amg>
Also once I do make the changes, how am I supposed to test them?

[05:13:43.0883] <arai>
so, which part of that paragraphs confuses you?

[05:14:07.0266] <gma-amg>
How do I reference value and TypeReg?

[05:16:03.0614] <arai>
in SpiderMonkey, JavaScript value is encoded in 64-bit value.  on 64-bit system, it fits into single register.  so far, does it make sense?

[05:16:23.0263] <gma-amg>
Yes

[05:16:39.0475] <arai>
then, on 32-bit system, it doesn't fit into single register, so we use 2 registers

[05:18:37.0820] <arai>
then, JS value encodes multiple types of values.   int32, double, string, object, etc.   for things other than double, the actual value fits into 32-bit on 32-bit system, because the pointer fits into 32-bit

[05:19:53.0434] <arai>
so, those are stored into lower 32-bit, and that part is called "value", and the type information is stored into the higher 32-bit, that part is called "type" there

[05:19:59.0263] <arai>
so far, does it make sense?

[05:20:30.0489] <gma-amg>
Okay yes

[05:21:52.0329] <arai>
so, in the JIT code, when handling JS value, it uses 2 registers, one for "value" and one for "type"

[05:23:05.0743] <arai>
they're "value" and "TypeReg" mentioned there

[05:23:35.0313] <arai>
then, to my understanding "reference" in the sentence means the code that uses them

[05:24:40.0625] <arai>
(so, it's not you but the code who refers them

[05:25:31.0301] <arai>
 * so, in the JIT code, when handling JS value, it uses 2 `Register`s, one for "value" and one for "type"

[05:28:14.0554] <gma-amg>
Alright

[05:28:23.0408] <gma-amg>
Also in thie above code

[05:28:56.0746] <gma-amg>
The reporter had mentioned that for the 32-bit part, the left hand side should be data._type and datat._payload

[05:28:59.0006] <arai>
oh, sorry, my explanation was wrong about the lower 32-bit.  it's called "payload" there

[05:29:15.0733] <gma-amg>
 * The reporter had mentioned that for the 32-bit part, the left hand side should be data._type and data._payload

[05:29:56.0957] <gma-amg>
So in the right hand side do I just put it as TypeReg().code() and payloadReg.code() ?

[05:30:32.0948] <arai>
what do you mean?

[05:31:23.0636] <arai>
btw, when pasting code, you don't have to use image. you can paste the code in the message  https://docs.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks

[05:32:07.0000] <gma-amg>
> <@arai:mozilla.org> what do you mean?

Should it be data._type = TypeReg().code ?

[05:32:25.0534] <arai>
no

[05:32:29.0597] <gma-amg>
As mentioned in this comment

[05:32:56.0798] <gma-amg>
Sorry I'm kinda confused myself 🥲

[05:33:13.0749] <arai>
`typeReg()` is a method. not global function

[05:34:06.0421] <arai>
before modifying the code, I'd suggest understanding what the problem is

[05:36:13.0176] <gma-amg>
Sorry, I was just trying to understand the previous patches and suggestions before getting started myself

[05:36:19.0359] <gma-amg>
> <@arai:mozilla.org> before modifying the code, I'd suggest understanding what the problem is

Will do

[05:38:10.0165] <arai>
try checking what the `data` there is

[05:38:26.0883] <arai>
same for `value`

[05:55:22.0838] <ashcode>
Hello!! I saw the bug mentioned by iain but both are being solved by two people, so i thought to search in buzilla for bugs, i liked few of the bugs but i dont know are these doable in 1-2 weeks or not, can u please help me choose any one of them ? or a different one .These are the bugs links :(This is my 5th bug)
https://bugzilla.mozilla.org/show_bug.cgi?id=1346178
https://bugzilla.mozilla.org/show_bug.cgi?id=1341265
https://bugzilla.mozilla.org/show_bug.cgi?id=1576885
PS:I m outreachy applicant,I want a step up from my previous bug https://bugzilla.mozilla.org/show_bug.cgi?id=1696085

[06:00:21.0810] <jandem>
the first two are hard and not a great fit

[06:01:03.0094] <jandem>
not sure about 1576885, maybe Ted or arai would be able to mentor

[06:01:27.0151] <jandem>
does anyone have a good 5th bug?

[06:15:23.0214] <tcampbell>
Bug 1576885 might be good to try. It is nice because if you get it to compile, it probably means everything works. First steps would be looking at code and drawing out for yourself the relation between `SharedImmutableString`, `SharedImmutableStringCache`, `SharedImmutableString::Inner`, and `StringBox`. The objective would be to make the `SharedImmutableString::cache` field into `StringBox` due to the observation that number of `SharedImmutableString` (the handle/reference/pointer..) must be more than number of `StringBox` (the data) since the StringBox may be shared by multiple users. This should save memory.

[06:15:25.0361] <botzilla>
https://bugzil.la/1576885 — NEW (nobody) — Reduce size of Maybe<SharedImmutableString>

[06:16:02.0612] <tcampbell>
ashcode: ^

[06:21:46.0027] <ashcode>
Yh sure i ll start wrkin on 1576885 then!! 🙂Thank you tcampbell 

[06:21:59.0951] <ashcode>
 * Yh sure i ll start wrkin on 1576885 then!! 🙂Thank you tcampbelljandem 

[06:28:13.0556] <tcampbell>
great. feel free to ask questions. The code is slightly tricky at first, but at the end the day it is just trying to have multiple smart pointers to the same string data, and the compiler should tell us when we are making mistakes

[09:00:19.0580] <sfink>
mshariff: I tried to answer your questions in bug 1688188. Let me know if it is still unclear.

[09:00:22.0121] <botzilla>
https://bugzil.la/1688188 — NEW (nobody) — Replace changes to GC parameters and zeal mode with auto classes in jsapi-tests

[09:10:13.0412] <mshariff>
> <@sfink:mozilla.org> mshariff: I tried to answer your questions in bug 1688188. Let me know if it is still unclear.

Okay I have seen it . Thank you for the clarification.! 

[13:26:15.0046] <iain>
New PLDI paper uses differential fuzzing to find standard conformance bugs in JS engines: https://arxiv.org/pdf/2104.07460.pdf

[13:27:32.0812] <iain>
They found bugs in every engine they tested, but unlike everybody else, the only issues they found in SM were in old versions and had already been fixed

[13:29:02.0957] <iain>
 (They tested up to 78, but didn't find any bugs in anything more recent than 59)

[14:31:09.0187] <smaug>
sfink: I'm having trouble to understand what could cause the regression

[14:31:22.0653] <smaug>
both use nsITimer::TYPE_ONE_SHOT_LOW_PRIORITY etc

[14:49:40.0503] <sfink>
smaug: you and me both

[14:50:27.0097] <sfink>
it is only on a very small number of tests, so it's not like scheduling behavior could have changed in some significant way

[14:50:37.0021] <sfink>
it *shouldn't* have changed at all, though

[14:50:58.0277] <sfink>
the things that showed changes appear to be low-core systems, fwiw

[14:51:10.0811] <smaug>
I'll go though the patch still once more :)

[14:51:23.0113] <smaug>
 * I'll go through the patch still once more :)

[14:51:25.0750] <sfink>
in looking at the profiles, the only thing I see is some slight differences in when some scripts get compiled and run

[14:52:30.0388] <sfink>
and it seems like something, probably one of those, produces the visual difference that appears at a particular vsync. In the regressed versions, a similar vsync happens and doesn't seem to have anything to draw. The difference shows up on the next vsync.

[14:53:48.0248] <sfink>
(it happens without the patch as well, but much less often)

[14:56:01.0423] <sfink>
I guess the biggest difference is the timing of the SVGLoaded thing. I don't know what it is, but maybe it's what's getting drawn? I should do a profile with screenshots.

[15:19:53.0937] <sfink>
smaug: I commented on the phabricator revision. I don't think the Android changes are clearly positive or negative, and they don't show up on beta at all. The only clear regression is on osx.

[15:20:15.0923] <smaug>
oh, interesting

[15:21:49.0223] <smaug>
sfink: FWIW, visual metrics are more important thatn fcp or loadtime and such

[15:23:15.0714] <sfink>
ok. I guess FirstVisualChange is in the improvement list.

[15:23:34.0674] <sfink>
I'm assuming that's vismet, because it's a spelled-out name?

[15:25:00.0146] <sfink>
actually, saying they don't show up at all on android is a lie. The current alert shows some small ~5% regressions in various tests.

[15:26:48.0651] <smaug>
it is mostly the speedindex part which matters

[15:28:37.0316] <sfink>
I'm trying to think of how this could cause a different scheduling decision when we don't have enough threads (cores?) for everything queued up. I guess if the queueing of timers and helper threads comes in a different order? I don't know what I'm talking about. (And I don't even see why the timer would be created at a different time.)

[15:43:27.0147] <smaug>
sfink: commented. Could it be the SetWantMajorGC  call?

[15:43:56.0017] <smaug>
Doesn't that possibly lead to extra SetNeedsFullGC(); call

[15:49:02.0200] <sfink>
Hm. It could, but only if the reason is DOM_WINDOW_UTILS and aObj is nullptr. We shouldn't be getting DOM_WINDOW_UTILS in the tests that are showing the difference, should we?

[15:49:42.0074] <sfink>
and on the osx profiles I've been staring at, there are no major GCs in the timed region. One minor GC, but that's it.

[15:50:05.0872] <sfink>
I don't know about Android. I hadn't been paying attention to it, since the osx one was larger and more reliable.

[15:50:52.0485] <smaug>
I was just looking at what could change the behavior

[15:51:05.0152] <sfink>
right. I agree, this is a theoretical behavior difference.

[15:51:15.0983] <sfink>
 * right. I agree, this is a behavior difference.

[15:51:25.0588] <smaug>
full GC some time before test run might affect numbers

[15:52:26.0416] <sfink>
this *is* only on warm runs. I'll try removing the difference in some hacky way and see what happens. Thanks!

[15:54:40.0530] <smaug>
couldn't that call be just later

[15:54:55.0909] <smaug>
before the early returns in the method

[15:55:18.0504] <sfink>
you mean after?

[15:55:29.0786] <smaug>
er, yes :)

[15:56:32.0622] <sfink>
it looks like it doesn't want to override the reason with a new one, so yes, I think you're right


2021-04-27
[02:07:14.0198] <gma-amg>
arai: Hi, prolly a stupid question but how do I check if my code compiles? Also, how can I run the build tests (for both 32-bit and 64-bit systems) on my windows?

[02:07:59.0099] <arai>
gma-amg: have you compiled SpiderMonkey JS shell before?

[02:08:10.0386] <arai>
https://firefox-source-docs.mozilla.org/js/build.html

[02:09:12.0480] <gma-amg>
Do you mean if I've built SpiderMonkery before?

[02:09:19.0007] <arai>
yes

[02:09:27.0237] <gma-amg>
Like yeah I've done the steps in the website you've linked

[02:09:45.0749] <arai>
you're on windows, right?

[02:09:54.0230] <gma-amg>
Yeah

[02:10:10.0024] <arai>
if so, the build you've done is 64-bit

[02:10:19.0361] <arai>
so you can test 64-bit build with the steps

[02:11:47.0839] <arai>
then, about 32-bit, you'll need `ac_add_options --target=i686-pc-mingw32` line in your mozconfig, to tell the build system that you want 32-bit build

[02:12:53.0523] <arai>
it would be better creating yet another mozconfig file for it, with different MOZ_OBJDIR path, so that they use separate object directory

[02:13:25.0212] <gma-amg>
Okay cool, thank you ^-^

[02:18:28.0117] <gma-amg>
This just popped up, do I just run mach clobber?

[02:18:41.0682] <Ms2ger>
Yep

[02:18:51.0562] <gma-amg>
Okay thanks :)

[02:36:21.0291] <gma-amg>
I've got this error for value.valueReg.code() but I don't know how to fix this?

[02:36:45.0607] <arai>
have you located the error message?

[02:36:50.0790] <arai>
in the output

[02:37:05.0414] <gma-amg>
> <@arai:mozilla.org> have you located the error message?

Yes

[02:37:24.0556] <arai>
does the error message make sense?

[02:39:30.0634] <gma-amg>
It's asking if I meant to call it with no arguments, so I'm thinking maybe instead of value.valueReg.code() I should use value.code() instead

[02:39:44.0077] <gma-amg>
I guess I'll just try out what I said

[02:40:18.0031] <arai>
the code snippet below the error message points the function

[02:41:11.0517] <arai>
do you see what part of the code is the "member function" ?

[02:41:57.0326] <gma-amg>
> <@arai:mozilla.org> do you see what part of the code is the "member function" ?

Yeah, valueReg() is the member function

[02:42:25.0371] <arai>
yes, correct

[02:42:52.0198] <arai>
but you don't have `()` in the code

[02:43:11.0301] <arai>
that's what the error message and the snippet is saying

[02:43:14.0797] <gma-amg>
Ohhhh

[02:43:22.0992] <gma-amg>
Okay lol got it thanks

[04:24:32.0690] <gma-amg>
```
MOZ_IMPLICIT TypedOrValueRegister(ValueOperand value)
      : type_(MIRType::Value) {
#if defined JS_PUNBOX64
    data.value = value.valueReg().code();
#elif defined JS_NUNBOX32
     data._type = type.typeReg().code();
     data._payload = payload.payloadReg().code();  
#else
#   error "Bad architecture"
#endif
  }

[04:25:08.0425] <gma-amg>
^in the above code, I'm not sure how to use typeReg() and payloadReg() (for 32-bit system)

[04:25:43.0383] <gma-amg>
Since we're only using value from ValueOperand

[04:28:00.0189] <gma-amg>
 * arai: ^in the above code, I'm not sure how to use typeReg() and payloadReg() (for 32-bit system)

[04:50:58.0448] <arai>
gma-amg: try checking the definition of ValueOperand

[04:53:21.0411] <gma-amg>
> <@arai:mozilla.org> gma-amg: try checking the definition of ValueOperand

So for the 32 bit, ValueOperand has type and payload, but I was wondering how I'd have to pass it to TypedOrValueRegister

[04:56:55.0798] <arai>
what's the current diff?

[04:57:48.0782] <gma-amg>
What do you mean?

[04:58:33.0484] <arai>
you're starting from the previous patch, right?

[04:58:52.0963] <arai>
what's the definition of `TypedOrValueRegister` right now?

[05:00:10.0344] <arai>
also, what do you mean by "only using value" in the above sentence?

[05:00:18.0406] <gma-amg>
> <@arai:mozilla.org> you're starting from the previous patch, right?

https://bugzilla.mozilla.org/attachment.cgi?id=8968285&action=diff

[05:00:54.0916] <arai>
yes, it's previous diff.   and I think you've modified some

[05:02:24.0038] <gma-amg>
Yes, I've just changed "data.value._type = value.TypeReg().code();" to "data._type = type.TypeReg().code();"

[05:02:39.0903] <gma-amg>
Same way for payload

[05:02:59.0378] <arai>
I see

[05:02:59.0780] <gma-amg>
I didn't submit the patch yet since I was getting errors for the 32 build system

[05:03:13.0780] <arai>
so no other changes to `TypedOrValueRegister` ?

[05:03:59.0283] <arai>
can you locate the change for `TypedOrValueRegister::U` in the patch?

[05:06:14.0235] <gma-amg>
> <@arai:mozilla.org> so no other changes to `TypedOrValueRegister` ?

Yeah there are other changes, but mostly the modifications to the previous patch

[05:06:23.0673] <gma-amg>
> <@arai:mozilla.org> can you locate the change for `TypedOrValueRegister::U` in the patch?

this is the union, right?

[05:06:47.0972] <arai>
wait, if there's any other change, please share the diff

[05:07:32.0274] <gma-amg>
'''
union U {
    AnyRegister::Code typed;
#if defined JS_PUNBOX64
    Register::Code value;
#elif defined JS_NUNBOX32
    Register::Code _type;
    Register::Code _payload;
#else
#   error "Bad architecture"
#endif
  } data;

[05:07:55.0611] <gma-amg>
^sorry i don't know what happened here

[05:08:09.0135] <arai>
to use code block, use backtick instead of single quote

[05:08:09.0437] <gma-amg>
Should I submit the patch so you would understand better?

[05:08:24.0166] <arai>
you don't have to submit

[05:08:29.0898] <arai>
just pastebin the output of `hg diff`

[05:08:46.0458] <arai>
also, https://docs.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks for pasting code block

[06:51:00.0665] <gma-amg>
Hi, could you tell me how to use pastebin? I've looked online and the first step is to clone the repos, but the sites seem to have some errors

[06:52:52.0362] <Ms2ger>
You can also put it on https://gist.github.com/ if that's easier

[06:53:32.0854] <gma-amg>
Oh cool, thanks!

[06:57:37.0880] <gma-amg>
arai: https://gist.github.com/gma-amg/9c6519b0b49d2b8a551efbdecb388b9b

[06:57:43.0563] <gma-amg>
^here's the diff

[06:57:59.0282] <gma-amg>
I had a confusion about  MOZ_IMPLICIT TypedOrValueRegister

[06:58:28.0250] <gma-amg>
Since it seems to be getting only value from ValueOperand

[07:01:31.0254] <arai>
gma-amg: can you describe the confusion?

[07:02:51.0364] <arai>
in the diff, you've replaced `value` with `type` and `payload`, from the previous patch, I guess?

[07:03:05.0159] <arai>
what was the reasoning?

[07:06:30.0646] <arai>
on 32-bit, the definition of `ValueOperand` is different.  do you see it?

[07:07:02.0024] <gma-amg>
I thought since we're using data._type, I should use _type to get the required function

[07:07:18.0485] <gma-amg>
But that was showing an error, so I tried with type instead

[07:07:23.0909] <gma-amg>
> <@arai:mozilla.org> on 32-bit, the definition of `ValueOperand` is different.  do you see it?

Yeah I see it

[07:09:04.0401] <arai>
as you see, `TypedOrValueRegister` receives `ValueOperand value`, so you only have that.

[07:09:12.0677] <arai>
there's no `type` or `payload` variable

[07:09:35.0353] <arai>
then, what you're looking for is inside `ValueOperand`

[07:16:59.0261] <arai>
then, to be clear, `_type` is a field of `union U`.  and what `TypedOrValueRegister` has is `data` field, with `U` type

[07:17:15.0216] <arai>
so, in the constructor, `data` refers the field

[07:40:35.0944] <gma-amg>
Yeah, finally got the build succeddful, thanks for explaining ^-^

[07:41:04.0660] <gma-amg>
Now while submitting the code for review, who do I mention as the reviewer?

[07:41:15.0125] <gma-amg>
Lars or Arai?

[07:43:09.0633] <arai>
I can try reviewing

[09:51:08.0107] <jonco>
caroline: arai sdetar sorry I disappeared suddenly earlier, my internet cut out

[10:51:54.0274] <nbp>
sfink: I do not see the local time displayed in the spreadsheet

[10:52:36.0503] <sfink>
nbp: oh, sorry, arai let me know it wasn't working, so I deleted it.

[10:52:47.0474] <sfink>
I'm seeing if I can test locally by setting TZ

[10:52:59.0002] <nbp>
ok

[11:00:39.0009] <sfink>
darn, if I set the timezone of the spreadsheet, it works. I guess when you're viewing the sheet from another time zone, you get the timezone of the creator? Bleh.

[12:34:37.0805] <mgaudet>
where we doing the wikimo work? Or did I miss read the schedule?

[12:35:20.0731] <mgaudet>
tcampbell: ^ 

[12:35:33.0124] <tcampbell>
in 30 min

[12:35:37.0294] <tcampbell>
people wanted to eat

[12:35:52.0247] <mgaudet>
Fair!

[14:29:03.0239] <mshariff>
who do I add as reviewer for bug 1688188 sfink or jonco 

[14:29:07.0588] <botzilla>
https://bugzil.la/1688188 — NEW (nobody) — Replace changes to GC parameters and zeal mode with auto classes in jsapi-tests

[14:29:22.0867] <sfink>
you can use me

[14:29:44.0722] <mshariff>
okay

[15:54:52.0883] <tcampbell>
sfink: this was my result of running `python3 bootstrap.py --app=js`
```
Running `c:\mozilla-build\python3\python3.exe d:\moz-unified\mach bootstrap --application-choice js`
usage: mach [global arguments] bootstrap [command arguments]
mach: error: argument --application-choice: invalid choice: 'js' (choose from 'Firefox for Desktop Artifact Mode', 'Firefox for Desktop', 'GeckoView/Firefox for Android Artifact Mode', 'GeckoView/Firefox for Android', 'browser_artifact_mode', 'browser', 'mobile_android_artifact_mode', 'mobile_android')
```

[15:55:18.0208] <tcampbell>
so I think you changes to mach bootstrap would work

[15:55:28.0298] <sfink>
oh, good!

[15:55:34.0981] <sfink>
thanks


2021-04-28
[21:26:12.0748] <mshariff>
I had already checked using clang-format before making a submit, It did not show any errors

[21:28:22.0069] <arai>
mshariff: looks like it lacks a whitespace before `{`

[22:11:00.0219] <mshariff>
Okay ill check it out 

[22:27:01.0429] <mshariff>
actually I have already given a whitespace

[22:27:16.0485] <arai>
can you provide the URL for the diff?

[22:27:41.0647] <mshariff>
sure

[22:27:46.0784] <mshariff>
https://phabricator.services.mozilla.com/D113592

[22:28:06.0855] <arai>
what does `hg diff` say ?

[22:29:06.0528] <arai>
the uploaded patch still lacks the space. so I think your change is either not yet committed, or not yet submitted

[22:29:36.0960] <mshariff>
```-class AutoGC{
+class AutoGC {
   JSContext* cx_;
   JSGCParamKey key_;
   uint32_t value_;

  public:
-  explicit AutoGC(JSContext* cx, JSGCParamKey key, uint32_t value) : cx_(cx), key_(key), value_(value) {
+  explicit AutoGC(JSContext* cx, JSGCParamKey key, uint32_t value)
+      : cx_(cx), key_(key), value_(value) {
     JS_GetGCParameter(cx_, key_);
     JS_SetGCParameter(cx_, key_, value_);
     JS::PrepareForFullGC(cx_);
     JS::NonIncrementalGC(cx_, GC_SHRINK, JS::GCReason::DEBUG_GC);
   }
-  ~AutoGC() {
-    JS_ResetGCParameter(cx_, key_);
-  }
+  ~AutoGC() { JS_ResetGCParameter(cx_, key_); }
 };```

[22:30:05.0347] <arai>
is it a part of hg diff output?

[22:30:21.0285] <arai>
if so, it means that the result of format isn't committed

[22:30:57.0255] <mshariff>
```--- a/js/src/jsapi-tests/tests.h
+++ b/js/src/jsapi-tests/tests.h
@@ -522,31 +522,30 @@ class ExternalData {

   static void freeCallback(void* contents, void* userData) {
     auto self = static_cast<ExternalData*>(userData);
     MOZ_ASSERT(self->contents() == contents);
     self->free();
   }
 };

-class AutoGC{
+class AutoGC {
   JSContext* cx_;
   JSGCParamKey key_;
   uint32_t value_;

  public:
-  explicit AutoGC(JSContext* cx, JSGCParamKey key, uint32_t value) : cx_(cx), key_(key), value_(value) {
+  explicit AutoGC(JSContext* cx, JSGCParamKey key, uint32_t value)
+      : cx_(cx), key_(key), value_(value) {
     JS_GetGCParameter(cx_, key_);
     JS_SetGCParameter(cx_, key_, value_);
     JS::PrepareForFullGC(cx_);
     JS::NonIncrementalGC(cx_, GC_SHRINK, JS::GCReason::DEBUG_GC);
   }
-  ~AutoGC() {
-    JS_ResetGCParameter(cx_, key_);
-  }
+  ~AutoGC() { JS_ResetGCParameter(cx_, key_); }
 };

 #ifdef JS_GC_ZEAL
 /*
  * Temporarily disable the GC zeal setting. This is only useful in tests that
  * need very explicit GC behavior and should not be used elsewhere.
  */
 class AutoLeaveZeal {```

[22:31:08.0434] <mshariff>
this is the complete output

[22:31:12.0228] <mshariff>
of hg diff

[22:31:36.0935] <arai>
yes, it looks like the result of clang-format

[22:31:57.0347] <arai>
if you run `./mach clang-format` on the file, it modifies the file, but it doesn't commit or amend

[22:32:12.0649] <arai>
so, you need to commit or amend after that

[22:32:14.0193] <mshariff>
okay

[22:32:27.0710] <mshariff>
but I ran clang-format before I made a commit

[22:32:43.0852] <arai>
are you using git ?

[22:32:50.0849] <arai>
oh, you said hg

[22:33:01.0777] <arai>
(if it was git, git has staging area, and it might explain)

[22:33:09.0865] <mshariff>
yeah im using hg

[22:33:52.0255] <arai>
then, I'm not sure what happened.  but, anyway, you can amend it and submit again, so that the lint error goes away

[22:34:08.0269] <mshariff>
sure

[00:28:17.0169] <arai>
gma-amg: do you have linux machine or VM that you can use for testing the failure?  it looks like the failure happens only on linux 32bit environment (either x86 or arm 32bit)

[00:28:49.0124] <gma-amg>
> <@arai:mozilla.org> gma-amg: do you have linux machine or VM that you can use for testing the failure?  it looks like the failure happens only on linux 32bit environment (either x86 or arm 32bit)

No unfortunately :/

[00:38:21.0466] <arai>
do you have enough disk space to setup VM?

[00:38:59.0684] <gma-amg>
I think so

[00:39:32.0609] <arai>
then, try setting up VirtualBox, and then prepare linux VM (64-bit)

[00:40:15.0142] <arai>
and compile 32-bit binary there, and check if you can reproduce the assertion failure there

[00:41:17.0309] <arai>
gma-amg: oh, also, before that, can you check if the failure happens for you on windows 32-bit binary?

[00:41:41.0996] <arai>
it fails while running `1659595.js` on `jit-test`

[00:42:05.0220] <arai>
err

[00:42:12.0037] <arai>
please forget about linux VM for now

[00:42:28.0413] <arai>
I think, linux 32 bit and windows 32 bit are using different test options on automation

[00:42:35.0138] <arai>
it might explain why it happens only on linux

[00:43:28.0178] <gma-amg>
so do i just run jit-test?

[00:43:53.0963] <arai>
`./mach jit-test --jitflags=all 1659595.js`

[00:44:08.0693] <arai>
it will run the failing testcase with all jit flag combinations

[00:45:04.0104] <arai>
if the failure happens there, you can debug it on windows

[00:45:30.0701] <arai>
just to make sure, please use mozconfig for 32-bit build, when running the command

[00:51:39.0460] <arai>
oh

[00:51:58.0187] <arai>
that wasn't correct.  windows 32 bit build *fails* on automation

[00:52:35.0620] <arai>
just that the harness didn't catch it

[00:52:51.0050] <arai>
so it should fail on your environment as well

[00:53:15.0303] <gma-amg>
Yeah I got the same failure

[00:53:32.0995] <arai>
nice!  so please try debugging it

[00:53:42.0522] <arai>
I'll file a bug for the test harness issue

[01:09:45.0390] <arai>
so, the issue seems to be in jit-test harness that didn't catch the error properly, or somehow override the exit status

[01:10:12.0520] <arai>
the log says `Exit Code: 0`, while there are many TEST-UNEXPECTED-FAIL

[01:10:53.0248] <arai>
sfink: do you have any ideas what's going on?

[01:12:27.0617] <arai>
sorry, forgot to paste link.

[01:12:33.0607] <arai>
sfink: it's this job https://treeherder.mozilla.org/jobs?repo=try&group_state=expanded&revision=41d4245d7d9a05f6f96f334d5aefdfebcf5aba19&selectedTaskRun=Ce90P6ajR72-QQlwnDmSyA.0

[01:14:23.0259] <arai>
I wonder if it's related to timeout

[01:15:45.0510] <arai>
 * I wonder if it's related to timeout (I don't see explicit message in the log tho

[01:21:12.0386] <arai>
filed bug 1708113

[01:21:13.0849] <botzilla>
https://bugzil.la/1708113 — NEW (nobody) — SpiderMonkey job exits with 0 status even if there's failure

[01:27:41.0734] <arai>
 * so, the issue seems to be in jit-test harness (or autospider, or more enclosing script?) that didn't catch the error properly, or somehow override the exit status

[04:56:40.0916] <yulia>
who is joining for the website work?

[05:13:34.0364] <nbp>
Same room as before?

[05:15:46.0550] <yulia>
i guess? we can split from there

[05:17:23.0315] <nbp>
ok.

[05:18:28.0575] <jandem>
probably makes sense to just use that room for everything

[07:02:21.0415] <sfink>
arai: I have seen a problem where something crashes and leaves behind a minidump, but doesn't report failure (either with an exit code or TEST-UNEXPECTED-FAIL). I have never seen it claim to pass after it printed a TEST-UNEXPECTED-FAIL. I'll look at it.

[07:02:54.0467] <arai>
thanks!

[07:35:27.0246] <nbp>
yulia: light/dark mode seems to work (even if the colors are not ideal yet). I had a button to press in the devtools to switch away from light mode.

[07:35:41.0701] <yulia>
ah cool!

[07:35:54.0793] <yulia>
the colours don't need to be ideal just yet, we can get the basics in and tweak

[07:37:30.0100] <nbp>
(and my browser strangely seems to be in light mode by default …)

[07:38:38.0874] <evilpie>
https://spidermonkey.dev/ seems to 404 though

[08:12:56.0434] <sfink>
yulia: ^ that's what I see too right now.

[08:13:56.0616] <yulia>
ah, that might be that we switched master to production

[08:14:22.0854] <yulia>
the redesign is on spidermonkey-redesign.netlify.com

[08:14:27.0469] <yulia>
lemme see if i can fix that 404

[08:15:06.0900] <yulia>
huh, thats weird

[08:15:18.0302] <yulia>
nothing has been merged yet so it isn't from the redesign

[08:21:16.0516] <yulia>
ok, hopefully i retriggered the build

[08:23:15.0402] <yulia>
yep, it is back up, thanks for catching that

[08:30:00.0905] <sfink>
thanks!

[09:16:40.0458] <ashwiniwankhede>
Hello!
I was working on bug 1520434 and while running the jstests test I get Regressions for certain tests
What does regressions actually mean?

[09:16:42.0313] <botzilla>
https://bugzil.la/1520434 — NEW (nobody) — Improve the error messages when creating unaligned typed arrays

[09:19:42.0023] <sfink>
I think it's just a list of test failures. The two labels seems to be "REGRESSIONS" and "TIMEOUTS"

[09:20:39.0405] <arai>
above the list, I think you've got error message for each.  try checking each of them, for the details for how it fails

[09:22:35.0043] <ashwiniwankhede>
well this is listed above for each test. 

[09:24:05.0955] <ashwiniwankhede>
rc = 3221225477 this is comman for every REGRESSION. I could not find a reference to rc or 3221225477. What should that mean?

[09:24:12.0773] <arai>
oh, I was expecting it to be more verbose

[09:24:35.0925] <arai>
try running each test alone, by passing the path from non262, with `--show-output`

[09:24:42.0742] <arai>
it will show some more context

[09:25:05.0018] <mgaudet>
ashwiniwankhede: I have a sneaking suspicion that those huge return codes indicate crashes that are going to need to be investigated with the debugger

[09:25:30.0900] <mgaudet>
ashwiniwankhede: I'm still open to taking a peek at your WIP patch to help see if there's obvious things that need to be rectified

[09:26:48.0352] <sfink>
that return code is 0xc0000005, for what it's worth. I don't know how they're encoded. But that doesn't matter much, you'll need the output and if that doesn't show anything, a debugger. (Or stare at the code change.)

[09:27:39.0393] <ashwiniwankhede>
> <@mgaudet:mozilla.org> ashwiniwankhede: I'm still open to taking a peek at your WIP patch to help see if there's obvious things that need to be rectified

yes I will wip patch my iteration. 

[09:27:43.0845] <ashwiniwankhede>
> <@sfink:mozilla.org> that return code is 0xc0000005, for what it's worth. I don't know how they're encoded. But that doesn't matter much, you'll need the output and if that doesn't show anything, a debugger. (Or stare at the code change.)

Okay.

[09:27:55.0523] <arai>
I wonder, how do people debug jstests (or jit-test) on windows?  does --debug or --debugger work there?

[09:28:33.0787] <sfink>
hm, that's a good question. You could run it under Visual Studio, I guess?

[09:28:40.0702] <ashwiniwankhede>
`--show-output` did not return anything additional. 

[09:28:56.0720] <mgaudet>
yeah; if it's crashing you may not get much more

[09:29:05.0117] <sfink>
I doubt --debugger will work; I don't think it's implemented for that command?

[09:29:07.0086] <sfink>
I should check.

[09:29:30.0784] <sfink>
oh, it passes it to jit-test.py, so it does exist

[09:29:38.0830] <sfink>
but how you could hook that up to VS, I don't know

[09:30:29.0369] <arai>
hm, okay, in that case I think the first step is to pass `--show-cmd`, to get the exact command line

[09:30:52.0740] <arai>
and use that in visual studio, maybe


2021-04-29
[17:40:10.0908] <sfink>
tcampbell: maybe you're already ahead of me here, but when I tried to run the spidermonkey embedding examples, they crashed because mozjs.so is compiled with JS_64BIT and the example is not, resulting in sizeof(JS::shadow::Object)==32 in the example code but 24 in mozjs.

[17:40:42.0448] <tcampbell>
Oh that explains my failure. Yikes

[17:41:28.0886] <tcampbell>
I think the pkg-config stuff is supposed to handle that?

[17:41:34.0227] <tcampbell>
We might have broken it

[17:42:01.0972] <sfink>
Oh, maybe that's where it's supposed to come from? In the mozjs build objdir, it comes from js-confdefs.h

[17:42:05.0710] <sfink>
I think. I should verify.

[17:42:29.0617] <tcampbell>
I think the pkg-config is supposed to force include the jscobfdefs

[17:42:38.0414] <sfink>
ah, ok

[17:43:44.0346] <tcampbell>
This seems like a big footgun

[17:44:19.0090] <tcampbell>
I wonder if adding a static assert to jsapi.h might be a good idea

[17:44:47.0223] <sfink>
I had one somewhere, once. It either got lost, or it only handled DEBUG/JS_DEBUG.

[17:45:01.0307] <sfink>
but I have to run. I may be back later tonight.

[17:51:45.0069] <tcampbell>
oh.. https://hg.mozilla.org/mozilla-central/log/tip/js/src/build/js.pc.in =\

[17:51:52.0025] <tcampbell>
seems like we went back and forth on this a lot

[18:10:21.0021] <tcampbell>
Ah, we removed uses of JS_64BIT from public headers, but then let a few slip back in in Bug 1689413

[18:10:22.0729] <botzilla>
https://bugzil.la/1689413 — RESOLVED (jandem) — Remove ObjectGroup

[22:08:24.0526] <gma-amg>
Hi, I was wondering what we should put for the internship project timeline for our Outreachy application?

[22:10:15.0412] <iain>
gma-amg: I wrote up a sample timeline [here](https://docs.google.com/document/d/1Nfbl2_onGgCCdWYXdRFe-bmchEb9nBlM_jfMSgLfgdI/edit?usp=sharing)

[22:11:08.0192] <gma-amg>
Okay, thanks!

[01:24:53.0715] <yulia>
I've narrowed down the font choice

[01:25:01.0260] <yulia>
PT sans, PT serif, or Mozilla Fira

[01:25:14.0224] <yulia>
ill push all three and you folks can try them out

[01:25:30.0829] <yulia>
for the code samples we can use moz-fira

[01:31:40.0101] <jandem>
yulia: on the home page, I like how "In-depth Articles" looks, but the links before/after it look a bit too dense/compact? maybe it's a different font or size?

[01:32:11.0857] <yulia>
https://github.com/mozilla-spidermonkey/mozilla-spidermonkey.github.io/issues/47

[01:32:31.0953] <yulia>
jandem: good point -- i think we need to adjust that as well

[01:32:38.0127] <yulia>
the issue is that the links are a different ffont

[01:32:48.0947] <yulia>
 * the issue is that the links are a different font

[01:33:06.0122] <yulia>
It doesn't looks as good as I thought it would, so let's make it the regular font for links

[01:33:46.0998] <yulia>
pushing this change for now and then heading out for a walk

[01:34:03.0098] <jandem>
yulia: can I fix the <title> elements to match the jekyll page title? I was thinking about adding a 'head' include file with this

[01:35:16.0398] <yulia>
yes!

[01:35:35.0179] <yulia>
also, if you pull now, you will have a lot of fonts to play with

[01:36:25.0565] <jandem>
nice, will TAL

[01:37:06.0393] <jandem>
 * nice, will take a look

[05:20:59.0414] <arai>
I wonder if the margin/padding above/below the logo should be more narrow on mobile view

[05:23:59.0224] <yulia>
logo should maybe be smaller now that i am looking again

[05:24:04.0067] <yulia>
on the desktop size

[05:30:41.0580] <yulia>
nbp: did you end up making the changes to the sections so that the bar looks nice?

[05:31:08.0578] <nbp>
yulia: not yet, I was looking back at it right now, to figure how to split the index.markdown

[05:31:44.0087] <yulia>
ok

[05:32:11.0654] <yulia>
I will take on font adjustments, and filling out docs/contributing/etc pages

[05:33:55.0559] <nbp>
I looked at _layout/_blog, I see that we have a `assign posts = site.posts`, I presume this related to the `_posts` directory, but I am not sure how.

[05:36:33.0928] <sdetar>
+

[05:36:41.0080] <arai>
nbp: meeting time?

[05:37:50.0515] <yulia>
we are doing the jsapi.h split now

[05:40:07.0480] <nbp>
https://bugzilla.mozilla.org/show_bug.cgi?id=jsapi

[05:51:14.0084] <yulia>
https://searchfox.org/mozilla-central/source/js/src/jsapi.h#95-149

[06:04:57.0991] <@allstarschh|afk>
> <@yulia:mozilla.org> https://searchfox.org/mozilla-central/source/js/src/jsapi.h#95-149

more callbacks  in https://searchfox.org/mozilla-central/source/js/src/jsapi.h#1754-1776

[07:30:44.0087] <lth>
sdetar, no zoom link for the meeting?

[07:31:49.0284] <iain>
lth: Same link as previous meetings

[07:31:50.0532] <sfink>
grab it off an old meeting invite

[07:31:58.0108] <sdetar>
Lets use the one we did for other meetings

[07:31:58.0572] <lth>
(posted in doc)

[07:32:02.0606] <sfink>
it's the same link, it looks like it just got missed on this one

[08:12:22.0708] <mgaudet>
confession: My intent to ship [did go out](https://groups.google.com/a/mozilla.org/g/dev-platform/c/NZKUZiN1gag). Awesome

[08:12:25.0879] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[09:01:27.0061] <mgaudet>
confession: Wrote up my [pernosco workflow](www.mgaudet.ca/technical/2021/4/29/my-pernosco-workflow) 

[09:03:26.0754] <mgaudet>
 * confession: Wrote up my [pernosco workflow](www.mgaudet.ca/technical/2021/4/29/my-pernosco-workflow)

[09:04:22.0750] <mgaudet>
Erm... that link got eaten. https://www.mgaudet.ca/technical/2021/4/29/my-pernosco-workflow 

[09:14:32.0118] <sfink>
awesome, thanks!

[09:16:57.0332] <sfink>
mgaudet: something merged `--` into an em-dash in `—debugger=pernosco-record` in your writeup

[09:20:25.0162] <mgaudet>
sfink: thanks -- fixed! 

[11:11:20.0783] <tcampbell>
sfink: can a DeadProxy be wrapped in a CCW?

[11:13:07.0958] <sfink>
Um, good question. When something is nuked, it loses its target. But if you accessed that from another compartment... I guess?

[11:13:12.0018] <sfink>
you can test this in the shell

[11:13:32.0002] <tcampbell>
yeah, doing that now

[11:14:06.0049] <tcampbell>
(This is just a minor fuzzbug in shell where we assumed testing functions are passed normal things..)

[11:26:22.0082] <mccr8>
Can that happen? A dead proxy started out as a CCW, so do we have CCWs to CCWs?

[11:27:04.0677] <mccr8>
I'd hope wrapping a DeadProxy gets you a new DeadProxy but I could be wrong.

[11:30:44.0093] <sfink>
oh, good point. Yeah, it seems like that's how it *should* work.

[11:31:43.0399] <tcampbell>
I seem to get a dead-object error when trying to rewrap. Pulling up in debugger now to find out what code causes this.

[11:33:33.0299] <sfink>
or maybe it just throws

[11:36:02.0702] <tcampbell>
```js

g1 = newGlobal({newCompartment: true});
g1.x = 42;

nukeAllCCWs();

g2 = newGlobal({newCompartment: true});
g2.x = 42;
```

[11:36:27.0827] <tcampbell>
 * ```js

g1 = newGlobal({newCompartment: true});
g1.x = 42;

nukeAllCCWs();

g2 = newGlobal({newCompartment: true});
g2.x = 42; // Why does this throw? shouldn't a new global work after nuking?
```

[11:36:32.0921] <tcampbell>
 * ```js
g1 = newGlobal({newCompartment: true});
g1.x = 42;

nukeAllCCWs();

g2 = newGlobal({newCompartment: true});
g2.x = 42; // Why does this throw? shouldn't a new global work after nuking?
```

[11:38:36.0711] <tcampbell>
so.. turns out you can wrap a DeadProxy with a CCW

[11:39:14.0666] <tcampbell>
I don't think it really matters at all

[11:47:43.0242] <sfink>
did you figure out the answer to why you can't access the new global above? I was experimenting with the behavior of object identity and nuking, but that gets in the way.

[11:48:00.0881] <yulia>
nbp: i think i fixed the line issue

[11:49:37.0639] <yulia>
I used an hr element, it is still a bit of a hack but it more or less works

[11:52:20.0383] <tcampbell>
No, I just switched to `nukeCCW` to make the objects

[12:53:59.0566] <borane>
If a function gets optimized and JITed inside a web worker, will it be compiled again in the main thread or will the code from the worker be shared and reused?

[12:55:08.0788] <sfink>
compiled again

[12:56:31.0277] <sfink>
web workers have an almost entirely separate JS runtime

[12:57:15.0186] <sfink>
but even on the main thread, there are many ways that something would need to be compiled separately in different environments

[13:00:14.0909] <mshariff>
Hello!! I hope everyone is in pink of health.

[13:01:16.0784] <mshariff>
I'd like to get my hands on one more bug if possible before I submit my final application.

[13:21:53.0990] <mgaudet>
Q: Four years later, [the pipeline operator](https://github.com/tc39/proposal-pipeline-operator) proposal is still at stage 1; yet, [we have a prototype implementation](https://bugzilla.mozilla.org/show_bug.cgi?id=1405943) that's been hanging around, presumably dead code for a long time. I haven't even tried to build it. 

I'd argue we should delete that implementation until the pipeline operator makes it to stage 3: thoughts? 

[13:23:40.0941] <mgaudet>
(though, I do note the repo has had some work recently, and we talked about it a while back. Now that it's paged back in a bit) 

[13:23:58.0651] <mgaudet>
mshariff: I'd encourage you to do your final application now, to avoid missing the deadline 

[13:24:15.0924] <mgaudet>
mshariff: (We're also sorely short of good bugs that would fit into that time scope) 

[13:25:25.0765] <mshariff>
> <@mgaudet:mozilla.org> mshariff: I'd encourage you to do your final application now, to avoid missing the deadline

The deadline has been changes to 3rd May

[13:25:48.0656] <mshariff>
> <@mgaudet:mozilla.org> mshariff: I'd encourage you to do your final application now, to avoid missing the deadline

 * The deadline has been postponed to 3rd May

[13:26:35.0677] <mgaudet>
mshariff: Only a few days, most of which are a weekend :) 

[13:28:03.0673] <mshariff>
Okay then I'd probably make my final application and have a go through the project 

[13:28:32.0217] <arai>
mgaudet: yes, it's fine removing the impl for now.  that was the plan (remove it if there's no progress for a while)

[13:29:03.0036] <iain>
mshariff: It is easier for us to take into account any additional contribution you make after submitting your final application than it would be to fix things if you didn't submit in time, so err on the side of submitting early

[13:29:21.0339] <mgaudet>
arai: Ok. I'll open a bug about it (just noticed it and thought it was super curious it even existed! Especially the age); probably won't tackle myself, at least not immediately

[13:31:09.0451] <mshariff>
> <@iain:mozilla.org> mshariff: It is easier for us to take into account any additional contribution you make after submitting your final application than it would be to fix things if you didn't submit in time, so err on the side of submitting early

sure

[13:31:46.0477] <mshariff>
Thank you everyone :)

[13:35:41.0918] <tcampbell>
confession: Fixing Bug 1706937 is leading to reworking how debugger-script-element works..

[13:35:43.0628] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[13:35:44.0831] <botzilla>
https://bugzil.la/1706937 — NEW (tcampbell) — Hit MOZ_CRASH(error getting source element) at shell/js.cpp:4734

[15:00:12.0046] <sfink>
mgaudet: heh. Just reloaded to see your fixed version before closing the tab. Is `--debuger=pernosco-record` for removing snot from the command?

[15:00:35.0192] <mgaudet>
fff

[15:01:15.0938] <mgaudet>
Alright; that one should be fixed too 

[15:01:50.0463] <mgaudet>
confession: Almost have a fixed version of ergonomic brand checks, but fighting precedence rules, and it's too damn hot in this office to think straight,  (and EOD). 


2021-04-30
[23:00:08.0072] <arai>
just realized js-ctypes module no more exists in the module list

[23:00:55.0313] <arai>
the history says it's folded into JavaScript module

[23:02:07.0973] <arai>
so now I'm *effectively* a module peer of js-ctypes :)

[23:09:19.0092] <jandem>
I'm so sorry :p 

[00:10:06.0477] <arai>
I have been wanting to be!

[00:23:44.0777] <jandem>
arai: it's mostly in maintenance mode but if you'd be available for reviews, triaging incoming bugs etc that would be great 

[00:24:41.0536] <jandem>
maybe the bugzilla component can be added to the team's normal bug triage queue, if it isn't already 

[00:25:33.0893] <arai>
okay, I'll try :)

[02:40:07.0305] <gma-amg>
Hi arai , still haven't been able to fix the error in the 32-bit build test :/ could you tell me if the assertion failure for
```
MOZ_ASSERT(!currentOpRegs_.has(reg), "Register is in use");
```
means that currentOpRegs does have a register? 

[02:42:39.0343] <arai>
the assertion means "`!currentOpRegs_.has(reg)` should be true, otherwise we're in unexpected state".  so, if it fails, `!currentOpRegs_.has(reg) == false`, thus `currentOpRegs_.has(reg) == true`

[02:42:54.0947] <arai>
so, `currentOpRegs_` unexpectedly has `reg`

[02:49:18.0439] <gma-amg>
Ohh alright

[06:22:00.0650] <yulia>
nbp: i did this yesterday but im not sure if it is the right thing: https://bugzilla.mozilla.org/show_bug.cgi?id=1708469

[06:23:25.0207] <nbp>
yulia: I presume jonco and jandem my be more opinionated than me on this question.

[07:05:32.0587] <tcampbell>
oh wait.. I have a conflicting patch with Part 1

[07:05:42.0892] <tcampbell>
I renamed it to JSSourceElementCallback

[07:07:41.0230] <tcampbell>
also, adding more includes to jsapi.h seems to defeat the purpose? I think I we can move the callback if we put an include in Runtime.h instead (which seems to be what needs the definition0

[07:08:38.0015] <nbp>
tcampbell: the idea of adding these to `jsapi.h` is that we do not break anybody yet, and `jsapi.h` can remain as a bloated header for the lazy.

[07:09:19.0346] <yulia>
k, i can move the callback -- i was really nervous about those

[07:37:19.0393] <jonco>
yulia:  I like splitting out the Zone related functions into their own header

[07:38:34.0541] <jonco>
I'm wondering about the name though.  Zone *is* a GC concept but it might be better if the header was just Zone.h to match the name of the class.

[07:38:44.0074] <yulia>
sure!

[07:40:07.0743] <jonco>
thanks

[07:40:53.0641] <jonco>
how are we coordinating splitting up jsapi.h?

[07:41:59.0719] <yulia>
i took the first 500 lines

[07:42:04.0467] <yulia>
nbp took the next

[07:42:10.0564] <yulia>
etc.

[07:42:15.0092] <jonco>
hah ok

[07:42:23.0639] <yulia>
i think we had up to 2000? but it will need a second pass

[07:44:16.0788] <jonco>
I can take strings to exceptions

[07:44:53.0826] <yulia>
cool, ill rebase my stuff off ted's work and then get this up for proper review

[07:45:11.0175] <yulia>
or... wait i can just drop the first patch

[07:45:14.0789] <yulia>
yeah

[08:35:29.0229] <nbp>
jandem: Do you know if there is a good name which would unify Compartments and Realms to put iterators over both in a single file?

[08:36:18.0341] <nbp>
https://phabricator.services.mozilla.com/D113792  SegmentIterators.h, PrivacyBoundaries.h, …?

[08:36:57.0278] <tcampbell>
I don't have any great names, but might default to just "RealmIterators" and throw compartments in there too

[08:37:13.0902] <nbp>
ok, works for me.

[08:37:17.0246] <tcampbell>
since we don't really have non-realm things in a compartment? (or do we? :s)

[08:37:36.0597] <tcampbell>
naming is hard..

[08:37:39.0780] <jandem>
yeah I can't think of anything better either

[08:40:51.0808] <yulia>
hm, ok. i can rebase my stuff off that

[08:43:44.0759] <yulia>
oh, no that won't overlap

[08:43:45.0638] <yulia>
cool

[09:11:00.0293] <nbp>
jonco: You should have come yesterday ;)

[09:11:14.0375] <nbp>
I see you are opening tons of new bugs to clean-up jsapi.

[09:12:15.0366] <jonco>
nbp: yeah I guess I missed the meeting where you talked about htis

[09:12:26.0659] <jonco>
 * nbp: yeah I guess I missed the meeting where you talked about this

[09:13:47.0372] <jonco>
cleaning this up has been something I've wanted to happen for ages

[09:17:36.0454] <nbp>
/me wonders if we should invent a game named "Secret Waldo" …

[10:49:01.0965] <iain>
Is there any reason to still have `ReturnFromIC` as the last op in every CacheIR sequence? Pre-Warp we would sometimes have `TypeMonitorResult`, but now we could just make it implicit

[12:45:02.0387] <iain>
tcampbell: Do you remember what our guarantees are wrt canonical NaNs?

[12:45:47.0405] <iain>
Is it the case that on a given machine, every NaN (that is intended to represent a NaN) will be bit-identical?

[12:46:29.0182] <tcampbell>
there are pos/neg NaNs

[12:46:41.0463] <iain>
Do we actually generate them?

[12:46:59.0751] <tcampbell>
yes

[12:47:04.0943] <tcampbell>
hardware neg

[12:47:09.0167] <tcampbell>
 * hardware float neg

[12:47:37.0286] <tcampbell>
https://searchfox.org/mozilla-central/source/js/public/Value.h#287-289

[12:47:57.0327] <tcampbell>
ARM/X64 disagree with the defaults, yet we do no special casing

[12:48:44.0916] <iain>
I'm asking about within a single machine

[12:48:57.0903] <iain>
Context: I'm looking at Object.is, which React uses to diff properties

[12:49:45.0608] <tcampbell>
yes, both will appear

[12:50:21.0376] <iain>
Do you know when?

[12:50:31.0725] <tcampbell>
on ARM, you'll see a difference depending on if it was 0/0 or or canonicalized from something like Float64Array

[12:50:43.0779] <iain>
Ahhhhh

[12:50:45.0822] <tcampbell>
I think you just need to JIT `-x`

[12:52:29.0622] <tcampbell>
https://searchfox.org/mozilla-central/search?q=symbol:_ZN2js3jit23MBinaryArithInstruction18setMustPreserveNaNEb&redirect=false

[12:52:49.0761] <tcampbell>
Looks like WASM is more restrictive?

[12:53:38.0547] <tcampbell>
 * <del>Looks like WASM is more restrictive?</del> WASM allows non-canonical nans internally

[12:53:56.0075] <iain>
Okay, yeah, I can confirm that -x does flip the sign bit on a NaN

[12:54:29.0143] <tcampbell>
https://searchfox.org/mozilla-central/source/js/src/jit/x86-shared/MacroAssembler-x86-shared-inl.h#252-260

[12:54:53.0609] <tcampbell>
I think I looked at getting us to a unique NaN but quickly gave up

[12:55:06.0549] <tcampbell>
particularly because of this -x stuff

[12:55:14.0321] <iain>
So we can still do a fast check and return true if two values are bit-identical, but NaNs are one of the cases we'll need to handle specifically in the slow path

[12:56:01.0320] <iain>
(Conveniently, `Object.is(0,-0) == false`)

[12:57:30.0509] <tcampbell>
ah, that is kind of annoying it is the only remaining case

[12:58:43.0851] <iain>
Nah, we still have to do more expensive checks for strings and bigints too

[12:59:05.0311] <tcampbell>
oh, right.. not all strings are atoms.. 

[12:59:11.0915] <tcampbell>
it is getting very friday

[13:04:20.0205] <iain>
Right now we are optimizing `Object.is` as if it were `===`, which is often/usually going to be monomorphically typed, but I think `Object.is` is much more likely to be used in polymorphic cases like [this](https://github.com/facebook/react/blob/master/packages/shared/shallowEqual.js#L43)

[13:22:57.0917] <tcampbell>
So with `Object.is` you can say true if it is an exact match in all cases?

[13:36:19.0646] <iain>
Yeah, unless I'm missing something

[13:38:23.0981] <iain>
(Which I don't think I am. NaN !== NaN is the only case I can think of where x !== x, but `Object.is(NaN, NaN) == true`

[13:38:30.0613] <iain>
 * (Which I don't think I am. NaN !== NaN is the only case I can think of where x !== x, but `Object.is(NaN, NaN) == true`)

[13:49:01.0362] <mgaudet>
confession: Round two: Late in the day re-landing private fields/methods; I expect it to stick this time tho. 

[13:49:03.0335] <botzilla>
Seen! Your update will eventually appear on https://robotzilla.github.io/histoire

[13:49:44.0854] <mgaudet>
(thanks for the stamp evilpie :) )

[13:52:50.0589] <evilpie>
np, just happy we are shipping

[13:54:30.0578] <mgaudet>
Me as well... me as well 

[14:48:22.0754] <mgaudet>
confession: Uploaded patch the fix last remaining problem for ergonomic brand checks. 

[16:05:43.0941] <iain>
confession: Spent the week slowly eradicating every trace I could find of the old arguments optimization. Putting up the first half of the patches; second half on Monday

